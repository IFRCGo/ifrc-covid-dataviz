import * as React from 'react';
import * as common from 'select2-component';
export * from 'select2-component';
/**
 * @public
 */
export declare class Select2 extends React.PureComponent<{
    data: common.Select2Data;
    value?: common.Select2UpdateValue;
    disabled?: boolean;
    minCountForSearch?: number;
    placeholder?: string;
    customSearchEnabled?: boolean;
    multiple?: boolean;
    update?: (value: common.Select2UpdateValue) => void;
    open?: () => void;
    search?: (text: string) => void;
    keydown?: (e: React.KeyboardEvent) => void;
    keyup?: (e: React.KeyboardEvent) => void;
    keypress?: (e: React.KeyboardEvent) => void;
    minimumInputLength?: number;
    maximumInputLength?: number;
    keepSearchText?: boolean;
}, unknown> {
    private hoveringValue?;
    private option;
    private isOpen;
    private focusoutTimer?;
    private innerSearchText;
    private lastScrollTopIndex;
    private mounted?;
    private value;
    private searchInputElement;
    private resultsElement;
    private get searchText();
    private set searchText(value);
    private get dropdownStyle();
    private get containerStyle();
    private get selectionStyle();
    private get isSearchboxHidden();
    private get searchStyle();
    UNSAFE_componentWillReceiveProps(nextProps: {
        value?: common.Select2UpdateValue;
    }): void;
    private updateOptionAndHoveringValue;
    UNSAFE_componentWillMount(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private renderSelection;
    private renderResult;
    private getFilteredData;
    private getOptionStyle;
    private mouseenter;
    private click;
    private toggleOpenAndClose;
    private focusout;
    private moveUp;
    private moveDown;
    private selectByEnter;
    private select;
    private keyDown;
    private keyUp;
    private keyPress;
    private onChange;
    private isSelected;
    private isDisabled;
    private focusSearchboxOrResultsElement;
    private removeSelection;
    private cancelFocusoutTimer;
}
