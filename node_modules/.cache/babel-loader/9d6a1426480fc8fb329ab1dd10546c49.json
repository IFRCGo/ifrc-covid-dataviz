{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { addCommas } from './HelperFunctions';\nimport { filter } from './App';\nlet maxX = 1000;\nlet maxY = 100;\nlet maxZ = 1000000;\nlet xScale;\nlet yScale;\nlet zScale;\nlet groupedData = [];\nlet width = 600;\nlet height = 236;\nlet x = 40;\nlet y = 54;\nexport function drawBubblechart(data, options, filter) {\n  console.log(data);\n  data.vGroup.forEach(function (d, i) {\n    data.equity_data.forEach(function (dd, ii) {\n      if (d[0] == dd.country_iso3) {\n        dd.people_fully_vaccinated_per_hundred = parseFloat(d.people_fully_vaccinated_per_hundred);\n        dd.people_vaccinated_per_hundred = parseFloat(d.people_vaccinated_per_hundred);\n        dd.total_vaccinations = parseFloat(d.total_vaccinations);\n        dd.total_vaccinations_per_hundred = parseFloat(d.total_vaccinations_per_hundred);\n      }\n    });\n  });\n  console.log(data); // maxX = d3.max(groupedData, function(d,i){\n  //     return d.cumulative_cases;\n  // })\n  // maxY = d3.max(groupedData, function(d,i){\n  //     return d.cumulative_cases;\n  // });\n  // maxZ = d3.max(groupedData, function(d,i){\n  //     return d.cumulative_cases;\n  // });\n\n  xScale = d3.scaleLinear().range([0, width]).domain([0, maxX]);\n  yScale = d3.scaleLinear().range([height, 0]).domain([0, maxY]);\n  zScale = d3.scaleSqrt().domain([200000, 1310000000]).range([2, 30]);\n  const svg = d3.select('#bubblechart-tab').append('g').attr('transform', 'translate(' + x + ', ' + y + ')').attr('id', 'bubblechart');\n  svg.append('rect').attr('width', width).attr('height', height).attr('fill', 'steelblue'); // create y-axis\n\n  svg.append(\"g\").call(d3.axisLeft(yScale).ticks(3)); // create x-axis\n\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(xScale).ticks(3)); // var rows = svg.selectAll('.bar-row')\n  // .data(groupedData.filter(d=>d.region!=='OTH'))\n  // .enter()\n  // .append('g')\n  // .attr('class', 'bar-row')\n  // .attr('transform', function(d,i){\n  // \t// return 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n  // });\n}\nexport function updateBubblechart(options, data) {\n  maxX = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  maxY = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  xScale = d3.scaleLinear().range([0, width]).domain([0, maxX]);\n  yScale = d3.scaleLinear().range([0, height]).domain([0, maxY]);\n}\nexport default drawBubblechart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Bubblechart.js"],"names":["d3","moment","colors","addCommas","filter","maxX","maxY","maxZ","xScale","yScale","zScale","groupedData","width","height","x","y","drawBubblechart","data","options","console","log","vGroup","forEach","d","i","equity_data","dd","ii","country_iso3","people_fully_vaccinated_per_hundred","parseFloat","people_vaccinated_per_hundred","total_vaccinations","total_vaccinations_per_hundred","scaleLinear","range","domain","scaleSqrt","svg","select","append","attr","call","axisLeft","ticks","axisBottom","updateBubblechart","max","cumulative_cases"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxX =1000;\nlet maxY = 100;\nlet maxZ = 1000000;\nlet xScale; \nlet yScale; \nlet zScale; \nlet groupedData = [];\nlet width = 600;\nlet height = 236;\nlet x = 40;\nlet y = 54;\n\nexport function drawBubblechart(data, options, filter) {\n\n    console.log(data);\n\n    data.vGroup.forEach(function(d,i){\n        data.equity_data.forEach(function(dd,ii){\n            if(d[0] == dd.country_iso3){\n                dd.people_fully_vaccinated_per_hundred = parseFloat(d.people_fully_vaccinated_per_hundred);\n                dd.people_vaccinated_per_hundred = parseFloat(d.people_vaccinated_per_hundred);\n                dd.total_vaccinations = parseFloat(d.total_vaccinations);\n                dd.total_vaccinations_per_hundred = parseFloat(d.total_vaccinations_per_hundred);\n\n            }\n        })\n    })\n    console.log(data);\n    \n    // maxX = d3.max(groupedData, function(d,i){\n    //     return d.cumulative_cases;\n    // })\n\n    // maxY = d3.max(groupedData, function(d,i){\n    //     return d.cumulative_cases;\n    // });\n\n    // maxZ = d3.max(groupedData, function(d,i){\n    //     return d.cumulative_cases;\n    // });\n\n    xScale = d3.scaleLinear()\n\t.range([0, width])\n\t.domain([0, maxX]);\n\n    yScale = d3.scaleLinear()\n\t.range([height, 0])\n\t.domain([0, maxY]);\n\n    zScale = d3.scaleSqrt()\n    .domain([200000, 1310000000])\n    .range([2, 30]);\n\n    const svg = d3.select('#bubblechart-tab').append('g').attr('transform', 'translate('+x+', '+y+')')\n    .attr('id', 'bubblechart');\n\n    svg\n    .append('rect')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('fill', 'steelblue');\n\n    // create y-axis\n    svg.append(\"g\")\n    .call(d3.axisLeft(yScale).ticks(3));\n\n    // create x-axis\n    svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(xScale).ticks(3));\n\n\n    // var rows = svg.selectAll('.bar-row')\n\t// .data(groupedData.filter(d=>d.region!=='OTH'))\n\t// .enter()\n\t// .append('g')\n\t// .attr('class', 'bar-row')\n\t// .attr('transform', function(d,i){\n\t// \t// return 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t// });\n\n}\n\nexport function updateBubblechart(options,data) {\n    \n\n    maxX = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    maxY = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    xScale = d3.scaleLinear()\n\t.range([0, width])\n\t.domain([0, maxX]);\n\n    yScale = d3.scaleLinear()\n\t.range([0, height])\n\t.domain([0, maxY]);\n\n  \n\n   \n\n}\n\nexport default drawBubblechart;\n"]},"metadata":{},"sourceType":"module"}