{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { addCommas } from './HelperFunctions';\nimport { filter } from './App';\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases;\nlet xScaleDeaths;\nlet xScaleVaccines;\nlet labelWidth;\nconst margin = {\n  left: 20,\n  top: 0,\n  right: 58\n};\nlet rcSize;\nlet groupedData = [];\nexport function drawRegionchart(data, options, filter) {\n  const barSpacing = 0.1; // reset region values to zero\n\n  data.regions.forEach(function (d, i) {\n    d.population = 0;\n    d.cumulative_deaths = 0;\n    d.cumulative_cases = 0;\n    d.cumulative_vaccines = 0;\n  }); // loop through countries and calculate region totals\n\n  data.country.forEach(function (d, i) {\n    data.regions.forEach(function (dd, ii) {\n      if (dd.code == d.ifrc_region) {\n        if (d.population > 0 && d.who_daily_latest) {\n          if (d.who_daily_latest.cumulative_cases > 0) dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n          if (d.who_daily_latest.cumulative_deaths > 0) dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths || 0;\n          dd.population += d.population;\n        }\n\n        if (d.population > 0 && d.vaccine_daily_latest) {\n          dd.cumulative_vaccines += d.vaccine_daily_latest.total_vaccinations || 0;\n        }\n      }\n    });\n  }); // calculate regions per 100k values using total population for each region\n\n  data.regions.forEach(function (d, i) {\n    d.cumulative_cases_per_100k = d.cumulative_cases / (d.population / 100000);\n    d.cumulative_deaths_per_100k = d.cumulative_deaths / (d.population / 100000);\n    d.cumulative_vaccines_per_100k = d.cumulative_vaccines / (d.population / 100000);\n    if (!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n    if (!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n    if (!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n  }); // get maximum values for each series\n\n  maxVaccinations = d3.max(data.regions, function (d, i) {\n    return d.cumulative_vaccines_per_100k;\n  });\n  maxCases = d3.max(data.regions, function (d, i) {\n    return d.cumulative_cases_per_100k;\n  });\n  maxDeaths = d3.max(data.regions, function (d, i) {\n    return d.cumulative_deaths_per_100k;\n  }); // append region chart container\n\n  const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0); // get dimensions\n\n  rcSize = {\n    x: regionChartContainer.attr('x'),\n    y: regionChartContainer.attr('y'),\n    width: regionChartContainer.attr('width'),\n    height: regionChartContainer.attr('height')\n  }; // create scales\n\n  xScaleCases = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxCases]);\n  xScaleDeaths = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxDeaths]);\n  xScaleVaccines = d3.scaleLinear().range([labelWidth, rcSize.width - margin.right - labelWidth]).domain([0, maxVaccinations]); // create svg container\n\n  const svg = d3.select('#layout').append('g').attr('transform', 'translate(' + rcSize.x + ', ' + rcSize.y + ')').attr('id', 'region_chart'); // calculate chart row height\n\n  var rowHeight = rcSize.height / (data.regions.length - 1); // remove OTH\n  // create rows\n\n  var rows = svg.selectAll('.bar-row').data(data.regions.filter(d => d.code !== 'OTH')).enter().append('g').attr('class', 'bar-row').attr('transform', function (d, i) {\n    return 'translate(0,' + (i * rowHeight + margin.top) + ')';\n  }); // create region labels\n\n  var label = rows.append('text').attr('y', rowHeight / 2).attr('x', margin.left - 5).attr('class', function (d, i) {\n    return 'bar-labels bar-label-' + d.code;\n  }).style('alignment-baseline', 'middle').style('font-size', '11px').attr('opacity', 1).attr('fill', '#000').text(function (d, i) {\n    if (d.code === 'AM') return 'Americas';\n    if (d.code === 'EU') return 'Europe';\n    if (d.code === 'AF') return 'Africa';\n    if (d.code === 'ME') return 'Middle East and North Africa';\n    if (d.code === 'AP') return 'Asia-Pacific';\n  }).style('text-anchor', 'end');\n  labelWidth = rows.node().getBBox().width + margin.left;\n  label.attr('x', labelWidth + 89);\n  labelWidth = labelWidth + 94;\n  d3.selectAll('.timeBar').attr('opacity', 1); // create fading background click area\n\n  var rowBg = rows.append('rect').attr('y', 0).attr('x', 0).attr('width', labelWidth).attr('height', rowHeight - 2).style('opacity', 0).attr('fill', 'grey').style('cursor', 'pointer').attr('class', function (d, i) {\n    return 'bar-bg-' + d.code;\n  }).attr('data-id', function (d, i) {\n    return d.code;\n  }).on('mouseover', function (d) {\n    d3.select(this).style('opacity', 0.1);\n  }).on('mouseout', function () {\n    d3.select(this).style('opacity', 0);\n  }).on('click', function (d, i) {\n    var t = d3.select(this).attr('data-id');\n    filter([t], 'regionchart');\n  }); // draw bars\n\n  var bars = rows.append('rect').attr('id', function (d, i) {\n    return 'bar-' + d.code;\n  }).attr('data-id', function (d, i) {\n    return d.code;\n  }).attr('class', 'region-bar').attr('width', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k);\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k);\n    if (options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines_per_100k);\n  }).attr('x', labelWidth).style('outline', 'none').style('cursor', 'pointer').attr('y', rowHeight * barSpacing - 1).attr('height', rowHeight - rowHeight * barSpacing * 2).style('fill', function (d) {\n    return colors.regions[d.code];\n  }).attr('opacity', 1).on('click', function (d, i) {\n    var t = d3.select(this).attr('data-id');\n    filter([t], 'regionchart');\n  }).on('mouseover', function (d) {\n    var dat = d3.select(this.parentNode).datum();\n  }).on('mouseout', function () {// d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n  }); // append data value labels\n\n  var dataLabel = rows.append('text').text(function (d) {\n    if (options.region_chart_toggle == 'cases') return addCommas(Math.round(d.cumulative_cases_per_100k));\n    if (options.region_chart_toggle == 'deaths') return addCommas(Math.round(d.cumulative_deaths_per_100k));\n    if (options.region_chart_toggle == 'vaccines') return addCommas(Math.round(d.cumulative_vaccines_per_100k));\n  }).attr('id', function (d, i) {\n    return 'data-label' + d.code;\n  }).attr('data-id', function (d, i) {\n    return d.code;\n  }).attr('class', 'data-label').attr('y', rowHeight / 2).style('alignment-baseline', 'middle').style('text-anchor', 'start').attr('x', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k) + labelWidth + 5;\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k) + labelWidth + 5;\n    if (options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines_per_100k) + labelWidth + 5;\n  }).attr('opacity', function (d, i) {\n    var val = 0;\n    if (options.region_chart_toggle == 'cases') val = d.cumulative_cases_per_100k;\n    if (options.region_chart_toggle == 'deaths') val = d.cumulative_deaths_per_100k;\n    if (options.region_chart_toggle == 'vaccines') val = d.cumulative_vaccines_per_100k;\n\n    if (val > 0) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }).style('fill', '#696969').style('font-weight', 'normal').style('font-size', '10px');\n}\nexport function updateRegionchart(options, data) {\n  data.regions.forEach(function (d, i) {\n    d.population = 0;\n    d.cumulative_deaths = 0;\n    d.cumulative_cases = 0;\n    d.cumulative_vaccines = 0;\n  });\n  data.country.forEach(function (d, i) {\n    data.regions.forEach(function (dd, ii) {\n      if (dd.code == d.ifrc_region) {\n        if (d.population > 0 && d.who_daily_latest) {\n          if (d.who_daily_latest.cumulative_cases > 0) dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n          if (d.who_daily_latest.cumulative_deaths > 0) dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths || 0;\n          dd.population += d.population;\n        }\n\n        if (d.population > 0 && d.vaccine_daily_latest) {\n          dd.cumulative_vaccines += d.vaccine_daily_latest.total_vaccinations || 0;\n        }\n      }\n    });\n  });\n  data.regions.forEach(function (d, i) {\n    d.cumulative_cases_per_100k = d.cumulative_cases / (d.population / 100000);\n    d.cumulative_deaths_per_100k = d.cumulative_deaths / (d.population / 100000);\n    d.cumulative_vaccines_per_100k = d.cumulative_vaccines / (d.population / 100000);\n    if (!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n    if (!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n    if (!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n  });\n  maxVaccinations = d3.max(data.regions, function (d, i) {\n    return d.cumulative_vaccines_per_100k;\n  });\n  maxCases = d3.max(data.regions, function (d, i) {\n    return d.cumulative_cases_per_100k;\n  });\n  maxDeaths = d3.max(data.regions, function (d, i) {\n    return d.cumulative_deaths_per_100k;\n  });\n  xScaleCases = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxCases]);\n  xScaleDeaths = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxDeaths]);\n  xScaleVaccines = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxVaccinations]);\n\n  if (maxVaccinations == 0 && maxCases == 0 && maxDeaths == 0) {\n    d3.selectAll('.region-bar').transition().duration(500).attr('width', 0);\n    d3.selectAll('.data-label').transition().duration(500).attr('x', labelWidth).attr('opacity', 0);\n  } else {\n    d3.selectAll('.region-bar').transition().duration(500).attr('width', function (d, i) {\n      var id = d3.select(this).attr('data-id');\n      var d;\n      groupedData.forEach(function (dd, ii) {\n        if (dd.code == id) {\n          d = dd;\n        }\n      });\n      var val = 0;\n      if (options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k);\n      if (options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k);\n      if (options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k);\n\n      if (!isNaN(val)) {\n        return parseFloat(val);\n      } else {\n        return 0;\n      }\n    });\n    d3.selectAll('.data-label').transition().duration(500).tween(\"text\", function (d, i) {\n      var end = 0;\n      var id = d3.select(this).attr('data-id');\n      var d;\n      groupedData.forEach(function (dd, ii) {\n        if (dd.code == id) {\n          d = dd;\n        }\n      });\n      if (options.region_chart_toggle == 'cases') end = d.cumulative_cases_per_100k;\n      if (options.region_chart_toggle == 'deaths') end = d.cumulative_deaths_per_100k;\n      if (options.region_chart_toggle == 'vaccines') end = d.cumulative_vaccines_per_100k;\n      var i = d3.interpolate(Math.floor(Math.random() * 2346 + 9345), end);\n      return function (t) {\n        d3.select(this).text(addCommas(Math.round(i(t))));\n      };\n    }).attr('x', function (d, i) {\n      var id = d3.select(this).attr('data-id');\n      var d;\n      groupedData.forEach(function (dd, ii) {\n        if (dd.code == id) {\n          d = dd;\n        }\n      });\n      if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k) + labelWidth + 5;\n      if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k) + labelWidth + 5;\n      if (options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines_per_100k) + labelWidth + 5;\n    }).attr('opacity', function (d, i) {\n      var d;\n      var id = d3.select(this).attr('data-id');\n      groupedData.forEach(function (dd, ii) {\n        if (dd.code == id) {\n          d = dd;\n        }\n      });\n      var val = 0;\n      if (options.region_chart_toggle == 'cases') val = d.cumulative_cases_per_100k;\n      if (options.region_chart_toggle == 'deaths') val = d.cumulative_deaths_per_100k;\n      if (options.region_chart_toggle == 'vaccines') val = d.cumulative_vaccines_per_100k;\n\n      if (val > 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n}\nexport default drawRegionchart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Regionchart.js"],"names":["d3","moment","colors","addCommas","filter","maxCases","maxDeaths","maxVaccinations","xScaleCases","xScaleDeaths","xScaleVaccines","labelWidth","margin","left","top","right","rcSize","groupedData","drawRegionchart","data","options","barSpacing","regions","forEach","d","i","population","cumulative_deaths","cumulative_cases","cumulative_vaccines","country","dd","ii","code","ifrc_region","who_daily_latest","vaccine_daily_latest","total_vaccinations","cumulative_cases_per_100k","cumulative_deaths_per_100k","cumulative_vaccines_per_100k","isFinite","max","regionChartContainer","select","attr","x","y","width","height","scaleLinear","range","domain","svg","append","rowHeight","length","rows","selectAll","enter","label","style","text","node","getBBox","rowBg","on","t","bars","region_chart_toggle","dat","parentNode","datum","dataLabel","Math","round","val","updateRegionchart","transition","duration","id","isNaN","parseFloat","tween","end","interpolate","floor","random"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases; \nlet xScaleDeaths;\nlet xScaleVaccines;\nlet labelWidth; \nconst margin = { left: 20, top: 0, right: 58 };\nlet rcSize; \nlet groupedData = [];\n\nexport function drawRegionchart(data, options, filter) {\n\n    const barSpacing = 0.1;\n\n    // reset region values to zero\n    data.regions.forEach(function(d,i){\n        d.population = 0;\n        d.cumulative_deaths = 0;\n        d.cumulative_cases = 0;\n        d.cumulative_vaccines = 0;\n    })\n\n    // loop through countries and calculate region totals\n    data.country.forEach(function(d,i){\n        data.regions.forEach(function(dd,ii){\n            if((dd.code==d.ifrc_region)){ \n                if((d.population>0)&&(d.who_daily_latest)){\n                    if(d.who_daily_latest.cumulative_cases>0)\n                    dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n                    if(d.who_daily_latest.cumulative_deaths>0)\n                    dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths||0;\n                    dd.population += d.population;\n                }\n                if((d.population>0)&&(d.vaccine_daily_latest)){\n                    dd.cumulative_vaccines += (d.vaccine_daily_latest.total_vaccinations)||0;\n                }\n            }\n        });\n    });\n\n    // calculate regions per 100k values using total population for each region\n    data.regions.forEach(function(d,i){\n        d.cumulative_cases_per_100k = d.cumulative_cases/(d.population/100000)\n        d.cumulative_deaths_per_100k = d.cumulative_deaths/(d.population/100000);\n        d.cumulative_vaccines_per_100k = d.cumulative_vaccines/(d.population/100000);\n        if(!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n    })\n\n    // get maximum values for each series\n    maxVaccinations = d3.max(data.regions, function(d,i){\n        return d.cumulative_vaccines_per_100k;\n    })\n\n    maxCases = d3.max(data.regions, function(d,i){\n        return d.cumulative_cases_per_100k;\n    })\n\n    maxDeaths = d3.max(data.regions, function(d,i){\n        return d.cumulative_deaths_per_100k;\n    });\n    \n    // append region chart container\n    const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n\n    // get dimensions\n    rcSize = {\n        x: regionChartContainer.attr('x'), y: regionChartContainer.attr('y'), width: regionChartContainer.attr('width'), height: regionChartContainer.attr('height')\n    }\n\n    // create scales\n    xScaleCases = d3.scaleLinear()\n    .range([0, rcSize.width - margin.right - labelWidth])\n    .domain([0, maxCases]);\n\n    xScaleDeaths = d3.scaleLinear()\n    .range([0, rcSize.width - margin.right - labelWidth])\n    .domain([0, maxDeaths]);\n\n    xScaleVaccines = d3.scaleLinear()\n    .range([labelWidth, rcSize.width - margin.right - labelWidth])\n    .domain([0, maxVaccinations]);\n\n    // create svg container\n    const svg = d3.select('#layout').append('g').attr('transform', 'translate('+rcSize.x+', '+rcSize.y+')')\n    .attr('id', 'region_chart');\n\n    // calculate chart row height\n\tvar rowHeight = rcSize.height/(data.regions.length-1); // remove OTH\n\n    // create rows\n    var rows = svg.selectAll('.bar-row')\n\t.data(data.regions.filter(d=>d.code!=='OTH'))\n\t.enter()\n\t.append('g')\n\t.attr('class', 'bar-row')\n\t.attr('transform', function(d,i){\n\t\treturn 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t});\n\n    // create region labels\n    var label = rows.append('text')\n\t.attr('y', rowHeight/2 )\n    .attr('x', margin.left-5)\n\t.attr('class', function(d,i){ return 'bar-labels bar-label-'+d.code })\n\t.style('alignment-baseline', 'middle')\n\t.style('font-size', '11px')\n    .attr('opacity', 1)\n\t.attr('fill', '#000')\n\t.text(function(d,i){\n\t\tif(d.code==='AM') return 'Americas';\n\t\tif(d.code==='EU') return 'Europe';\n\t\tif(d.code==='AF') return 'Africa';\n\t\tif(d.code==='ME') return 'Middle East and North Africa';\n\t\tif(d.code==='AP') return 'Asia-Pacific';\n\t}).style('text-anchor', 'end');\n\n    labelWidth = rows.node().getBBox().width + margin.left;\n\tlabel.attr('x', labelWidth+89);\n\tlabelWidth = labelWidth + 94;\n    d3.selectAll('.timeBar').attr('opacity',1);\n    \n    // create fading background click area\n    var rowBg = rows.append('rect')\n\t.attr('y', 0)\n\t.attr('x', 0)\n\t.attr('width', labelWidth)\n\t.attr('height', rowHeight-2)\n\t.style('opacity', 0)\n    .attr('fill', 'grey')\n\t.style('cursor', 'pointer')\n\t.attr('class', function(d,i){ return 'bar-bg-'+d.code })\n\t.attr('data-id', function(d,i){ return d.code })\n\t.on('mouseover', function(d){\n\t\td3.select(this).style('opacity', 0.1);\n\t})\n\t.on('mouseout', function(){\n\t\td3.select(this).style('opacity', 0);\n\t})\n\t.on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    });\n\n    // draw bars\n    var bars = rows.append('rect')\n    .attr('id', function(d,i){\n        return 'bar-'+d.code;\n    })\n\t.attr('data-id', function(d,i){ return d.code })\n    .attr('class', 'region-bar')\n    .attr('width', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k);\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k);\n        if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines_per_100k);\n    })\n    .attr('x', labelWidth)\n    .style('outline', 'none')\n    .style('cursor', 'pointer')\n    .attr('y', rowHeight*barSpacing - 1)\n    .attr('height', rowHeight-((rowHeight*barSpacing)*2))\n    .style('fill', function(d){\n        return colors.regions[d.code]\n    })\n    .attr('opacity',1)\n    .on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    })\n    .on('mouseover', function(d){\n        var dat = d3.select(this.parentNode).datum();\n\t})\n\t.on('mouseout', function(){\n        // d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n\t})\n\n    // append data value labels\n    var dataLabel = rows.append('text')\n\t.text(function(d){\n        if(options.region_chart_toggle == 'cases') return addCommas(Math.round(d.cumulative_cases_per_100k));\n        if(options.region_chart_toggle == 'deaths') return addCommas(Math.round(d.cumulative_deaths_per_100k));\n        if(options.region_chart_toggle == 'vaccines') return addCommas(Math.round(d.cumulative_vaccines_per_100k));\n    })\n\t.attr('id', function(d,i){\n\t\treturn 'data-label'+d.code;\n\t})\n    .attr('data-id', function(d,i){ return d.code })\n\t.attr('class', 'data-label')\n\t.attr('y', rowHeight/2)\n\t.style('alignment-baseline', 'middle')\n\t.style('text-anchor', 'start')\n\t.attr('x', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;\n        if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;\n    })\n    .attr('opacity', function(d,i){\n        var val = 0;\n        if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases_per_100k);\n        if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths_per_100k);\n        if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines_per_100k);\n        if(val>0){ return 1 } else { return 0}\n    })\n\t.style('fill', '#696969')\n\t.style('font-weight', 'normal')\n\t.style('font-size', '10px');\n\n}\n\nexport function updateRegionchart(options,data) {\n    \n    data.regions.forEach(function(d,i){\n        d.population = 0;\n        d.cumulative_deaths = 0;\n        d.cumulative_cases = 0;\n        d.cumulative_vaccines = 0;\n    })\n\n    data.country.forEach(function(d,i){\n        data.regions.forEach(function(dd,ii){\n            if((dd.code==d.ifrc_region)){ \n                if((d.population>0)&&(d.who_daily_latest)){\n                    if(d.who_daily_latest.cumulative_cases>0)\n                    dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n                    if(d.who_daily_latest.cumulative_deaths>0)\n                    dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths||0;\n                    dd.population += d.population;\n                }\n                if((d.population>0)&&(d.vaccine_daily_latest)){\n                    dd.cumulative_vaccines += (d.vaccine_daily_latest.total_vaccinations)||0;\n                }\n            }\n        });\n    });\n\n    data.regions.forEach(function(d,i){\n        d.cumulative_cases_per_100k = d.cumulative_cases/(d.population/100000)\n        d.cumulative_deaths_per_100k = d.cumulative_deaths/(d.population/100000);\n        d.cumulative_vaccines_per_100k = d.cumulative_vaccines/(d.population/100000);\n        if(!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n    })\n\n    maxVaccinations = d3.max(data.regions, function(d,i){\n        return d.cumulative_vaccines_per_100k;\n    })\n\n    maxCases = d3.max(data.regions, function(d,i){\n        return d.cumulative_cases_per_100k;\n    })\n\n    maxDeaths = d3.max(data.regions, function(d,i){\n        return d.cumulative_deaths_per_100k;\n    });\n\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);\n\n    if((maxVaccinations==0)&&(maxCases==0)&&(maxDeaths==0)){\n        d3.selectAll('.region-bar')\n        .transition().duration(500)\n        .attr('width', 0);\n\n        d3.selectAll('.data-label')\n        .transition()\n          .duration(500) \n          .attr('x', labelWidth)\n          .attr('opacity', 0);\n    } else {\n        d3.selectAll('.region-bar')\n        .transition().duration(500)\n        .attr('width', function(d,i){\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k);\n            if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k);\n            if(!isNaN(val)) { return parseFloat(val) } else { return 0}\n        })   \n        d3.selectAll('.data-label')\n        .transition()\n          .duration(500)\n          .tween(\"text\", function(d,i) {\n            var end = 0;\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            if(options.region_chart_toggle == 'cases') end = (d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') end = (d.cumulative_deaths_per_100k);  \n            if(options.region_chart_toggle == 'vaccines') end = (d.cumulative_vaccines_per_100k);  \n            var i = d3.interpolate(Math.floor((Math.random() * 2346) + 9345), end);\n            return function(t) {\n              d3.select(this).text(addCommas(Math.round(i(t))));\n            };\n          })\n        .attr('x', function(d,i){\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;\n            if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;\n            if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;\n        })\n        .attr('opacity', function(d,i){\n            var d;\n            var id = d3.select(this).attr('data-id');\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths_per_100k);\n            if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines_per_100k);\n            if(val>0){ return 1 } else { return 0}\n        })\n\n    }\n\n}\n\nexport default drawRegionchart;\n"]},"metadata":{},"sourceType":"module"}