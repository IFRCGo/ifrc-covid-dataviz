{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { nFormatter } from './HelperFunctions';\nimport { selection, textwrap } from 'd3-textwrap';\nimport clone from 'just-clone';\nlet yScaleCases;\nlet yScaleDeaths;\nlet yScaleVaccines;\nlet yAxisCases;\nlet yAxisDeaths;\nlet yAxisVaccines;\nlet yScaleCasesAxis;\nlet yScaleDeathsAxis;\nlet yScaleVaccinesAxis;\nlet xScale;\nlet xAxis;\nlet xScaleAxis;\nlet xScaleEvents;\nlet maxDate;\nlet minDate;\nlet md;\nconst regions = ['AF', 'ME', 'AP', 'EU', 'AM', 'OTH'];\nexport function drawTimechart(data, options) {\n  minDate = new Date(data.min_date);\n  maxDate = new Date(data.max_date);\n  const groupedData = [];\n  data.who_data.forEach(function (d, i) {\n    if (!groupedData[d[options.timeline_frequency + 'Total']]) groupedData[d[options.timeline_frequency + 'Total']] = {};\n    if (options.timeline_frequency === 'day') groupedData[d[options.timeline_frequency + 'Total']].date = d.date;\n    if (options.timeline_frequency === 'week') groupedData[d[options.timeline_frequency + 'Total']].date = d.week_start;\n    if (options.timeline_frequency === 'month') groupedData[d[options.timeline_frequency + 'Total']].date = d.month_start;\n    if (!groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region]) groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region] = {\n      new_cases: 0,\n      new_deaths: 0,\n      cumulative_cases: 0,\n      cumulative_deaths: 0\n    };\n    groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].new_cases += d.new_cases;\n    groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].new_deaths += d.new_deaths;\n    groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].cumulative_cases = 0;\n  }); // totals by date\n\n  groupedData.forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (!d.hasOwnProperty(dd)) {\n        d[dd] = {\n          new_cases: 0,\n          new_deaths: 0,\n          cumulative_cases: 0,\n          cumulative_deaths: 0\n        };\n      } // if(dd!=='OTH') d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n\n\n      if (i > 0) {\n        d[dd].cumulative_cases = groupedData[i][dd].new_cases + groupedData[i - 1][dd].cumulative_cases;\n        d[dd].cumulative_deaths = groupedData[i][dd].new_deaths + groupedData[i - 1][dd].cumulative_deaths;\n      } else {\n        d[dd].cumulative_cases = groupedData[i][dd].new_cases;\n        d[dd].cumulative_deaths = groupedData[i][dd].new_deaths;\n      }\n    });\n    d.total_new_cases = d.AF.new_cases + d.AP.new_cases + d.AM.new_cases + d.EU.new_cases + d.ME.new_cases + d.OTH.new_cases;\n    d.total_cumulative_cases = d.AF.cumulative_cases + d.AP.cumulative_cases + d.AM.cumulative_cases + d.EU.cumulative_cases + d.ME.cumulative_cases + d.OTH.cumulative_cases;\n    d.total_new_deaths = d.AF.new_deaths + d.AP.new_deaths + d.AM.new_deaths + d.EU.new_deaths + d.ME.new_deaths + d.OTH.new_deaths;\n    d.total_cumulative_deaths = d.AF.cumulative_deaths + d.AP.cumulative_deaths + d.AM.cumulative_deaths + d.EU.cumulative_deaths + d.ME.cumulative_deaths + d.OTH.cumulative_deaths;\n    d.region = [];\n    regions.forEach(function (dd, ii) {\n      d.region.push({\n        'region': dd,\n        'new_cases': d[dd].new_cases,\n        'new_deaths': d[dd].new_deaths,\n        'cumulative_cases': d[dd].cumulative_cases,\n        'cumulative_deaths': d[dd].cumulative_deaths\n      });\n    });\n  });\n  let vgroupedData = [];\n\n  if (options.timeline_type != 'cumulative') {\n    // cumulative and stacked\n    // data.vaccines_data = data.vaccines_data_daily;\n    // data.vaccines_data_daily = clone(data.vaccines_data);\n    data.vaccines_data.forEach(function (d, i) {\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']]) vgroupedData[d[options.timeline_frequency + 'Total']] = {};\n      if (options.timeline_frequency === 'day') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.date;\n      if (options.timeline_frequency === 'week') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.week_start;\n      if (options.timeline_frequency === 'month') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.month_start;\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region] = {\n        new_vaccines: 0\n      };\n      vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].new_vaccines += d.daily_vaccinations;\n    }); // totals by date\n\n    vgroupedData.forEach(function (d, i) {\n      regions.forEach(function (dd, ii) {\n        if (!d[dd]) {\n          d[dd] = {\n            new_vaccines: 0,\n            cumulative_vaccines: 0\n          };\n        }\n      });\n      d.total_new_vaccines = d.AF.new_vaccines + d.AP.new_vaccines + d.AM.new_vaccines + d.EU.new_vaccines + d.ME.new_vaccines + d.OTH.new_vaccines;\n      d.region = [];\n      regions.forEach(function (dd, ii) {\n        var newVaccines = 0;\n\n        if (d[dd].new_vaccines > 0) {\n          newVaccines += d[dd].new_vaccines;\n        }\n\n        d.region.push({\n          'region': dd,\n          'new_vaccines': newVaccines\n        });\n      });\n    });\n  } else {\n    // cumulative only\n    data.vaccines_data = [];\n\n    if (options.timeline_frequency === 'day') {\n      data.vaccines_data = clone(data.vaccines_data_cumulative);\n    }\n\n    if (options.timeline_frequency === 'week') {\n      data.vaccines_data.forEach(function (d, i) {\n        var endOfWeekDate = moment(d.date).endOf('isoWeek').startOf('day').unix();\n        var date = moment(d.date).startOf('day').unix();\n\n        if (date == endOfWeekDate || date == moment(options.maxVDate).startOf('day').unix()) {\n          data.vaccines_data.push(d);\n        }\n      });\n    }\n\n    if (options.timeline_frequency === 'month') {\n      var maxDateUnix = moment(options.maxVDate).startOf('day').unix();\n      data.vaccines_data.forEach(function (d, i) {\n        var endOfMonthDate = moment(d.date).endOf('month').startOf('day').unix();\n        var date = moment(d.date).startOf('day').unix();\n\n        if (date == endOfMonthDate || moment(options.maxVDate).startOf('day').unix() != endOfMonthDate && date == maxDateUnix) {\n          data.vaccines_data.push(d);\n        }\n      });\n    }\n\n    data.vaccines_data.forEach(function (d, i) {\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']]) vgroupedData[d[options.timeline_frequency + 'Total']] = {};\n      if (options.timeline_frequency === 'day') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.date;\n      if (options.timeline_frequency === 'week') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.week_start;\n      if (options.timeline_frequency === 'month') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.month_start;\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region] = {\n        cumulative_vaccines: 0\n      };\n      vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].cumulative_vaccines += d.total_vaccinations;\n    }); // totals by date\n\n    vgroupedData.forEach(function (d, i) {\n      regions.forEach(function (dd, ii) {\n        if (!d[dd]) {\n          d[dd] = {\n            cumulative_vaccines: 0\n          };\n        }\n      });\n      d.total_cumulative_vaccines = d.AF.cumulative_vaccines + d.AP.cumulative_vaccines + d.AM.cumulative_vaccines + d.EU.cumulative_vaccines + d.ME.cumulative_vaccines + d.OTH.cumulative_vaccines;\n      d.region = [];\n      regions.forEach(function (dd, ii) {\n        d.region.push({\n          'region': dd,\n          'cumulative_vaccines': d[dd].cumulative_vaccines\n        });\n      });\n    });\n  }\n\n  vgroupedData = vgroupedData.filter(function (el) {\n    return el;\n  });\n  const numIntervals = d3.max(data.who_data, function (d, i) {\n    return d[options.timeline_frequency + 'Total'];\n  });\n  const maxCases = d3.max(groupedData, function (d, i) {\n    if (options.timeline_type === 'non-cumulative') return d.total_new_cases;\n    if (options.timeline_type === 'cumulative') return d.total_cumulative_cases;\n    if (options.timeline_type === 'stacked') return 100;\n  });\n  const maxDeaths = d3.max(groupedData, function (d, i) {\n    if (options.timeline_type === 'non-cumulative') return d.total_new_deaths;\n    if (options.timeline_type === 'cumulative') return d.total_cumulative_deaths;\n    if (options.timeline_type === 'stacked') return 100;\n  });\n  const maxVaccines = d3.max(vgroupedData, function (d, i) {\n    if (d) {\n      if (options.timeline_type === 'non-cumulative') return d.total_new_vaccines;\n      if (options.timeline_type === 'cumulative') return d.total_cumulative_vaccines;\n      if (options.timeline_type === 'stacked') return 100;\n    }\n  }); // define date range\n  // const minDate = groupedData[0].date;\n  // const maxDate = groupedData[numIntervals].date;\n  // const minDate = groupedData[0].date;\n  // if(options.timeline_frequency==='month') md = md.add(1, 'months');\n  // if(options.timeline_frequency==='week') md = md.add(1, 'weeks');\n\n  if (options.timeline_frequency === 'month') minDate = moment(minDate).startOf('month').startOf('day').toDate();\n  if (options.timeline_frequency === 'month') maxDate = moment(maxDate).endOf('month').startOf('day').toDate();\n  if (options.timeline_frequency === 'week') maxDate = moment(maxDate).endOf('isoWeek').startOf('day').toDate();\n  md = moment(maxDate);\n  if (options.timeline_frequency === 'day') md = new Date(moment(maxDate).add(1, 'days').toDate());\n  const svg = d3.select('#timechart_svg');\n  svg.selectAll('g').remove();\n  d3.selectAll('#layout .yAxis').remove();\n  d3.selectAll('#yAxis').remove();\n  d3.selectAll('#layout .xAxis').remove(); //bg\n\n  svg.append('g').append('rect').attr('width', 2000).attr('height', '100%').attr('x', 0).attr('y', 0).attr('fill', '#FFF').attr('opacity', 0);\n  const width = 2000;\n  const barWidth = width / numIntervals;\n  let barSpacing = 0.04;\n  if (options.timeline_frequency === 'month') barSpacing = 0.03;\n  if (options.timeline_frequency === 'day') barSpacing = 0; // define scales\n\n  xScale = d3.scaleTime().range([0, width]).domain([minDate, md]);\n  xScaleAxis = d3.scaleTime().range([0, 596]).domain([minDate, md]);\n  yScaleCases = d3.scaleLinear().range([0, 140]).domain([0, maxCases]);\n  yScaleCasesAxis = d3.scaleLinear().range([140, 0]).domain([0, maxCases]);\n  yScaleDeaths = d3.scaleLinear().range([0, 140]).domain([0, maxDeaths]);\n  yScaleDeathsAxis = d3.scaleLinear().range([140, 0]).domain([0, maxDeaths]);\n  yScaleVaccines = d3.scaleLinear().range([0, 140]).domain([0, maxVaccines]);\n  yScaleVaccinesAxis = d3.scaleLinear().range([140, 0]).domain([0, maxVaccines]); // define axi\n\n  xAxis = d3.axisBottom().scale(xScaleAxis).tickSize(2).tickPadding(3); // if(options.timeline_frequency=='month')\n  // xAxis.ticks(d3.timeMonth.every(3)).tickFormat(d3.timeFormat(\"%b %Y\"));\n  // if(options.timeline_frequency=='week')\n  // xAxis.ticks(d3.timeWeek.every(10)).tickFormat(d3.timeFormat(\"%d %b %Y\"));\n\n  yAxisCases = d3.axisRight().scale(yScaleCasesAxis).ticks(3).tickSize(3).tickPadding(3).tickFormat(function (d) {\n    if (options.timeline_type == 'stacked') return nFormatter(d) + '%';\n    return nFormatter(d);\n  });\n  yAxisDeaths = d3.axisRight().scale(yScaleDeathsAxis).ticks(3).tickSize(3).tickPadding(3).tickFormat(function (d) {\n    if (options.timeline_type == 'stacked') return nFormatter(d) + '%';\n    return nFormatter(d);\n  });\n  yAxisVaccines = d3.axisRight().scale(yScaleVaccinesAxis).ticks(3).tickSize(3).tickPadding(3).tickFormat(function (d) {\n    if (options.timeline_type == 'stacked') return nFormatter(d) + '%';\n    return nFormatter(d);\n  }); // y-axis cases\n\n  var yAxisGroup = d3.select('#layout').append(\"g\").attr('id', 'yAxis').attr('clip-path', 'url(#mask)');\n  var yAxisCasesText = yAxisGroup.append(\"g\").attr(\"class\", \"yAxis axis\").attr(\"id\", \"casesAxis\").attr('transform', 'translate(620,363)').call(yAxisCases); // y-axis deaths\n\n  var yAxisDeathsText = yAxisGroup.append(\"g\").attr(\"class\", \"yAxis axis\").attr(\"id\", \"deathsAxis\").attr('transform', 'translate(620,534)').call(yAxisDeaths); // y-axis vaccines\n\n  var yAxisVaccinesText = yAxisGroup.append(\"g\").attr(\"class\", \"yAxis axis\").attr(\"id\", \"VaccinesAxis\").attr('transform', 'translate(620,707.5)').call(yAxisVaccines); // x-axis cases\n\n  var xAxisCases = yAxisGroup.append('g').attr(\"id\", \"casesXAxis\").attr('class', 'xAxis').attr('transform', 'translate(24,504)').call(xAxis);\n  var xAxisDeaths = yAxisGroup.append('g').attr(\"id\", \"deathsXAxis\").attr('class', 'xAxis').attr('transform', 'translate(24,674)').call(xAxis);\n  var xAxisVaccines = yAxisGroup.append('g').attr(\"id\", \"vaccinesXAxis\").attr('class', 'xAxis').attr('transform', 'translate(24,848)').call(xAxis);\n  var xAxisTimeline = yAxisGroup.append('g').attr(\"id\", \"timelineXAxis\").attr('class', 'xAxis').attr('transform', 'translate(24,908)').call(xAxis); // CASES\n  // loop through groupedData and draw bars\n\n  const barGroups = svg.selectAll('.bar_group').data(groupedData).enter().append('g').attr('class', 'bar_group').attr('data-date', function (d) {\n    return d.date;\n  }).attr('transform', function (d, i) {\n    return 'translate(' + xScale(d.date) + ')';\n  }); // CASES\n\n  barGroups.selectAll('.cases_bar').data(function (d, i) {\n    return d.region.filter(function (dd, ii) {\n      return dd.region !== 'OTH';\n    });\n  }).enter().append('rect').attr('class', function (d, i) {\n    return 'timeBar cases_bar time_' + d.region;\n  }).attr('x', barWidth * barSpacing).attr('y', function (d, i) {\n    const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n    let dp = 0;\n\n    if (i > 0) {\n      for (let ii = 1; ii <= i; ii++) {\n        if (options.timeline_type === 'cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].cumulative_cases;\n        if (options.timeline_type === 'non-cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].new_cases;\n        if (options.timeline_type === 'stacked') dp += d3.select(this.parentNode).datum().region[ii - 1].new_cases;\n      }\n    }\n\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = 140 - yScaleCases(d.cumulative_cases) - yScaleCases(dp);\n    if (options.timeline_type === 'non-cumulative') y = 140 - yScaleCases(d.new_cases) - yScaleCases(dp);\n    if (options.timeline_type === 'stacked') y = 140 - 140 * (d.new_cases / totalNewCases) - 140 * (dp / totalNewCases);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('width', barWidth - barWidth * barSpacing * 2).attr('height', function (d, i) {\n    const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = yScaleCases(d.cumulative_cases);\n    if (options.timeline_type === 'non-cumulative') y = yScaleCases(d.new_cases);\n    if (options.timeline_type === 'stacked') y = 140 * (d.new_cases / totalNewCases);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('fill', function (d, i) {\n    return colors.regions[d.region];\n  }); // DEATHS\n\n  barGroups.selectAll('.deaths_bar').data(function (d, i) {\n    return d.region.filter(function (dd, ii) {\n      return dd.region !== 'OTH';\n    });\n  }).enter().append('rect').attr('class', function (d, i) {\n    return 'timeBar deaths_bar time_' + d.region;\n  }).attr('x', barWidth * barSpacing).attr('y', function (d, i) {\n    const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n    let dp = 0;\n\n    if (i > 0) {\n      for (let ii = 1; ii <= i; ii++) {\n        if (options.timeline_type === 'cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].cumulative_deaths;\n        if (options.timeline_type === 'non-cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].new_deaths;\n        if (options.timeline_type === 'stacked') dp += d3.select(this.parentNode).datum().region[ii - 1].new_deaths;\n      }\n    }\n\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = 140 - yScaleDeaths(d.cumulative_deaths) - yScaleDeaths(dp) + 170;\n    if (options.timeline_type === 'non-cumulative') y = 140 - yScaleDeaths(d.new_deaths) - yScaleDeaths(dp) + 170;\n    if (options.timeline_type === 'stacked') y = 140 - 140 * (d.new_deaths / totalNewDeaths) - 140 * (dp / totalNewDeaths) + 170;\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('width', barWidth - barWidth * barSpacing * 2).attr('height', function (d, i) {\n    const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = yScaleDeaths(d.cumulative_deaths);\n    if (options.timeline_type === 'non-cumulative') y = yScaleDeaths(d.new_deaths);\n    if (options.timeline_type === 'stacked') y = 140 * (d.new_deaths / totalNewDeaths);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('fill', function (d, i) {\n    return colors.regions[d.region];\n  }); // bar size tweak for spacing\n\n  if (options.timeline_frequency === 'month') {\n    barGroups.selectAll(\".timeBar\").attr(\"width\", function (d) {\n      var date = d3.select(this.parentNode).datum().date;\n      var next = d3.timeMonth.offset(date, 1);\n      return (xScale(next) - xScale(date)) * (1 - barSpacing);\n    }).attr(\"x\", function (d) {\n      var date = d3.select(this.parentNode).datum().date;\n      var next = d3.timeMonth.offset(date, 1);\n      return (xScale(next) - xScale(date)) * (barSpacing / 2);\n    });\n  } // VACCINES\n\n\n  const vbarGroups = svg.selectAll('.vbar_group').data(vgroupedData).enter().append('g').attr('class', 'vbar_group').attr('data-date', function (d) {\n    return d.date;\n  }).attr('transform', function (d, i) {\n    return 'translate(' + xScale(d.date) + ', 344)';\n  });\n  vbarGroups.selectAll('.vaccines_bar').data(function (d, i) {\n    return d.region.filter(function (dd, ii) {\n      return dd.region !== 'OTH';\n    });\n  }).enter().append('rect').attr('class', 'timeBar vaccines_bar').attr('class', function (d, i) {\n    return 'timeBar vaccines_bar time_' + d.region;\n  }).attr('x', barWidth * barSpacing).attr('y', function (d, i) {\n    const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n    let dp = 0;\n\n    if (i > 0) {\n      for (let ii = 1; ii <= i; ii++) {\n        if (options.timeline_type === 'cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].cumulative_vaccines;\n        if (options.timeline_type === 'non-cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].new_vaccines;\n        if (options.timeline_type === 'stacked') dp += d3.select(this.parentNode).datum().region[ii - 1].new_vaccines;\n      }\n    }\n\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = 140 - yScaleVaccines(d.cumulative_vaccines) - yScaleVaccines(dp);\n    if (options.timeline_type === 'non-cumulative') y = 140 - yScaleVaccines(d.new_vaccines) - yScaleVaccines(dp);\n    if (options.timeline_type === 'stacked') y = 140 - 140 * (d.new_vaccines / totalNewVaccines) - 140 * (dp / totalNewVaccines);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('width', barWidth - barWidth * barSpacing * 2).attr('height', function (d, i) {\n    const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = yScaleVaccines(d.cumulative_vaccines);\n    if (options.timeline_type === 'non-cumulative') y = yScaleVaccines(d.new_vaccines);\n    if (options.timeline_type === 'stacked') y = 140 * (d.new_vaccines / totalNewVaccines);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('fill', function (d, i) {\n    return colors.regions[d.region];\n  });\n\n  if (options.timeline_frequency === 'month') {\n    vbarGroups.selectAll(\".timeBar\").attr(\"width\", function (d) {\n      var date = d3.select(this.parentNode).datum().date;\n      var next = d3.timeMonth.offset(date, 1);\n      return (xScale(next) - xScale(date)) * (1 - barSpacing);\n    }).attr(\"x\", function (d) {\n      var date = d3.select(this.parentNode).datum().date;\n      var next = d3.timeMonth.offset(date, 1);\n      return (xScale(next) - xScale(date)) * (barSpacing / 2);\n    });\n  } // bar size tweak for spacing\n\n\n  if (options.timeline_frequency === 'month') {\n    barGroups.selectAll(\".timeBar\").attr(\"width\", function (d) {\n      var date = d3.select(this.parentNode).datum().date;\n      var next = d3.timeMonth.offset(date, 1);\n      return (xScale(next) - xScale(date)) * (1 - barSpacing);\n    }).attr(\"x\", function (d) {\n      var date = d3.select(this.parentNode).datum().date;\n      var next = d3.timeMonth.offset(date, 1);\n      return (xScale(next) - xScale(date)) * (barSpacing / 2);\n    });\n  }\n\n  data.vgroupedData = vgroupedData;\n  data.groupedData = groupedData; // tooltips\n  // events calendar timeline\n\n  var tData = data.timeline_data;\n  xScaleEvents = d3.scaleTime().range([25, 619]).domain([minDate, md]); // bring to front\n\n  document.getElementById(\"svg\").appendChild(d3.select('#timeline_tooltip').node());\n  document.getElementById(\"svg\").appendChild(d3.select('#event_tooltip').node());\n  var timelineTooltip = d3.select('#timeline_tooltip').attr('opacity', 0);\n  var eventTooltip = d3.select('#event_tooltip').attr('opacity', 0); // hover bar\n\n  var hoverBar = svg.append('rect').attr('id', 'timechart_hover').attr('width', barWidth).attr('x', 0).attr('y', 0).attr('opacity', 0).attr('height', '100%').attr('fill', 'rgb(221 221 221 / 40%)');\n  d3.select('#timechart_svg').on('mouseover', event => {\n    var coords = d3.pointer(event);\n    hoverBar.attr('opacity', 1);\n    var xDate = xScale.invert(coords[0]);\n\n    if (options.timeline_frequency == 'week') {\n      xDate = moment(xDate).startOf('isoWeek');\n    }\n\n    if (options.timeline_frequency == 'day') {\n      xDate = moment(xDate).startOf('day');\n    }\n\n    if (options.timeline_frequency == 'month') {\n      xDate = moment(xDate).startOf('month');\n    }\n\n    if (coords[1] < 470) {\n      timelineTooltip.attr('opacity', 1).attr('display', 'inline');\n      hoverBar.attr('height', '100%');\n    } else if (coords[1] > 510) {\n      eventTooltip.attr('opacity', 1);\n      hoverBar.attr('height', '90%');\n    } else {\n      eventTooltip.attr('opacity', 0);\n      timelineTooltip.attr('opacity', 0);\n      hoverBar.attr('height', '100%');\n    }\n\n    if (xDate.toDate().getTime() < minDate.getTime()) {\n      hoverBar.attr('opacity', 0);\n      timelineTooltip.attr('opacity', 0);\n    }\n\n    d3.select('#svg_container').style('z-index', 10);\n  }).on('mouseout', event => {\n    hoverBar.attr('opacity', 0);\n    timelineTooltip.attr('opacity', 0).attr('display', 'none'); // timelineTooltip.attr('opacity', 0).attr('transform', 'translate(0,0)');\n\n    d3.select('#svg_container').style('z-index', 1);\n    eventTooltip.attr('opacity', 0).attr('transform', 'translate(0,0)');\n    d3.selectAll('.event_marker circle').style('stroke', colors.black);\n  }).on('mousemove', event => {\n    var coords = d3.pointer(event);\n    var xDate = xScale.invert(coords[0]);\n    var tooltipStr = '';\n\n    if (options.timeline_frequency == 'week') {\n      xDate = moment(xDate).startOf('isoWeek');\n      tooltipStr = xDate.format('ll');\n      d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n    }\n\n    if (options.timeline_frequency == 'day') {\n      xDate = moment(xDate).startOf('day');\n      tooltipStr = xDate.format('ll');\n      d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n    }\n\n    if (options.timeline_frequency == 'month') {\n      xDate = moment(xDate).startOf('month');\n      tooltipStr = xDate.format('MMMM YYYY');\n      d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n    }\n\n    hoverBar.attr('x', xScale(xDate.toDate()));\n    var groupedDataFiltered = data.groupedData.filter(function (d, i) {\n      return moment(d.date).startOf('day').unix() == xDate.startOf('day').unix();\n    });\n    var vgroupedDataFiltered = data.vgroupedData.filter(function (d, i) {\n      return moment(d.date).startOf('day').unix() == xDate.startOf('day').unix();\n    });\n    var deaths = '-';\n    var cases = '-';\n    var vaccines = '-';\n\n    if (options.timeline_type == 'cumulative') {\n      // cumulative\n      if (groupedDataFiltered[0]) cases = nFormatter(groupedDataFiltered[0].total_cumulative_cases, 2);\n      if (groupedDataFiltered[0]) deaths = nFormatter(groupedDataFiltered[0].total_cumulative_deaths, 2);\n      if (vgroupedDataFiltered[0]) vaccines = nFormatter(vgroupedDataFiltered[0].total_cumulative_vaccines, 2);\n    } else {\n      // non-cumulative/stacked\n      if (groupedDataFiltered[0]) cases = nFormatter(groupedDataFiltered[0].total_new_cases, 2);\n      if (groupedDataFiltered[0]) deaths = nFormatter(groupedDataFiltered[0].total_new_deaths, 2);\n      if (vgroupedDataFiltered[0]) vaccines = nFormatter(vgroupedDataFiltered[0].total_new_vaccines, 2);\n    }\n\n    d3.select('#tooltip_cases tspan').text(cases).attr(\"text-anchor\", \"end\").attr('dx', 32);\n    d3.select('#tooltip_deaths tspan').text(deaths).attr(\"text-anchor\", \"end\").attr('dx', 32);\n    d3.select('#tooltip_vaccines tspan').text(vaccines).attr(\"text-anchor\", \"end\").attr('dx', 32); // if((xDate.toDate().getTime()>options.maxDate.getTime())){\n    //     hoverBar.attr('opacity', 0);\n    // // } else \n\n    if (xDate.toDate().getTime() < minDate.getTime() && options.timeline_frequency == 'day') {\n      hoverBar.attr('opacity', 0);\n      timelineTooltip.attr('opacity', 0);\n    }\n\n    if (options.timeline_frequency == 'month') {\n      hoverBar.attr('width', function () {\n        return xScale(moment(xDate).endOf('month')) - xScale(moment(xDate).startOf('month'));\n      });\n    }\n\n    timelineTooltip.attr('transform', function () {\n      var bw = barWidth;\n      var ratio = (options.brushR - options.brushL) / 600;\n      var offset = 0;\n      if (ratio < 0.5) offset = 3;\n      if (ratio < 0.3) offset = 12;\n      if (ratio < 0.2) offset = 20;\n      if (ratio < 0.15) offset = 21;\n\n      if (options.timeline_frequency == 'month') {\n        if (ratio < 0.6) offset = 20;\n        if (ratio < 0.5) offset = 30;\n        if (ratio < 0.3) offset = 50;\n        if (ratio < 0.2) offset = 60;\n        if (ratio < 0.1) offset = 70;\n        return 'translate(' + (xScaleEvents(xDate.toDate()) + barWidth / 3 + offset) + ',' + (coords[1] + 353) + ')';\n      }\n\n      return 'translate(' + (xScaleEvents(xDate.toDate()) + 18 + offset) + ',' + (coords[1] + 353) + ')';\n    });\n\n    if (coords[1] < 470) {\n      timelineTooltip.attr('opacity', 1);\n      hoverBar.attr('opacity', 1);\n      hoverBar.attr('height', '100%');\n    } else if (coords[1] > 510) {\n      eventTooltip.attr('opacity', 1);\n      hoverBar.attr('height', '90%');\n      var x = moment(xScale.invert(coords[0])).startOf('day');\n      var xx = xScale.invert(coords[0]);\n      eventTooltip.attr('transform', function () {\n        return 'translate(' + (xScaleEvents(x.toDate()) + -3) + ',' + 817 + ')';\n      });\n      var events = tData.filter(function (d, i) {\n        return moment(d.date).startOf('day').unix() == x.unix();\n      }); // select nearest neighbor for ux purposes \n\n      if (events.length == 0) {\n        events = tData.filter(function (d, i) {\n          return moment(d.date).startOf('day').unix() <= moment(x).add(1, 'days').unix() && moment(d.date).startOf('day').unix() >= moment(x).subtract(1, 'days').unix();\n        });\n      }\n\n      if (events.length > 0) {\n        d3.select('#event-' + moment(events[0].date).startOf('day').unix()).select('path').style('stroke', '#000').attr('opacity', 1);\n        tooltipStr = moment(events[0].date).startOf('day').format('ll');\n        d3.select('#event_tooltip_date tspan').text(tooltipStr);\n        var wrap = textwrap().bounds({\n          height: 200,\n          width: 230\n        }).method('tspans');\n        var event = d3.select('#event_tooltip_text').text(events[0].description).attr('y', 18).attr('x', 6);\n        d3.select('#event_tooltip_text').call(wrap);\n        d3.selectAll('#event_tooltip_text tspan').attr('dy', '1.3em');\n        var bbox = d3.select('#event_tooltip_text').node().getBBox();\n        d3.select('#event_tooltip_rect').attr('width', bbox.width + 17).attr('height', bbox.height + 26);\n        var h = d3.select('#event_tooltip_rect').attr('height');\n        var ys = 0;\n\n        if (bbox.height < 20) {\n          ys = 19;\n        } else if (bbox.height < 30) {\n          ys = 9;\n        } else if (bbox.height < 40) {\n          ys = 0;\n        } else if (bbox.height < 50) {\n          ys = -20;\n        } else if (bbox.height < 60) {\n          ys = -20;\n        }\n\n        var y = d3.select('#event_tooltip_rect').attr('y');\n        d3.select('#event_tooltip_rect').attr('y', ys);\n        d3.selectAll('#event_tooltip_text').attr('y', function (d, i) {\n          return parseInt(d3.select(this).attr('y')) + ys;\n        });\n        d3.selectAll('#event_tooltip_date tspan').attr('dy', function (d, i) {\n          return ys;\n        });\n        eventTooltip.attr('opacity', 1);\n      } else {\n        d3.selectAll('.event_marker circle').style('stroke', colors.black);\n        eventTooltip.attr('opacity', 0);\n      }\n    } else {\n      eventTooltip.attr('opacity', 0);\n      timelineTooltip.attr('opacity', 0);\n      hoverBar.attr('opacity', 0);\n      hoverBar.attr('height', '100%');\n    }\n\n    if (options.timeline_frequency == 'day' && xDate.toDate().getTime() < minDate.getTime()) {\n      hoverBar.attr('opacity', 0);\n      timelineTooltip.attr('opacity', 0);\n      return false;\n    }\n  });\n  tData = tData.filter(d => d.date.length > 0); // event lin\n\n  yAxisGroup.append('line').attr('id', 'event-line').attr('x1', 0).attr('x2', 620).attr('y1', 893).attr('y2', 893).attr('stroke-width', 2.5).attr('stroke', colors.black);\n  var circles = yAxisGroup.append('g').selectAll('.event_marker').data(tData).enter().append('g').attr('class', 'event_marker').attr('id', function (d, i) {\n    return 'event-' + moment(d.date).startOf('day').unix();\n  }).attr('transform', function (d) {\n    var x = xScaleEvents(new Date(d.date));\n    return 'translate(' + x + ', 893)';\n  }).style('cursor', 'pointer'); // .append('path')\n  // .attr('d', \"M0,-6L4,0 0,6 -4,0Z\")\n\n  circles.append(\"circle\").style('stroke', colors.black).attr('opacity', 1).attr('r', 6.5).attr('cx', 0).attr('cy', 0).style('stroke-width', 2.2).style('fill', 'white');\n  circles.append(\"circle\").attr('r', 2).attr('cx', 0).attr('cy', 0).attr('fill', colors.black).style('stroke', colors.black); // create brush zoom\n  // reset\n  // options.brushL = 0;\n  // options.brushR = 600;\n\n  const brush = d3.brushX().extent([[0, 0], [600, 20]]).on(\"start brush end\", brushed);\n  d3.select('.brush').remove();\n  ;\n  var gBrush = d3.select('#zoombar').append(\"g\").attr(\"class\", \"brush\").attr('opacity', 0.1).call(brush);\n  d3.selectAll('.handle rect').attr('fill-opacity', '1').style('visibility', 'visible').attr('width', 2).attr('fill', '#000').style('stroke-opacity', 0);\n  var brushScale = d3.scaleLinear().domain([-3, 597]).range([0, 2000]);\n  gBrush.call(brush.move, [options.brushL, options.brushR]);\n\n  function brushed() {\n    var x = parseFloat(d3.select('.handle--w').attr('x'));\n    var x2 = parseFloat(d3.select('.handle--e').attr('x'));\n    if (x2 - x < 40) return false;\n    var w = d3.select('.selection').attr('width');\n    d3.select('#zoomL').attr('transform', 'translate(' + x + ',0)');\n    d3.select('#zoomR').attr('transform', 'translate(' + x2 + ',0)');\n    d3.select('#zoomOverlay').attr('width', x2 - x);\n    d3.select('#zoomOverlay').attr('x', x);\n    d3.select('#zoomOverlay').attr('transform', 'translate(3,0)');\n    var viewBoxW = Math.round(brushScale(x2) - brushScale(x));\n    var viewBoxX = Math.round(brushScale(x));\n    options.brushL = x + 3;\n    options.brushR = x2 + 3;\n    xScaleAxis = d3.scaleTime().range([0, 596]).domain([new Date(xScale.invert(brushScale(x))), new Date(xScale.invert(brushScale(x2)))]);\n    xScaleEvents = d3.scaleTime().range([25, 619]) // .domain([minDate,md]);\n    .domain([new Date(xScale.invert(brushScale(x))), new Date(xScale.invert(brushScale(x2)))]);\n    d3.selectAll('.event_marker').attr('transform', function (d) {\n      var x = xScaleEvents(new Date(d.date));\n      return 'translate(' + x + ', 893)';\n    });\n    xAxis = d3.axisBottom().ticks(5).scale(xScaleAxis);\n    xAxisCases.call(xAxis);\n    xAxisDeaths.call(xAxis);\n    xAxisVaccines.call(xAxis);\n    xAxisTimeline.call(xAxis);\n    d3.select('#timechart_svg').attr('viewBox', viewBoxX + ' 0 ' + viewBoxW + ' 553');\n  }\n}\nexport function updateTimechart(data, options) {\n  const groupedData = [];\n  data.who_data.forEach(function (d, i) {\n    if (!groupedData[d[options.timeline_frequency + 'Total']]) groupedData[d[options.timeline_frequency + 'Total']] = {};\n    if (options.timeline_frequency === 'day') groupedData[d[options.timeline_frequency + 'Total']].date = d.date;\n    if (options.timeline_frequency === 'week') groupedData[d[options.timeline_frequency + 'Total']].date = d.week_start;\n    if (options.timeline_frequency === 'month') groupedData[d[options.timeline_frequency + 'Total']].date = d.month_start;\n    if (!groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region]) groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region] = {\n      new_cases: 0,\n      new_deaths: 0,\n      cumulative_cases: 0,\n      cumulative_deaths: 0\n    };\n    groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].new_cases += d.new_cases;\n    groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].new_deaths += d.new_deaths;\n    groupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].cumulative_cases = 0;\n  }); // totals by date\n\n  groupedData.forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (!d.hasOwnProperty(dd)) {\n        d[dd] = {\n          new_cases: 0,\n          new_deaths: 0,\n          cumulative_cases: 0,\n          cumulative_deaths: 0\n        };\n      } // if(dd!=='OTH') d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n\n\n      if (i > 0) {\n        d[dd].cumulative_cases = groupedData[i][dd].new_cases + groupedData[i - 1][dd].cumulative_cases;\n        d[dd].cumulative_deaths = groupedData[i][dd].new_deaths + groupedData[i - 1][dd].cumulative_deaths;\n      } else {\n        d[dd].cumulative_cases = groupedData[i][dd].new_cases;\n        d[dd].cumulative_deaths = groupedData[i][dd].new_deaths;\n      }\n    });\n    d.total_new_cases = d.AF.new_cases + d.AP.new_cases + d.AM.new_cases + d.EU.new_cases + d.ME.new_cases + d.OTH.new_cases;\n    d.total_cumulative_cases = d.AF.cumulative_cases + d.AP.cumulative_cases + d.AM.cumulative_cases + d.EU.cumulative_cases + d.ME.cumulative_cases + d.OTH.cumulative_cases;\n    d.total_new_deaths = d.AF.new_deaths + d.AP.new_deaths + d.AM.new_deaths + d.EU.new_deaths + d.ME.new_deaths + d.OTH.new_deaths;\n    d.total_cumulative_deaths = d.AF.cumulative_deaths + d.AP.cumulative_deaths + d.AM.cumulative_deaths + d.EU.cumulative_deaths + d.ME.cumulative_deaths + d.OTH.cumulative_deaths;\n    d.region = [];\n    regions.forEach(function (dd, ii) {\n      d.region.push({\n        'region': dd,\n        'new_cases': d[dd].new_cases,\n        'new_deaths': d[dd].new_deaths,\n        'cumulative_cases': d[dd].cumulative_cases,\n        'cumulative_deaths': d[dd].cumulative_deaths\n      });\n    });\n  });\n  let vgroupedData = [];\n\n  if (options.timeline_type != 'cumulative') {\n    // non-cumulative and stacked\n    // data.vaccines_data = data.vaccines_data_daily;\n    data.vaccines_data.forEach(function (d, i) {\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']]) vgroupedData[d[options.timeline_frequency + 'Total']] = {};\n      if (options.timeline_frequency === 'day') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.date;\n      if (options.timeline_frequency === 'week') vgroupedData[d[options.timeline_frequency + 'Total']].date = moment(d.date).startOf('isoWeek').toDate();\n      if (options.timeline_frequency === 'month') vgroupedData[d[options.timeline_frequency + 'Total']].date = moment(d.date).startOf('month').toDate();\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region] = {\n        new_vaccines: 0\n      };\n      vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].new_vaccines += d.daily_vaccinations;\n    }); // totals by date\n\n    vgroupedData.forEach(function (d, i) {\n      regions.forEach(function (dd, ii) {\n        if (!d[dd]) {\n          d[dd] = {\n            new_vaccines: 0,\n            cumulative_vaccines: 0\n          };\n        }\n      });\n      d.total_new_vaccines = d.AF.new_vaccines + d.AP.new_vaccines + d.AM.new_vaccines + d.EU.new_vaccines + d.ME.new_vaccines + d.OTH.new_vaccines;\n      d.region = [];\n      regions.forEach(function (dd, ii) {\n        d.region.push({\n          'region': dd,\n          'new_vaccines': d[dd].new_vaccines\n        });\n      });\n    });\n  } else {\n    // cumulative only\n    // data.vaccines_data = [];\n    // if(options.timeline_frequency==='day') {\n    //     data.vaccines_data = clone(data.vaccines_data_cumulative);\n    // }\n    if (options.timeline_frequency === 'week') {\n      data.vaccines_data.forEach(function (d, i) {\n        var endOfWeekDate = moment(d.date).endOf('isoWeek').startOf('day').unix();\n        var date = moment(d.date).startOf('day').unix();\n\n        if (date == endOfWeekDate || date == moment(options.maxVDate).startOf('day').unix()) {\n          data.vaccines_data.push(d);\n        }\n      });\n    }\n\n    if (options.timeline_frequency === 'month') {\n      var maxDateUnix = moment(options.maxVDate).startOf('day').unix();\n      data.vaccines_data.forEach(function (d, i) {\n        var endOfMonthDate = moment(d.date).endOf('month').startOf('day').unix();\n        var date = moment(d.date).startOf('day').unix();\n\n        if (date == endOfMonthDate || moment(options.maxVDate).startOf('day').unix() != endOfMonthDate && date == maxDateUnix) {\n          data.vaccines_data.push(d);\n        }\n      });\n    }\n\n    data.vaccines_data.forEach(function (d, i) {\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']]) vgroupedData[d[options.timeline_frequency + 'Total']] = {};\n      if (options.timeline_frequency === 'day') vgroupedData[d[options.timeline_frequency + 'Total']].date = d.date;\n      if (options.timeline_frequency === 'week') vgroupedData[d[options.timeline_frequency + 'Total']].date = moment(d.date).startOf('isoWeek').toDate();\n      if (options.timeline_frequency === 'month') vgroupedData[d[options.timeline_frequency + 'Total']].date = moment(d.date).startOf('month').toDate();\n      if (!vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region] = {\n        cumulative_vaccines: 0\n      };\n      vgroupedData[d[options.timeline_frequency + 'Total']][d.ifrc_region].cumulative_vaccines += d.total_vaccinations;\n    }); // totals by date\n\n    vgroupedData.forEach(function (d, i) {\n      regions.forEach(function (dd, ii) {\n        if (!d[dd]) {\n          d[dd] = {\n            cumulative_vaccines: 0\n          };\n        }\n      });\n      d.total_cumulative_vaccines = d.AF.cumulative_vaccines + d.AP.cumulative_vaccines + d.AM.cumulative_vaccines + d.EU.cumulative_vaccines + d.ME.cumulative_vaccines + d.OTH.cumulative_vaccines;\n      d.region = [];\n      regions.forEach(function (dd, ii) {\n        d.region.push({\n          'region': dd,\n          'cumulative_vaccines': d[dd].cumulative_vaccines\n        });\n      });\n    });\n  }\n\n  vgroupedData = vgroupedData.filter(function (el) {\n    return el;\n  });\n  const numIntervals = d3.max(data.who_data, function (d, i) {\n    return d[options.timeline_frequency + 'Total'];\n  });\n  const maxCases = d3.max(groupedData, function (d, i) {\n    if (options.timeline_type === 'non-cumulative') return d.total_new_cases;\n    if (options.timeline_type === 'cumulative') return d.total_cumulative_cases;\n    if (options.timeline_type === 'stacked') return 100;\n  });\n  const maxDeaths = d3.max(groupedData, function (d, i) {\n    if (options.timeline_type === 'non-cumulative') return d.total_new_deaths;\n    if (options.timeline_type === 'cumulative') return d.total_cumulative_deaths;\n    if (options.timeline_type === 'stacked') return 100;\n  });\n  const maxVaccines = d3.max(vgroupedData, function (d, i) {\n    if (d) {\n      if (options.timeline_type === 'non-cumulative') return d.total_new_vaccines;\n      if (options.timeline_type === 'cumulative') return d.total_cumulative_vaccines;\n      if (options.timeline_type === 'stacked') return 100;\n    }\n  });\n  const svg = d3.select('#timechart_svg');\n  const width = 2000;\n  const barWidth = width / numIntervals;\n  let barSpacing = 0.04;\n  if (options.timeline_frequency === 'month') barSpacing = 0.03;\n  if (options.timeline_frequency === 'day') barSpacing = 0; // define scales\n  // xScale = d3.scaleTime()\n  // .range([0,width])\n  // .domain([minDate,md]);\n  // xScaleAxis = d3.scaleTime()\n  // .range([23,596])\n  // .domain([minDate,md]);\n\n  yScaleCases = d3.scaleLinear().range([0, 140]).domain([0, maxCases]);\n  yScaleCasesAxis = d3.scaleLinear().range([140, 0]).domain([0, maxCases]);\n  yScaleDeaths = d3.scaleLinear().range([0, 140]).domain([0, maxDeaths]);\n  yScaleDeathsAxis = d3.scaleLinear().range([140, 0]).domain([0, maxDeaths]);\n  yScaleVaccines = d3.scaleLinear().range([0, 140]).domain([0, maxVaccines]);\n  yScaleVaccinesAxis = d3.scaleLinear().range([140, 0]).domain([0, maxVaccines]); // define axi\n\n  yAxisCases = d3.axisRight().scale(yScaleCasesAxis).ticks(3).tickSize(3).tickPadding(3).tickFormat(function (d) {\n    if (options.timeline_type == 'stacked') return nFormatter(d) + '%';\n    return nFormatter(d);\n  });\n  yAxisDeaths = d3.axisRight().scale(yScaleDeathsAxis).ticks(3).tickSize(3).tickPadding(3).tickFormat(function (d) {\n    if (options.timeline_type == 'stacked') return nFormatter(d) + '%';\n    return nFormatter(d);\n  });\n  yAxisVaccines = d3.axisRight().scale(yScaleVaccinesAxis).ticks(3).tickSize(3).tickPadding(3).tickFormat(function (d) {\n    if (options.timeline_type == 'stacked') return nFormatter(d) + '%';\n    return nFormatter(d);\n  }); // y-axis cases\n\n  var yAxisCasesText = d3.select('#casesAxis').transition().duration(500).call(yAxisCases); // y-axis deaths\n\n  var yAxisDeathsText = d3.select('#deathsAxis').transition().duration(500).call(yAxisDeaths); // y-axis vaccines\n\n  var yAxisVaccinesText = d3.select('#VaccinesAxis').transition().duration(500).call(yAxisVaccines); // CASES\n  // loop through groupedData and draw bars\n\n  const barGroups = svg.selectAll('.bar_group').data(groupedData).attr('data-date', function (d) {\n    return d.date;\n  }).attr('transform', function (d, i) {\n    return 'translate(' + xScale(d.date) + ')';\n  }); // CASES\n\n  barGroups.selectAll('.cases_bar').data(function (d, i) {\n    return d.region.filter(function (dd, ii) {\n      return dd.region !== 'OTH';\n    });\n  }).transition().duration(500).attr('y', function (d, i) {\n    const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n    let dp = 0;\n\n    if (i > 0) {\n      for (let ii = 1; ii <= i; ii++) {\n        if (options.timeline_type === 'cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].cumulative_cases;\n        if (options.timeline_type === 'non-cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].new_cases;\n        if (options.timeline_type === 'stacked') dp += d3.select(this.parentNode).datum().region[ii - 1].new_cases;\n      }\n    }\n\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = 140 - yScaleCases(d.cumulative_cases) - yScaleCases(dp);\n    if (options.timeline_type === 'non-cumulative') y = 140 - yScaleCases(d.new_cases) - yScaleCases(dp);\n    if (options.timeline_type === 'stacked') y = 140 - 140 * (d.new_cases / totalNewCases) - 140 * (dp / totalNewCases);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('height', function (d, i) {\n    const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = yScaleCases(d.cumulative_cases);\n    if (options.timeline_type === 'non-cumulative') y = yScaleCases(d.new_cases);\n    if (options.timeline_type === 'stacked') y = 140 * (d.new_cases / totalNewCases);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('fill', function (d, i) {\n    return colors.regions[d.region];\n    return 'blue';\n  }); // // DEATHS\n\n  barGroups.selectAll('.deaths_bar').data(function (d, i) {\n    return d.region.filter(function (dd, ii) {\n      return dd.region !== 'OTH';\n    });\n  }).transition().duration(500).attr('y', function (d, i) {\n    const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n    let dp = 0;\n\n    if (i > 0) {\n      for (let ii = 1; ii <= i; ii++) {\n        if (options.timeline_type === 'cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].cumulative_deaths;\n        if (options.timeline_type === 'non-cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].new_deaths;\n        if (options.timeline_type === 'stacked') dp += d3.select(this.parentNode).datum().region[ii - 1].new_deaths;\n      }\n    }\n\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = 140 - yScaleDeaths(d.cumulative_deaths) - yScaleDeaths(dp) + 170;\n    if (options.timeline_type === 'non-cumulative') y = 140 - yScaleDeaths(d.new_deaths) - yScaleDeaths(dp) + 170;\n    if (options.timeline_type === 'stacked') y = 140 - 140 * (d.new_deaths / totalNewDeaths) - 140 * (dp / totalNewDeaths) + 170; // if(options.timeline_type==='non-cumulative') if(y>310) return 0;\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('height', function (d, i) {\n    const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = yScaleDeaths(d.cumulative_deaths);\n    if (options.timeline_type === 'non-cumulative') y = yScaleDeaths(d.new_deaths);\n    if (options.timeline_type === 'stacked') y = 140 * (d.new_deaths / totalNewDeaths);\n    if (options.timeline_type === 'non-cumulative') if (y < 0) return 0;\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  });\n\n  if (groupedData.length == 0) {\n    d3.selectAll('.cases_bar').transition().duration(500).attr('y', 140).attr('height', 0);\n    d3.selectAll('.deaths_bar').transition().duration(500).attr('y', 140 + 170).attr('height', 0);\n  } // // VACCINES\n\n\n  const vbarGroups = svg.selectAll('.vbar_group').data(vgroupedData).attr('data-date', function (d) {\n    return d.date;\n  }).attr('transform', function (d, i) {\n    return 'translate(' + xScale(d.date) + ', 344)';\n  });\n  vbarGroups.selectAll('.vaccines_bar').data(function (d, i) {\n    return d.region.filter(function (dd, ii) {\n      return dd.region !== 'OTH';\n    });\n  }).transition().duration(500).attr('y', function (d, i) {\n    const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n    let dp = 0;\n\n    if (i > 0) {\n      for (let ii = 1; ii <= i; ii++) {\n        if (options.timeline_type === 'cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].cumulative_vaccines;\n        if (options.timeline_type === 'non-cumulative') dp += d3.select(this.parentNode).datum().region[ii - 1].new_vaccines;\n        if (options.timeline_type === 'stacked') dp += d3.select(this.parentNode).datum().region[ii - 1].new_vaccines;\n      }\n    }\n\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = 140 - yScaleVaccines(d.cumulative_vaccines) - yScaleVaccines(dp);\n    if (options.timeline_type === 'non-cumulative') y = 140 - yScaleVaccines(d.new_vaccines) - yScaleVaccines(dp);\n    if (options.timeline_type === 'stacked') y = 140 - 140 * (d.new_vaccines / totalNewVaccines) - 140 * (dp / totalNewVaccines);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  }).attr('height', function (d, i) {\n    const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n    let y = 0;\n    if (options.timeline_type === 'cumulative') y = yScaleVaccines(d.cumulative_vaccines);\n    if (options.timeline_type === 'non-cumulative') y = yScaleVaccines(d.new_vaccines);\n    if (options.timeline_type === 'stacked') y = 140 * (d.new_vaccines / totalNewVaccines);\n\n    if (y) {\n      if (y > 0) {\n        return y;\n      } else {\n        return 0;\n      }\n\n      ;\n    } else {\n      return 0;\n    }\n\n    ;\n  });\n\n  if (vgroupedData.length == 0) {\n    d3.selectAll('.vaccines_bar').transition().duration(500).attr('y', 140).attr('height', 0);\n  } // // bar size tweak for spacing\n  // if(options.timeline_frequency==='month'){\n  //     barGroups.selectAll(\".timeBar\")\n  //     .attr(\"width\", function(d) {\n  //         var date = d3.select(this.parentNode).datum().date;\n  //         var next = d3.timeMonth.offset(date, 1);\n  //         return (xScale(next)- xScale(date))*(1-barSpacing);\n  //       })\n  //     .attr(\"x\", function(d) {\n  //         var date = d3.select(this.parentNode).datum().date;\n  //         var next = d3.timeMonth.offset(date, 1);\n  //         return (xScale(next)- xScale(date))*(barSpacing/2);\n  //       })\n  //     }\n\n\n  data.vgroupedData = vgroupedData;\n  data.groupedData = groupedData;\n}\nexport default drawTimechart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Timechart.js"],"names":["d3","moment","colors","nFormatter","selection","textwrap","clone","yScaleCases","yScaleDeaths","yScaleVaccines","yAxisCases","yAxisDeaths","yAxisVaccines","yScaleCasesAxis","yScaleDeathsAxis","yScaleVaccinesAxis","xScale","xAxis","xScaleAxis","xScaleEvents","maxDate","minDate","md","regions","drawTimechart","data","options","Date","min_date","max_date","groupedData","who_data","forEach","d","i","timeline_frequency","date","week_start","month_start","ifrc_region","new_cases","new_deaths","cumulative_cases","cumulative_deaths","dd","ii","hasOwnProperty","total_new_cases","AF","AP","AM","EU","ME","OTH","total_cumulative_cases","total_new_deaths","total_cumulative_deaths","region","push","vgroupedData","timeline_type","vaccines_data","new_vaccines","daily_vaccinations","cumulative_vaccines","total_new_vaccines","newVaccines","vaccines_data_cumulative","endOfWeekDate","endOf","startOf","unix","maxVDate","maxDateUnix","endOfMonthDate","total_vaccinations","total_cumulative_vaccines","filter","el","numIntervals","max","maxCases","maxDeaths","maxVaccines","toDate","add","svg","select","selectAll","remove","append","attr","width","barWidth","barSpacing","scaleTime","range","domain","scaleLinear","axisBottom","scale","tickSize","tickPadding","axisRight","ticks","tickFormat","yAxisGroup","yAxisCasesText","call","yAxisDeathsText","yAxisVaccinesText","xAxisCases","xAxisDeaths","xAxisVaccines","xAxisTimeline","barGroups","enter","totalNewCases","parentNode","datum","dp","y","totalNewDeaths","next","timeMonth","offset","vbarGroups","totalNewVaccines","tData","timeline_data","document","getElementById","appendChild","node","timelineTooltip","eventTooltip","hoverBar","on","event","coords","pointer","xDate","invert","getTime","style","black","tooltipStr","format","text","groupedDataFiltered","vgroupedDataFiltered","deaths","cases","vaccines","bw","ratio","brushR","brushL","x","xx","events","length","subtract","wrap","bounds","height","method","description","bbox","getBBox","h","ys","parseInt","circles","brush","brushX","extent","brushed","gBrush","brushScale","move","parseFloat","x2","w","viewBoxW","Math","round","viewBoxX","updateTimechart","transition","duration"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {nFormatter} from './HelperFunctions';\nimport { selection, textwrap } from 'd3-textwrap';\nimport clone from 'just-clone';\n\nlet yScaleCases;\nlet yScaleDeaths;\nlet yScaleVaccines;\nlet yAxisCases;\nlet yAxisDeaths;\nlet yAxisVaccines;\nlet yScaleCasesAxis;\nlet yScaleDeathsAxis;\nlet yScaleVaccinesAxis;\nlet xScale;\nlet xAxis; \nlet xScaleAxis;\nlet xScaleEvents;\nlet maxDate; \nlet minDate;\nlet md; \n\nconst regions = ['AF', 'ME', 'AP', 'EU', 'AM', 'OTH'];\n\nexport function drawTimechart(data, options) {\n\n    minDate = new Date(data.min_date);\n    maxDate = new Date(data.max_date);\n\n    const groupedData = [];\n\n    data.who_data.forEach(function(d,i){\n        if(!groupedData[d[options.timeline_frequency+'Total']])groupedData[d[options.timeline_frequency+'Total']] = {};\n        if(options.timeline_frequency==='day') groupedData[d[options.timeline_frequency+'Total']].date = d.date;\n        if(options.timeline_frequency==='week') groupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n        if(options.timeline_frequency==='month') groupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n        if(!groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_cases += d.new_cases;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_deaths += d.new_deaths;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_cases = 0;\n    });\n\n    // totals by date\n    groupedData.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if(!d.hasOwnProperty(dd)){\n               d[dd] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n            }\n            // if(dd!=='OTH') d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n            if(i>0){\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases + groupedData[i-1][dd].cumulative_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths + groupedData[i-1][dd].cumulative_deaths;\n            } else {\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths;\n            }\n        })\n\n        d.total_new_cases = d.AF.new_cases + d.AP.new_cases + d.AM.new_cases + d.EU.new_cases + d.ME.new_cases + d.OTH.new_cases; \n        d.total_cumulative_cases = d.AF.cumulative_cases + d.AP.cumulative_cases + d.AM.cumulative_cases + d.EU.cumulative_cases + d.ME.cumulative_cases + d.OTH.cumulative_cases; \n        d.total_new_deaths = d.AF.new_deaths + d.AP.new_deaths + d.AM.new_deaths + d.EU.new_deaths + d.ME.new_deaths + d.OTH.new_deaths; \n        d.total_cumulative_deaths = d.AF.cumulative_deaths + d.AP.cumulative_deaths + d.AM.cumulative_deaths + d.EU.cumulative_deaths + d.ME.cumulative_deaths + d.OTH.cumulative_deaths; \n        d.region = [];\n\n        regions.forEach(function(dd,ii){\n            d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n        })\n\n    });\n\n    let vgroupedData = [];\n\n    if(options.timeline_type!='cumulative'){ // cumulative and stacked\n        // data.vaccines_data = data.vaccines_data_daily;\n        // data.vaccines_data_daily = clone(data.vaccines_data);\n        data.vaccines_data.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_vaccines += d.daily_vaccinations;\n        });\n\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {new_vaccines: 0, cumulative_vaccines: 0}\n                }\n            });\n            d.total_new_vaccines = d.AF.new_vaccines + d.AP.new_vaccines + d.AM.new_vaccines + d.EU.new_vaccines + d.ME.new_vaccines + d.OTH.new_vaccines; \n            d.region = [];\n\n            regions.forEach(function(dd,ii){\n                var newVaccines = 0;\n                if(d[dd].new_vaccines>0){\n                    newVaccines += d[dd].new_vaccines\n                }\n                d.region.push({'region': dd, 'new_vaccines': newVaccines });\n            })\n        });\n\n    } else{ // cumulative only\n        data.vaccines_data = [];\n        if(options.timeline_frequency==='day') {\n            data.vaccines_data = clone(data.vaccines_data_cumulative);\n        }\n        if(options.timeline_frequency==='week') {\n            data.vaccines_data.forEach(function(d,i){\n                var endOfWeekDate = moment(d.date).endOf('isoWeek').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfWeekDate)||(date==moment(options.maxVDate).startOf('day').unix())){\n                    data.vaccines_data.push(d);\n                }\n            })\n        }\n        if(options.timeline_frequency==='month') {\n            var maxDateUnix = moment(options.maxVDate).startOf('day').unix();\n            data.vaccines_data.forEach(function(d,i){\n                var endOfMonthDate = moment(d.date).endOf('month').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfMonthDate)||((moment(options.maxVDate).startOf('day').unix()!=endOfMonthDate)&&(date==maxDateUnix))){\n                    data.vaccines_data.push(d);\n                }\n            })\n        }\n\n        data.vaccines_data.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {cumulative_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_vaccines += d.total_vaccinations;\n        });\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {cumulative_vaccines: 0}\n                }\n            });\n            d.total_cumulative_vaccines = d.AF.cumulative_vaccines + d.AP.cumulative_vaccines + d.AM.cumulative_vaccines + d.EU.cumulative_vaccines + d.ME.cumulative_vaccines + d.OTH.cumulative_vaccines; \n            d.region = [];\n            regions.forEach(function(dd,ii){\n                d.region.push({'region': dd, 'cumulative_vaccines': d[dd].cumulative_vaccines});\n            })\n        });\n    }\n\n    vgroupedData = vgroupedData.filter(function(el) { return el; });\n\n    const numIntervals = d3.max(data.who_data, function(d,i){\n        return d[options.timeline_frequency+'Total'];\n    });\n\n    const maxCases = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_cases;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_cases;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxDeaths = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_deaths;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_deaths;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxVaccines = d3.max(vgroupedData, function(d,i){\n        if(d){\n            if(options.timeline_type==='non-cumulative') return d.total_new_vaccines;\n            if(options.timeline_type==='cumulative') return d.total_cumulative_vaccines;\n            if(options.timeline_type==='stacked') return 100;\n        }\n    })\n\n    // define date range\n    // const minDate = groupedData[0].date;\n    // const maxDate = groupedData[numIntervals].date;\n    // const minDate = groupedData[0].date;\n\n    // if(options.timeline_frequency==='month') md = md.add(1, 'months');\n    // if(options.timeline_frequency==='week') md = md.add(1, 'weeks');\n    if(options.timeline_frequency==='month') minDate = moment(minDate).startOf('month').startOf('day').toDate();\n    if(options.timeline_frequency==='month') maxDate = moment(maxDate).endOf('month').startOf('day').toDate();\n    if(options.timeline_frequency==='week') maxDate = moment(maxDate).endOf('isoWeek').startOf('day').toDate();\n\n    md = moment(maxDate);\n    if(options.timeline_frequency==='day') md = new Date(moment(maxDate).add(1, 'days').toDate());\n\n    const svg = d3.select('#timechart_svg');\n    svg.selectAll('g').remove();\n    d3.selectAll('#layout .yAxis').remove();\n    d3.selectAll('#yAxis').remove();\n    d3.selectAll('#layout .xAxis').remove();\n\n    //bg\n    svg.append('g').append('rect')\n    .attr('width', 2000)\n    .attr('height', '100%')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('fill', '#FFF')\n    .attr('opacity', 0);\n\n    const width = 2000;\n    const barWidth = width/numIntervals;\n\n    let barSpacing = 0.04; \n    if(options.timeline_frequency==='month') barSpacing = 0.03;\n    if(options.timeline_frequency==='day') barSpacing = 0;\n\n    // define scales\n\n    xScale = d3.scaleTime()\n    .range([0,width])\n    .domain([minDate,md]);\n\n    xScaleAxis = d3.scaleTime()\n    .range([0,596])\n    .domain([minDate,md]);\n\n    yScaleCases = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxCases]);\n\n    yScaleCasesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxCases]);\n\n    yScaleDeaths = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxDeaths]);\n\n    yScaleDeathsAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxDeaths]);\n\n    yScaleVaccines = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxVaccines]);\n\n    yScaleVaccinesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxVaccines]);\n\n    // define axi\n    \n    xAxis = d3.axisBottom()\n    .scale(xScaleAxis)\n    .tickSize(2)\n    .tickPadding(3);\n\n    // if(options.timeline_frequency=='month')\n    // xAxis.ticks(d3.timeMonth.every(3)).tickFormat(d3.timeFormat(\"%b %Y\"));\n\n    // if(options.timeline_frequency=='week')\n    // xAxis.ticks(d3.timeWeek.every(10)).tickFormat(d3.timeFormat(\"%d %b %Y\"));\n\n    yAxisCases = d3.axisRight()\n    .scale(yScaleCasesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisDeaths = d3.axisRight()\n    .scale(yScaleDeathsAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisVaccines = d3.axisRight()\n    .scale(yScaleVaccinesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    // y-axis cases\n    var yAxisGroup = d3.select('#layout').append(\"g\").attr('id', 'yAxis').attr('clip-path', 'url(#mask)');\n\n    var yAxisCasesText = yAxisGroup.append(\"g\")\n    .attr(\"class\", \"yAxis axis\")\n    .attr(\"id\", \"casesAxis\")\n    .attr('transform', 'translate(620,363)')\n    .call(yAxisCases);\n\n    // y-axis deaths\n    var yAxisDeathsText = yAxisGroup.append(\"g\")\n    .attr(\"class\", \"yAxis axis\")\n    .attr(\"id\", \"deathsAxis\")\n    .attr('transform', 'translate(620,534)')\n    .call(yAxisDeaths);\n\n    // y-axis vaccines\n    var yAxisVaccinesText = yAxisGroup.append(\"g\")\n    .attr(\"class\", \"yAxis axis\")\n    .attr(\"id\", \"VaccinesAxis\")\n    .attr('transform', 'translate(620,707.5)')\n    .call(yAxisVaccines);\n\n    // x-axis cases\n    var xAxisCases = yAxisGroup.append('g')\n    .attr(\"id\", \"casesXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,504)')\n    .call(xAxis);\n\n    var xAxisDeaths = yAxisGroup.append('g')\n    .attr(\"id\", \"deathsXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,674)')\n    .call(xAxis);\n\n    var xAxisVaccines = yAxisGroup.append('g')\n    .attr(\"id\", \"vaccinesXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,848)')\n    .call(xAxis);\n\n    var xAxisTimeline = yAxisGroup.append('g')\n    .attr(\"id\", \"timelineXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,908)')\n    .call(xAxis);\n\n    // CASES\n    // loop through groupedData and draw bars\n    const barGroups = svg.selectAll('.bar_group')\n    .data(groupedData)\n    .enter()\n    .append('g')\n    .attr('class', 'bar_group')\n    .attr('data-date', function(d){ return d.date})\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+')'\n    })\n\n    // CASES\n    barGroups.selectAll('.cases_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .enter()\n    .append('rect')\n    .attr('class', function(d,i) { return 'timeBar cases_bar time_'+d.region })\n    .attr('x', (barWidth*barSpacing))\n    .attr('y', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_cases;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleCases(d.cumulative_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleCases(d.new_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_cases/totalNewCases))-((140*(dp/totalNewCases))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('width', barWidth-(barWidth*barSpacing*2))\n    .attr('height', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleCases(d.cumulative_cases);\n        if(options.timeline_type==='non-cumulative') y = yScaleCases(d.new_cases);\n        if(options.timeline_type==='stacked') y = (140*(d.new_cases/totalNewCases));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n    })\n\n    // DEATHS\n    barGroups.selectAll('.deaths_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .enter()\n    .append('rect')\n    .attr('class', function(d,i) { return 'timeBar deaths_bar time_'+d.region })\n    .attr('x', (barWidth*barSpacing))\n    .attr('y', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_deaths;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleDeaths(d.cumulative_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleDeaths(d.new_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_deaths/totalNewDeaths))-((140*(dp/totalNewDeaths)))+170)\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('width', barWidth-(barWidth*barSpacing*2))\n    .attr('height', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleDeaths(d.cumulative_deaths);\n        if(options.timeline_type==='non-cumulative') y = yScaleDeaths(d.new_deaths);\n        if(options.timeline_type==='stacked') y = (140*(d.new_deaths/totalNewDeaths));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n    });\n\n    // bar size tweak for spacing\n    if(options.timeline_frequency==='month'){\n        barGroups.selectAll(\".timeBar\")\n        .attr(\"width\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(1-barSpacing);\n            })\n        .attr(\"x\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(barSpacing/2);\n            })\n        }\n\n    // VACCINES\n\n    const vbarGroups = svg.selectAll('.vbar_group')\n    .data(vgroupedData)\n    .enter()\n    .append('g')\n    .attr('class', 'vbar_group')\n    .attr('data-date', function(d){ return d.date})\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+', 344)'\n    })\n  \n    vbarGroups.selectAll('.vaccines_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .enter()\n    .append('rect')\n    .attr('class', 'timeBar vaccines_bar')\n    .attr('class', function(d,i) { return 'timeBar vaccines_bar time_'+d.region })\n    .attr('x', (barWidth*barSpacing))\n    .attr('y', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_vaccines;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleVaccines(d.cumulative_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleVaccines(d.new_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_vaccines/totalNewVaccines))-((140*(dp/totalNewVaccines))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('width', barWidth-(barWidth*barSpacing*2))\n    .attr('height', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleVaccines(d.cumulative_vaccines);\n        if(options.timeline_type==='non-cumulative') y = yScaleVaccines(d.new_vaccines);\n        if(options.timeline_type==='stacked') y = (140*(d.new_vaccines/totalNewVaccines));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n    });\n\n    if(options.timeline_frequency==='month'){\n    vbarGroups.selectAll(\".timeBar\")\n    .attr(\"width\", function(d) {\n        var date = d3.select(this.parentNode).datum().date;\n        var next = d3.timeMonth.offset(date, 1);\n        return (xScale(next)- xScale(date))*(1-barSpacing);\n        })\n    .attr(\"x\", function(d) {\n        var date = d3.select(this.parentNode).datum().date;\n        var next = d3.timeMonth.offset(date, 1);\n        return (xScale(next)- xScale(date))*(barSpacing/2);\n        })\n    }\n\n    // bar size tweak for spacing\n    if(options.timeline_frequency==='month'){\n        barGroups.selectAll(\".timeBar\")\n        .attr(\"width\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(1-barSpacing);\n          })\n        .attr(\"x\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(barSpacing/2);\n          })\n        }\n\n    data.vgroupedData = vgroupedData;\n    data.groupedData = groupedData;\n\n        // tooltips\n\n        // events calendar timeline\n        var tData = data.timeline_data;\n\n        xScaleEvents = d3.scaleTime()\n        .range([25,619])\n        .domain([minDate,md]);\n        \n        // bring to front\n       document.getElementById(\"svg\").appendChild(d3.select('#timeline_tooltip').node());\n       document.getElementById(\"svg\").appendChild(d3.select('#event_tooltip').node());\n       var timelineTooltip = d3.select('#timeline_tooltip').attr('opacity', 0);\n       var eventTooltip = d3.select('#event_tooltip').attr('opacity', 0);\n\n        // hover bar\n        var hoverBar = svg.append('rect')\n        .attr('id','timechart_hover')\n        .attr('width', barWidth)\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('opacity', 0)\n        .attr('height', '100%')\n        .attr('fill', 'rgb(221 221 221 / 40%)')\n\n        d3.select('#timechart_svg').on('mouseover',  (event) => {\n\n            var coords = d3.pointer( event );\n            hoverBar.attr('opacity', 1)\n\n            var xDate = xScale.invert(coords[0]);\n\n            if(options.timeline_frequency=='week') {\n                xDate = moment(xDate).startOf('isoWeek');\n            }\n            if(options.timeline_frequency=='day') {\n                xDate = moment(xDate).startOf('day');\n            }\n            if(options.timeline_frequency=='month') {\n                xDate = moment(xDate).startOf('month');\n            }\n\n            if(coords[1]<470){\n                timelineTooltip.attr('opacity', 1).attr('display', 'inline');\n                hoverBar.attr('height', '100%');\n            } else if(coords[1]>510){\n                eventTooltip.attr('opacity', 1);\n                hoverBar.attr('height', '90%');\n            } else {\n                eventTooltip.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n                hoverBar.attr('height', '100%');\n            }\n\n            if((xDate.toDate().getTime()<minDate.getTime())){\n                hoverBar.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n            }\n\n            d3.select('#svg_container').style('z-index', 10);\n\n        }).on('mouseout',  (event) => {\n            hoverBar.attr('opacity', 0)\n            timelineTooltip.attr('opacity', 0).attr('display', 'none');\n            // timelineTooltip.attr('opacity', 0).attr('transform', 'translate(0,0)');\n            d3.select('#svg_container').style('z-index', 1);\n            eventTooltip.attr('opacity', 0).attr('transform', 'translate(0,0)');\n            d3.selectAll('.event_marker circle').style('stroke', colors.black);\n        })\n        .on('mousemove', (event) => {\n            var coords = d3.pointer( event );\n\n            var xDate = xScale.invert(coords[0]);\n\n            var tooltipStr = '';\n            if(options.timeline_frequency=='week') {\n                xDate = moment(xDate).startOf('isoWeek');\n                tooltipStr = xDate.format('ll');\n                d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n            }\n            if(options.timeline_frequency=='day') {\n                xDate = moment(xDate).startOf('day');\n                tooltipStr = xDate.format('ll');\n                d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n            }\n            if(options.timeline_frequency=='month') {\n                xDate = moment(xDate).startOf('month');\n                tooltipStr = xDate.format('MMMM YYYY');\n                d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n            }\n            hoverBar.attr('x', xScale(xDate.toDate()));\n\n            var groupedDataFiltered = data.groupedData.filter(function(d,i){\n                return moment(d.date).startOf('day').unix() == xDate.startOf('day').unix();\n            });\n            var vgroupedDataFiltered = data.vgroupedData.filter(function(d,i){\n                return moment(d.date).startOf('day').unix() == xDate.startOf('day').unix();\n            });\n\n            var deaths = '-';\n            var cases = '-';\n            var vaccines = '-';\n            if(options.timeline_type=='cumulative'){ \n                // cumulative\n                if(groupedDataFiltered[0]) cases = nFormatter(groupedDataFiltered[0].total_cumulative_cases, 2);\n                if(groupedDataFiltered[0]) deaths = nFormatter(groupedDataFiltered[0].total_cumulative_deaths, 2);\n                if(vgroupedDataFiltered[0]) vaccines = nFormatter(vgroupedDataFiltered[0].total_cumulative_vaccines, 2);\n            } else {\n                // non-cumulative/stacked\n                if(groupedDataFiltered[0]) cases = nFormatter(groupedDataFiltered[0].total_new_cases, 2);\n                if(groupedDataFiltered[0]) deaths = nFormatter(groupedDataFiltered[0].total_new_deaths, 2);\n                if(vgroupedDataFiltered[0]) vaccines = nFormatter(vgroupedDataFiltered[0].total_new_vaccines, 2);\n            }\n\n            d3.select('#tooltip_cases tspan').text((cases)).attr(\"text-anchor\", \"end\").attr('dx', 32)\n            d3.select('#tooltip_deaths tspan').text((deaths)).attr(\"text-anchor\", \"end\").attr('dx', 32)\n            d3.select('#tooltip_vaccines tspan').text((vaccines)).attr(\"text-anchor\", \"end\").attr('dx', 32)\n\n            // if((xDate.toDate().getTime()>options.maxDate.getTime())){\n            //     hoverBar.attr('opacity', 0);\n            // // } else \n            if(((xDate.toDate().getTime()<minDate.getTime()))&&(options.timeline_frequency=='day')){\n                hoverBar.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n            }\n\n            if(options.timeline_frequency=='month'){\n                hoverBar.attr('width', function(){\n                   return xScale(moment(xDate).endOf('month')) - xScale(moment(xDate).startOf('month'));\n                })\n            }\n            timelineTooltip.attr('transform', function(){\n                var bw = barWidth;\n                var ratio = (options.brushR - options.brushL)/600;\n                var offset = 0;\n                if(ratio<0.5) offset = 3;\n                if(ratio<0.3) offset = 12;\n                if(ratio<0.2) offset = 20;\n                if(ratio<0.15) offset = 21;\n                if(options.timeline_frequency=='month') { \n                    if(ratio<0.6) offset = 20;\n                    if(ratio<0.5) offset = 30;\n                    if(ratio<0.3) offset = 50;\n                    if(ratio<0.2) offset = 60;\n                    if(ratio<0.1) offset = 70;\n                    return 'translate('+(((xScaleEvents(xDate.toDate()))+(barWidth/3))+offset)+','+(coords[1]+353)+')';\n                }\n                return 'translate('+((xScaleEvents(xDate.toDate())+(18))+offset)+','+(coords[1]+353)+')';\n            })\n\n            if(coords[1]<470){\n                timelineTooltip.attr('opacity', 1);\n                hoverBar.attr('opacity', 1);\n                hoverBar.attr('height', '100%');\n            } else if(coords[1]>510){\n                eventTooltip.attr('opacity', 1);\n                hoverBar.attr('height', '90%');\n                var x = moment(xScale.invert(coords[0])).startOf('day');\n                var xx = (xScale.invert(coords[0]))\n                eventTooltip.attr('transform', function(){\n                    return 'translate('+(xScaleEvents(x.toDate())+(-3))+','+(817)+')';\n                });\n\n                var events = tData.filter(function(d,i){\n                    return moment(d.date).startOf('day').unix() == x.unix()\n                });\n\n                // select nearest neighbor for ux purposes \n                if(events.length==0){\n                    events = tData.filter(function(d,i){\n                        return ((moment(d.date).startOf('day').unix() <= moment(x).add(1, 'days').unix())&&(moment(d.date).startOf('day').unix() >= moment(x).subtract(1, 'days').unix()))\n                    });\n                }\n                \n                if(events.length>0){\n\n                    d3.select('#event-'+moment(events[0].date).startOf('day').unix()).select('path').style('stroke', '#000').attr('opacity', 1);\n                    tooltipStr = moment(events[0].date).startOf('day').format('ll');\n                    d3.select('#event_tooltip_date tspan').text(tooltipStr);\n\n                    var wrap = textwrap().bounds({height: 200, width: 230}).method('tspans');\n                    var event = d3.select('#event_tooltip_text').text(events[0].description)\n                    .attr('y', 18)\n                    .attr('x', 6)\n                    d3.select('#event_tooltip_text').call(wrap);\n\n                    d3.selectAll('#event_tooltip_text tspan').attr('dy', '1.3em');\n                    var bbox = d3.select('#event_tooltip_text').node().getBBox();\n                    d3.select('#event_tooltip_rect').attr('width', bbox.width+17)\n                    .attr('height', bbox.height +26 );\n\n                    var h = d3.select('#event_tooltip_rect').attr('height');\n                    var ys = 0;\n\n                    if(bbox.height<20){\n                        ys = 19;\n                    } else if(bbox.height<30){\n                        ys = 9;\n                    } else if(bbox.height<40){\n                        ys = 0;\n                    } else if(bbox.height<50){\n                        ys = -20;\n                    } else if(bbox.height<60){\n                        ys = -20;\n                    }\n\n                    var y = d3.select('#event_tooltip_rect').attr('y');\n\n                    d3.select('#event_tooltip_rect').attr('y', ys);\n                    \n                    d3.selectAll('#event_tooltip_text').attr('y', function(d,i){\n                        return parseInt(d3.select(this).attr('y')) + ys;\n                    });\n\n                    d3.selectAll('#event_tooltip_date tspan').attr('dy', function(d,i){\n                        return ys;\n                    });\n\n                    eventTooltip.attr('opacity', 1);\n\n                } else {\n                    d3.selectAll('.event_marker circle').style('stroke', colors.black)\n                    eventTooltip.attr('opacity', 0);\n                }\n            } else {\n                eventTooltip.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n                hoverBar.attr('opacity', 0);\n                hoverBar.attr('height', '100%');\n            }\n\n            if((options.timeline_frequency=='day')&&((xDate.toDate().getTime()<minDate.getTime()))){\n                hoverBar.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n                return false;\n            }\n        });\n\n        tData = tData.filter(d => d.date.length > 0);\n\n        // event lin\n\n        yAxisGroup.append('line')\n        .attr('id', 'event-line')\n        .attr('x1', 0)\n        .attr('x2', 620)\n        .attr('y1', 893)\n        .attr('y2', 893)\n        .attr('stroke-width', 2.5)\n        .attr('stroke', colors.black);\n\n        var circles = yAxisGroup.append('g').selectAll('.event_marker')\n        .data(tData)\n        .enter()\n        .append('g')\n        .attr('class', 'event_marker')\n        .attr('id', function(d,i){\n            return 'event-'+moment(d.date).startOf('day').unix();\n        })\n        .attr('transform', function(d){\n            var x = xScaleEvents(new Date(d.date));\n            return 'translate('+(x)+', 893)';\n        })\n        .style('cursor', 'pointer');\n        // .append('path')\n        // .attr('d', \"M0,-6L4,0 0,6 -4,0Z\")\n        \n        circles.append(\"circle\")\n        .style('stroke', colors.black)\n        .attr('opacity', 1)\n        .attr('r', 6.5)\n        .attr('cx', 0)\n        .attr('cy', 0)\n        .style('stroke-width',2.2)\n        .style('fill', 'white');\n        circles\n        .append(\"circle\")\n        .attr('r', 2)\n        .attr('cx', 0)\n        .attr('cy', 0)\n        .attr('fill', colors.black)\n        .style('stroke', colors.black);\n\n\n        // create brush zoom\n        // reset\n        // options.brushL = 0;\n        // options.brushR = 600;\n        const brush = d3.brushX()\n        .extent([[0,0],[600,20]])\n        .on(\"start brush end\", brushed);\n\n        d3.select('.brush').remove();\n;\n        var gBrush = d3.select('#zoombar').append(\"g\")\n        .attr(\"class\", \"brush\")\n        .attr('opacity', 0.1)\n        .call(brush);\n\n\t\td3.selectAll('.handle rect').attr('fill-opacity', '1').style('visibility', 'visible').attr('width', 2).attr('fill', '#000').style('stroke-opacity', 0);\n\n        var brushScale = d3.scaleLinear()\n        .domain([-3, 597])\n        .range([0,2000]);\n\n        gBrush.call(brush.move, [options.brushL,options.brushR]);\n\n        function brushed(){\n            var x = parseFloat(d3.select('.handle--w').attr('x'));\n            var x2 = parseFloat(d3.select('.handle--e').attr('x'));\n            if((x2-x)<40) return false;\n            var w = d3.select('.selection').attr('width');\n            d3.select('#zoomL').attr('transform', 'translate('+x+',0)');\n            d3.select('#zoomR').attr('transform', 'translate('+(x2)+',0)');\n            d3.select('#zoomOverlay').attr('width', (x2-x));\n            d3.select('#zoomOverlay').attr('x', (x));\n            d3.select('#zoomOverlay').attr('transform', 'translate(3,0)');\n            var viewBoxW = Math.round(brushScale(x2)-brushScale(x));\n            var viewBoxX = Math.round(brushScale(x));\n            options.brushL = x+3;\n            options.brushR = x2+3;\n\n            xScaleAxis = d3.scaleTime()\n            .range([0,596])\n            .domain([new Date(xScale.invert(brushScale(x))),new Date(xScale.invert(brushScale(x2)))]);\n\n            xScaleEvents = d3.scaleTime()\n            .range([25,619])\n            // .domain([minDate,md]);\n            .domain([new Date(xScale.invert(brushScale(x))),new Date(xScale.invert(brushScale(x2)))]);\n\n            d3.selectAll('.event_marker')\n            .attr('transform', function(d){\n                var x = xScaleEvents(new Date(d.date));\n                return 'translate('+(x)+', 893)';\n            });\n\n            xAxis = d3.axisBottom()\n            .ticks(5)\n            .scale(xScaleAxis);\n\n            xAxisCases.call(xAxis);\n            xAxisDeaths.call(xAxis);\n            xAxisVaccines.call(xAxis);\n            xAxisTimeline.call(xAxis);\n            \n            d3.select('#timechart_svg').attr('viewBox', viewBoxX + ' 0 '+ viewBoxW + ' 553')\n        }\n\n}\n\nexport function updateTimechart(data, options) {\n\n    const groupedData = [];\n\n    data.who_data.forEach(function(d,i){\n        if(!groupedData[d[options.timeline_frequency+'Total']])groupedData[d[options.timeline_frequency+'Total']] = {};\n        if(options.timeline_frequency==='day') groupedData[d[options.timeline_frequency+'Total']].date = d.date;\n        if(options.timeline_frequency==='week') groupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n        if(options.timeline_frequency==='month') groupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n        if(!groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_cases += d.new_cases;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_deaths += d.new_deaths;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_cases = 0;\n    });\n\n    // totals by date\n    groupedData.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if(!d.hasOwnProperty(dd)){\n               d[dd] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n            }\n            // if(dd!=='OTH') d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n            if(i>0){\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases + groupedData[i-1][dd].cumulative_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths + groupedData[i-1][dd].cumulative_deaths;\n            } else {\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths;\n            }\n        })\n\n        d.total_new_cases = d.AF.new_cases + d.AP.new_cases + d.AM.new_cases + d.EU.new_cases + d.ME.new_cases + d.OTH.new_cases; \n        d.total_cumulative_cases = d.AF.cumulative_cases + d.AP.cumulative_cases + d.AM.cumulative_cases + d.EU.cumulative_cases + d.ME.cumulative_cases + d.OTH.cumulative_cases; \n        d.total_new_deaths = d.AF.new_deaths + d.AP.new_deaths + d.AM.new_deaths + d.EU.new_deaths + d.ME.new_deaths + d.OTH.new_deaths; \n        d.total_cumulative_deaths = d.AF.cumulative_deaths + d.AP.cumulative_deaths + d.AM.cumulative_deaths + d.EU.cumulative_deaths + d.ME.cumulative_deaths + d.OTH.cumulative_deaths; \n        d.region = [];\n\n        regions.forEach(function(dd,ii){\n            d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n        })\n    });\n\n    let vgroupedData = [];\n\n    if(options.timeline_type!='cumulative'){ // non-cumulative and stacked\n        // data.vaccines_data = data.vaccines_data_daily;\n        data.vaccines_data.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('isoWeek').toDate();\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('month').toDate();\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_vaccines += d.daily_vaccinations;\n        });\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {new_vaccines: 0, cumulative_vaccines: 0}\n                }\n            });\n            d.total_new_vaccines = d.AF.new_vaccines + d.AP.new_vaccines + d.AM.new_vaccines + d.EU.new_vaccines + d.ME.new_vaccines + d.OTH.new_vaccines; \n            d.region = [];\n            regions.forEach(function(dd,ii){\n                d.region.push({'region': dd, 'new_vaccines': d[dd].new_vaccines});\n            })\n        });\n\n    } else{ // cumulative only\n        // data.vaccines_data = [];\n        // if(options.timeline_frequency==='day') {\n        //     data.vaccines_data = clone(data.vaccines_data_cumulative);\n        // }\n        if(options.timeline_frequency==='week') {\n            data.vaccines_data.forEach(function(d,i){\n                var endOfWeekDate = moment(d.date).endOf('isoWeek').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfWeekDate)||(date==moment(options.maxVDate).startOf('day').unix())){\n                    data.vaccines_data.push(d);\n                }\n            })\n        }\n        if(options.timeline_frequency==='month') {\n            var maxDateUnix = moment(options.maxVDate).startOf('day').unix();\n            data.vaccines_data.forEach(function(d,i){\n                var endOfMonthDate = moment(d.date).endOf('month').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfMonthDate)||((moment(options.maxVDate).startOf('day').unix()!=endOfMonthDate)&&(date==maxDateUnix))){\n                    data.vaccines_data.push(d);\n                }\n            })\n        }\n\n        data.vaccines_data.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('isoWeek').toDate();\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('month').toDate();\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {cumulative_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_vaccines += d.total_vaccinations;\n        });\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {cumulative_vaccines: 0}\n                }\n            });\n            d.total_cumulative_vaccines = d.AF.cumulative_vaccines + d.AP.cumulative_vaccines + d.AM.cumulative_vaccines + d.EU.cumulative_vaccines + d.ME.cumulative_vaccines + d.OTH.cumulative_vaccines; \n            d.region = [];\n            regions.forEach(function(dd,ii){\n                d.region.push({'region': dd, 'cumulative_vaccines': d[dd].cumulative_vaccines});\n            })\n        });\n    }\n\n    vgroupedData = vgroupedData.filter(function(el) { return el; });\n\n    const numIntervals = d3.max(data.who_data, function(d,i){\n        return d[options.timeline_frequency+'Total'];\n    });\n\n    const maxCases = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_cases;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_cases;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxDeaths = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_deaths;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_deaths;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxVaccines = d3.max(vgroupedData, function(d,i){\n        if(d){\n            if(options.timeline_type==='non-cumulative') return d.total_new_vaccines;\n            if(options.timeline_type==='cumulative') return d.total_cumulative_vaccines;\n            if(options.timeline_type==='stacked') return 100;\n        }\n    })\n\n    const svg = d3.select('#timechart_svg');\n\n    const width = 2000;\n    const barWidth = width/numIntervals;\n\n    let barSpacing = 0.04; \n    if(options.timeline_frequency==='month') barSpacing = 0.03;\n    if(options.timeline_frequency==='day') barSpacing = 0;\n\n    // define scales\n\n    // xScale = d3.scaleTime()\n    // .range([0,width])\n    // .domain([minDate,md]);\n\n    // xScaleAxis = d3.scaleTime()\n    // .range([23,596])\n    // .domain([minDate,md]);\n\n    yScaleCases = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxCases]);\n\n    yScaleCasesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxCases]);\n\n    yScaleDeaths = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxDeaths]);\n\n    yScaleDeathsAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxDeaths]);\n\n    yScaleVaccines = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxVaccines]);\n\n    yScaleVaccinesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxVaccines]);\n\n    // define axi\n    yAxisCases = d3.axisRight()\n    .scale(yScaleCasesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisDeaths = d3.axisRight()\n    .scale(yScaleDeathsAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisVaccines = d3.axisRight()\n    .scale(yScaleVaccinesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    // y-axis cases\n    var yAxisCasesText = d3.select('#casesAxis')\n    .transition()\n    .duration(500)\n    .call(yAxisCases);\n\n    // y-axis deaths\n    var yAxisDeathsText = d3.select('#deathsAxis')\n    .transition()\n    .duration(500)\n    .call(yAxisDeaths);\n\n    // y-axis vaccines\n    var yAxisVaccinesText = d3.select('#VaccinesAxis')\n    .transition()\n    .duration(500)\n    .call(yAxisVaccines);\n\n    // CASES\n    // loop through groupedData and draw bars\n    const barGroups = svg.selectAll('.bar_group')\n    .data(groupedData)\n    .attr('data-date', function(d){ return d.date})\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+')'\n    })\n\n    // CASES\n    barGroups.selectAll('.cases_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .transition()\n    .duration(500)\n    .attr('y', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_cases;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleCases(d.cumulative_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleCases(d.new_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_cases/totalNewCases))-((140*(dp/totalNewCases))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('height', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleCases(d.cumulative_cases);\n        if(options.timeline_type==='non-cumulative') y = yScaleCases(d.new_cases);\n        if(options.timeline_type==='stacked') y = (140*(d.new_cases/totalNewCases));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n        return 'blue'\n    })\n\n    // // DEATHS\n    barGroups.selectAll('.deaths_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .transition()\n    .duration(500)\n    .attr('y', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_deaths;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleDeaths(d.cumulative_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleDeaths(d.new_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_deaths/totalNewDeaths))-((140*(dp/totalNewDeaths)))+170)\n        // if(options.timeline_type==='non-cumulative') if(y>310) return 0;\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('height', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleDeaths(d.cumulative_deaths);\n        if(options.timeline_type==='non-cumulative') y = yScaleDeaths(d.new_deaths);\n        if(options.timeline_type==='stacked') y = (140*(d.new_deaths/totalNewDeaths));\n        if(options.timeline_type==='non-cumulative') if(y<0) return 0;\n\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n\n    if(groupedData.length==0){\n        d3.selectAll('.cases_bar')\n        .transition()\n        .duration(500)\n        .attr('y', 140)\n        .attr('height', 0)\n\n        d3.selectAll('.deaths_bar')\n        .transition()\n        .duration(500)\n        .attr('y', 140+170)\n        .attr('height', 0)\n        \n    }\n    // // VACCINES\n\n    const vbarGroups = svg.selectAll('.vbar_group')\n    .data(vgroupedData)\n    .attr('data-date', function(d){ return d.date})\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+', 344)'\n    })\n\n    vbarGroups.selectAll('.vaccines_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .transition()\n    .duration(500)\n    .attr('y', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_vaccines;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleVaccines(d.cumulative_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleVaccines(d.new_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_vaccines/totalNewVaccines))-((140*(dp/totalNewVaccines))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('height', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleVaccines(d.cumulative_vaccines);\n        if(options.timeline_type==='non-cumulative') y = yScaleVaccines(d.new_vaccines);\n        if(options.timeline_type==='stacked') y = (140*(d.new_vaccines/totalNewVaccines));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    });\n\n    if(vgroupedData.length==0){\n        d3.selectAll('.vaccines_bar')\n        .transition()\n        .duration(500)\n        .attr('y', 140)\n        .attr('height', 0)\n    }\n   \n    // // bar size tweak for spacing\n    // if(options.timeline_frequency==='month'){\n    //     barGroups.selectAll(\".timeBar\")\n    //     .attr(\"width\", function(d) {\n    //         var date = d3.select(this.parentNode).datum().date;\n    //         var next = d3.timeMonth.offset(date, 1);\n    //         return (xScale(next)- xScale(date))*(1-barSpacing);\n    //       })\n    //     .attr(\"x\", function(d) {\n    //         var date = d3.select(this.parentNode).datum().date;\n    //         var next = d3.timeMonth.offset(date, 1);\n    //         return (xScale(next)- xScale(date))*(barSpacing/2);\n    //       })\n    //     }\n    data.vgroupedData = vgroupedData;\n    data.groupedData = groupedData;\n\n}\n\nexport default drawTimechart;\n"]},"metadata":{},"sourceType":"module"}