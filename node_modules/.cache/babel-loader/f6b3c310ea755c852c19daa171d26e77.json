{"ast":null,"code":"import * as d3 from \"d3\";\nexport function ParseData(data, options) {\n  console.log('ParseData');\n  console.log(data);\n  data.who_data.forEach(function (d, i) {\n    d.date = new Date(d.Date_reported);\n    d.new_cases = parseInt(d.New_cases);\n    d.cumulative_cases = parseInt(d.Cumulative_cases);\n    data.equity_data.forEach(function (dd, ii) {\n      if (dd.country_iso2 === d.Country_code) {\n        d.ifrc_region = dd.ifrc_region;\n        d.country_name = dd.country_name;\n      }\n    });\n  });\n  console.log(data.who_data[1000]);\n}\n_c = ParseData;\nexport default ParseData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParseData\");","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/ParseData.js"],"names":["d3","ParseData","data","options","console","log","who_data","forEach","d","i","date","Date","Date_reported","new_cases","parseInt","New_cases","cumulative_cases","Cumulative_cases","equity_data","dd","ii","country_iso2","Country_code","ifrc_region","country_name"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAA,EAAAA,IAAI,CAACI,QAAL,CAAcC,OAAd,CAAsB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAC/BD,IAAAA,CAAC,CAACE,IAAF,GAAS,IAAIC,IAAJ,CAASH,CAAC,CAACI,aAAX,CAAT;AACAJ,IAAAA,CAAC,CAACK,SAAF,GAAcC,QAAQ,CAACN,CAAC,CAACO,SAAH,CAAtB;AACAP,IAAAA,CAAC,CAACQ,gBAAF,GAAqBF,QAAQ,CAACN,CAAC,CAACS,gBAAH,CAA7B;AACAf,IAAAA,IAAI,CAACgB,WAAL,CAAiBX,OAAjB,CAAyB,UAASY,EAAT,EAAYC,EAAZ,EAAe;AACpC,UAAGD,EAAE,CAACE,YAAH,KAAkBb,CAAC,CAACc,YAAvB,EAAoC;AAChCd,QAAAA,CAAC,CAACe,WAAF,GAAgBJ,EAAE,CAACI,WAAnB;AACAf,QAAAA,CAAC,CAACgB,YAAF,GAAiBL,EAAE,CAACK,YAApB;AACH;AACJ,KALD;AAMH,GAVD;AAYApB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAL,CAAc,IAAd,CAAZ;AACH;KAjBeL,S;AAmBhB,eAAeA,SAAf","sourcesContent":["import * as d3 from \"d3\";\n\nexport function ParseData(data, options) {\n\n    console.log('ParseData');\n    console.log(data);\n    data.who_data.forEach(function(d,i){\n        d.date = new Date(d.Date_reported);\n        d.new_cases = parseInt(d.New_cases);\n        d.cumulative_cases = parseInt(d.Cumulative_cases);\n        data.equity_data.forEach(function(dd,ii){\n            if(dd.country_iso2===d.Country_code){\n                d.ifrc_region = dd.ifrc_region;\n                d.country_name = dd.country_name;\n            }\n        })\n    })\n\n    console.log(data.who_data[1000]);\n}\n\nexport default ParseData;\n"]},"metadata":{},"sourceType":"module"}