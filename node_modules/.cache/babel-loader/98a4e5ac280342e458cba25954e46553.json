{"ast":null,"code":"import*as d3 from\"d3\";import moment from'moment';import colors from'./colors';import{filter}from'./App';import mapboxgl from'!mapbox-gl';// eslint-disable-line import/no-webpack-loader-syntax\nimport'mapbox-gl/dist/mapbox-gl.css';import{addCommas}from'./HelperFunctions';mapboxgl.accessToken='pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';var mapboxStyle='mapbox://styles/go-ifrc/ckqrsg27f1cwu17pex8w2de2e';var map;var dots;var maxSize=15;var mapTooltip;export function createMap(data,options,filter){d3.select('#map-refresh').attr('display','none').style('cursor','pointer').on('click',function(d,i){map.setCenter([8,22]);map.setZoom(0);d3.select('#map-refresh').attr('display','none');});map=new mapboxgl.Map({container:'map_div',// container ID\nstyle:mapboxStyle,// style URL\ncenter:[8,22],// starting position [lng, lat]\npreserveDrawingBuffer:true,zoom:0// starting zoom\n});map.setRenderWorldCopies(false);map.addControl(new mapboxgl.NavigationControl());// disable map zoom when using scroll\nmap.scrollZoom.disable();map.on('zoom',function(){d3.select('#map_tooltip').attr('display','none');d3.select('#map-refresh').attr('display','inline');});map.on('touchmove',function(){d3.select('#map_tooltip').attr('display','none');d3.select('#map-refresh').attr('display','inline');});map.on('wheel',function(){d3.select('#map_tooltip').attr('display','none');d3.select('#map-refresh').attr('display','inline');});map.on('drag',function(){d3.select('#map_tooltip').attr('display','none');d3.select('#map-refresh').attr('display','inline');});var container=map.getCanvasContainer();var svg=d3.select(container).append(\"svg\").attr('id','mapoverlay').attr(\"width\",\"100%\").attr(\"height\",\"24vw\").style(\"position\",\"absolute\").style(\"z-index\",2);mapTooltip=d3.select('#map_tooltip').attr('opacity',1).attr('transform','translate(0,0)').attr('display','inline');// dots = svg\n// .selectAll(\".country-map\")\n// .data(data.world)\n// .enter()\n// .append(\"circle\")\n// .attr('class', 'country-map')\n// .attr('id', function(d,i){ return 'country-map-'+d.iso2 })\n// .attr(\"r\", 0)\n// var maxValue = d3.max(data.country, function(d,i){\n//     return d[1].cumulative_cases;\n// })\n// var rScale = d3.scalePow().exponent(0.5)\n//   .domain([0, maxValue])\n//   .range([0, 15]);\n// data.country.forEach(function(d,i){\n//     d3.select('#country-'+d[0]).attr('r', rScale(d[1].cumulative_cases))\n//     .attr('data-name', d[1].country)\n// })\nd3.select(\"#map_div\").append('svg').attr('width','18vw').attr('height','1.5vw').attr('id','maplegend').attr('viewBox','-3 0 227 18').style('background-color','rgba(255,255,255,0.8)');document.getElementById(\"maplegend\").appendChild(d3.select('#red_legend').node());document.getElementById(\"maplegend\").appendChild(d3.select('#blue_legend').node());document.getElementById(\"maplegend\").appendChild(d3.select('#bi_legend').node());d3.select('#red_legend').attr('transform','translate(20,0)');d3.select('#blue_legend').attr('transform','translate(20,0)');d3.select('#bi_legend').attr('transform','translate(0,0)');d3.select('#bi_legend').attr('display','none');d3.select('#blue_legend').attr('display','none');document.getElementById(\"mapoverlay\").appendChild(d3.select('#map_tooltip').node());mapTooltip.attr('display','none');map.on('load',function(e){map.setPaintProperty('countries','fill-opacity-transition',{duration:0,delay:0});updateMap(data,options);});}export function updateMap(data,options){var duration=800;var delay=10;map.setLayoutProperty('countries','visibility','none');if(options.map_toggle=='bi-weekly-change'){var maxIncrease=d3.max(data.country,function(d,i){return d.percent_change;});var maxDecrease=d3.min(data.country,function(d,i){return d.percent_change;});d3.select('#bi_legend').attr('display','inline');d3.select('#blue_legend').attr('display','none');d3.select('#red_legend').attr('display','none');maxIncrease=Math.ceil(maxIncrease/0.1)*0.1;maxDecrease=Math.floor(maxDecrease/0.1)*0.1;if(maxIncrease>1)maxIncrease=1;if(maxDecrease<-1)maxDecrease=-1;d3.select('#bi_legend_dec_val').attr('text-anchor','end');if(maxIncrease<1){d3.select('#bi_legend_inc_val tspan').text(Math.round(maxIncrease*100)+'%');}else{d3.select('#bi_legend_inc_val tspan').text(Math.round(maxIncrease*100)+'% +');}if(maxDecrease>-1){d3.select('#bi_legend_dec_val tspan').text(Math.round(Math.abs(maxDecrease)*100)+'%').attr('dx',14);}else{d3.select('#bi_legend_dec_val tspan').text(Math.round(Math.abs(maxDecrease)*100)+'% +').attr('dx',14);}// var rScale = d3.scalePow().exponent(0.5)\n// .domain([-1, 0, 1])\n// .range([maxSize, 0, maxSize])\n// .clamp(true);\n// d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n// data.country.forEach(function(d,i){\n//     d3.select('#country-map-'+d[0])\n//     .transition('c').duration(duration).delay(delay)\n//     .attr('r', rScale(d[1].percent_change))\n//     .style('stroke', function(){\n//         // if(d[1].percent_change>1){ return '#E02225'} else { return '#1F558C'}\n//         return '#FFF'\n//     }).style('fill', function(){\n//         if(d[1].percent_change>0){ return colors.red } else { return colors.blue}\n//     })\n// })\nvar colorScale=d3.scaleLinear()// .domain([-1, 0, 1])\n.domain([maxDecrease,0,maxIncrease]).range([colors.blue,colors.lightgrey,colors.red]);// .clamp(true);\nvar fillColorArray=['case'];data.country.forEach(function(d,i){if(isFinite(d.percent_change)){fillColorArray.push(['==',['get',\"iso\"],d.country_code]);fillColorArray.push(colorScale(d.percent_change));}});if(fillColorArray.length>1){fillColorArray.push(colors.darkgrey);map.setPaintProperty('countries','fill-color',fillColorArray);}}if(options.map_toggle=='cases'){var maxValue=d3.max(data.country,function(d,i){return d.cumulative_cases_per_100k;});d3.select('#bi_legend').attr('display','none');d3.select('#blue_legend').attr('display','none');d3.select('#red_legend').attr('display','inline');d3.select('#red_legend_title tspan').text('Cases per 100k');if(maxValue>1000){maxValue=Math.ceil(maxValue/100)*100;}else{maxValue=Math.ceil(maxValue/10)*10;}d3.select('#red_legend_val tspan').text(addCommas(maxValue));// var rScale = d3.scalePow().exponent(0.5)\n// .domain([0, maxValue])\n// .range([0, maxSize]);\n// d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n// data.country.forEach(function(d,i){\n//     d3.select('#country-map-'+d[0])\n//     .transition('c').duration(duration).delay(delay)\n//     .attr('r', rScale(d[1].cumulative_cases))\n//     .style('fill', colors.red)\n//     .style('stroke', '#FFF');\n// })\nvar colorScale=d3.scaleLinear().domain([0,maxValue]).range([colors.lightgrey,colors.red]);var fillColorArray=['case'];data.country.forEach(function(d,i){fillColorArray.push(['==',['get',\"iso\"],d.country_code]);fillColorArray.push(colorScale(d.cumulative_cases_per_100k));});if(fillColorArray.length>1){fillColorArray.push(colors.darkgrey);map.setPaintProperty('countries','fill-color',fillColorArray);}}if(options.map_toggle=='deaths'){var maxValue=d3.max(data.country,function(d,i){return d.cumulative_deaths_per_100k;});d3.select('#bi_legend').attr('display','none');d3.select('#blue_legend').attr('display','none');d3.select('#red_legend').attr('display','inline');d3.select('#red_legend_title tspan').text('Deaths per 100k');if(maxValue>1000){maxValue=Math.ceil(maxValue/100)*100;}else{maxValue=Math.ceil(maxValue/10)*10;}d3.select('#red_legend_val tspan').text(addCommas(maxValue));// var rScale = d3.scalePow().exponent(0.5)\n// .domain([0, maxValue])\n// .range([0, maxSize]);\n// d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n// data.country.forEach(function(d,i){\n//     d3.select('#country-map-'+d[0])\n//     .transition('c').duration(duration).delay(delay)\n//     .attr('r', rScale(d[1].cumulative_deaths))\n//     .style('fill', colors.red)\n//     .style('stroke', '#FFF');\n// })\nvar colorScale=d3.scaleLinear().domain([0,maxValue]).range([colors.lightgrey,colors.red]);var fillColorArray=['case'];data.country.forEach(function(d,i){fillColorArray.push(['==',['get',\"iso\"],d.country_code]);fillColorArray.push(colorScale(d.cumulative_deaths_per_100k));});if(fillColorArray.length>1){fillColorArray.push(colors.darkgrey);map.setPaintProperty('countries','fill-color',fillColorArray);}}if(options.map_toggle=='percent-fully-vaccinated'){d3.select('#bi_legend').attr('display','none');d3.select('#blue_legend').attr('display','inline');d3.select('#red_legend').attr('display','none');d3.select('#blue_legend_title tspan').text('Percent fully vaccinated');d3.select('#blue_legend_val tspan').text('100%');// var rScale = d3.scalePow().exponent(0.55)\n// .domain([0, 1])\n// .range([1, maxSize])\n// .clamp(true);\n// d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n// data.vGroup.forEach(function(d,i){\n//     var peoplevaccinated = parseFloat(d[1][0].people_fully_vaccinated_per_hundred)/100;\n//     if(isNaN(peoplevaccinated)) peoplevaccinated = 0;\n//     d3.select('#country-map-'+d[1][0].country_code)\n//     .transition('c').duration(duration).delay(delay)\n//     .attr('r', rScale(peoplevaccinated))\n//     .style('stroke', '#FFF')\n//     .style('fill', function(){\n//         return colors.blue;\n//     })\n// })\nvar colorScale=d3.scaleLinear().domain([0,1]).range([colors.lightgrey,colors.blue]).clamp(true);var fillColorArray=['case'];data.country.forEach(function(d,i){var peoplevaccinated=parseFloat(d.people_fully_vaccinated_per_hundred)/100;if(isNaN(peoplevaccinated))peoplevaccinated=0;if(peoplevaccinated>0){if(d.country_code)fillColorArray.push(['==',['get',\"iso\"],d.country_code]);if(d.country_code)fillColorArray.push(colorScale(peoplevaccinated));}});if(fillColorArray.length>1){fillColorArray.push(colors.darkgrey);map.setPaintProperty('countries','fill-color',fillColorArray);}else{map.setPaintProperty('countries','fill-color',colors.darkgrey);}}if(options.map_toggle=='percent-vaccine-acceptance'){d3.select('#bi_legend').attr('display','none');d3.select('#blue_legend').attr('display','inline');d3.select('#red_legend').attr('display','none');d3.select('#blue_legend_title tspan').text('% vaccine acceptance');d3.select('#blue_legend_val tspan').text('100%');// var rScale = d3.scalePow().exponent(1)\n// .domain([0, 1])\n// .range([1, maxSize*.7])\n// // .clamp(true);\n// d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n// data.vGroup.forEach(function(d,i){\n//     var vaccine_acceptance_percent = parseFloat(d[1][0].vaccine_acceptance_percent/100);\n//     if(isNaN(vaccine_acceptance_percent)) vaccine_acceptance_percent = 0;\n//     d3.select('#country-map-'+d[1][0].country_code)\n//     .transition('c').duration(duration).delay(delay)\n//     .attr('r', rScale(vaccine_acceptance_percent))\n//     .style('stroke', '#FFF')\n//     .style('fill', function(){\n//         return colors.blue;\n//     })\n// })\nvar colorScale=d3.scaleLinear().domain([0,1]).range([colors.lightgrey,colors.blue]).clamp(true);var fillColorArray=['case'];data.country.forEach(function(d,i){var vaccine_acceptance_percent=parseFloat(d.vaccine_acceptance_percent)/100;if(isNaN(vaccine_acceptance_percent))vaccine_acceptance_percent=0;if(vaccine_acceptance_percent>0){if(d.country_code)fillColorArray.push(['==',['get',\"iso\"],d.country_code]);if(d.country_code)fillColorArray.push(colorScale(vaccine_acceptance_percent));}});if(fillColorArray.length>1){fillColorArray.push(colors.darkgrey);map.setPaintProperty('countries','fill-color',fillColorArray);}else{map.setPaintProperty('countries','fill-color',colors.darkgrey);}}mapTooltip.attr('display','none');map.on('mousemove',function(e){var features=map.queryRenderedFeatures(e.point);var displayProperties=['type','properties','id','layer','source','sourceLayer','state'];if(features.length==1&&features[0].layer.id=='countries'){var id=features[0].properties.iso;var countryfiltered=data.equity_data.filter(function(d){return d.country_iso2==id;});var countryName;if(countryfiltered[0])countryName=countryfiltered[0].country_name;mapTooltip.select('#map_tooltip_name tspan').text(countryName);if(mapTooltip.select('#map_tooltip_name tspan').text().length==0){mapTooltip.attr('display','none');};if(options.map_toggle=='cases'){var country=data.country.filter(function(d){return d.country_code==id;})[0];if(!country||country.length==0)return false;mapTooltip.select('#map_tooltip_val tspan').text(addCommas(Math.round(country.cumulative_cases_per_100k))+' cases per 100k');}if(options.map_toggle=='deaths'){var country=data.country.filter(function(d){return d.country_code==id;})[0];if(!country||country.length==0)return false;mapTooltip.select('#map_tooltip_val tspan').text(addCommas(Math.round(country.cumulative_deaths_per_100k))+' deaths per 100k');}if(options.map_toggle=='bi-weekly-change'){var country=data.country.filter(function(d){return d.country_code==id;});if(!country||country.length==0)return false;var val=(country[0].percent_change*100).toFixed(1);var str='';if(val>=0){str='% increase';}else{str='% decrease';}mapTooltip.select('#map_tooltip_val tspan').text(Math.abs(val)+str);}if(options.map_toggle=='percent-fully-vaccinated'){var country=data.country.filter(function(d){return d.country_code==id;});if(!country||country.length==0)return false;var val=parseFloat(country[0].people_fully_vaccinated_per_hundred).toFixed(1);if(isNaN(val)){val='-';}else{val=val+'% fully vaccinated';}mapTooltip.select('#map_tooltip_val tspan').text(val);}if(options.map_toggle=='percent-vaccine-acceptance'){var country=data.country.filter(function(d){return d.country_code==id;});if(!country||country.length==0)return false;var val=parseFloat(country[0].vaccine_acceptance_percent).toFixed(1);if(isNaN(val)){val='-';}else{val=val+'% vaccine acceptance';}mapTooltip.select('#map_tooltip_val tspan').text(val);}var str=mapTooltip.select('#map_tooltip_val tspan').text();if(str.includes('NaN'))mapTooltip.attr('display','none');d3.select('#map_tooltip_bg').attr('width',20);var scale=window.innerWidth/1329;mapTooltip.attr('display','inline').attr('transform','translate('+(e.point.x+20)+','+e.point.y+')scale('+scale+')');var heightOffset=mapTooltip.node().getBBox();var bbox=d3.select('#map_tooltip').node().getBBox();d3.select('#map_tooltip_bg').attr('width',parseFloat(bbox.width)+2);if(mapTooltip.select('#map_tooltip_name tspan').text().length==0){mapTooltip.attr('display','none');};// mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\n}else{mapTooltip.attr('display','none');}}).on('mouseout',function(event){if(event.toElement=='tspan')return false;mapTooltip.attr('display','none');});// function render() {\n//     dots\n//       .attr(\"cx\", function(d) {\n//         return project(([d.lng, d.lat])).x;\n//       })\n//       .attr(\"cy\", function(d) {\n//         return project(([d.lng, d.lat])).y;\n//       });\n//   }\n// map.on(\"viewreset\", render);\n// map.on(\"move\", render);\n// map.on(\"moveend\", render);\n// render(); // Call once to render\n// tooltips\n// var mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'none');\n// d3.selectAll('.country-map').on('mousemove', function(event, d){\n//     var id = d3.select(this).attr('id').substr(12,2);\n//     var countryfiltered = data.equity_data.filter(d=>d.country_iso2 == id);\n//     var countryName;\n//     if(countryfiltered[0]) countryName = countryfiltered[0].country_name;\n//     mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n//     if(options.map_toggle=='cases'){\n//         var country = data.country.filter(d=>d.country_code == id)[0];\n//         if((!country)||(country.length==0)) return false;\n//         mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_cases)+' cases');\n//     }\n//     if(options.map_toggle=='deaths'){\n//         var country = data.country.filter(d=>d.country_code == id)[0];\n//         if((!country)||(country.length==0)) return false;\n//         mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_deaths)+' deaths');\n//     }\n//     if(options.map_toggle=='bi-weekly-change'){\n//         var country = data.country.filter(d=>d.country_code == id)[0];\n//         if((!country)||(country.length==0)) return false;\n//         var val = ((country[1].percent_change)*100).toFixed(1);\n//         var str = '';\n//         if(val>=0){\n//             str = '% increase';\n//         } else {\n//             str = '% decrease';\n//         }\n//         mapTooltip.select('#map_tooltip_val tspan').text(Math.abs(val)+str);\n//     }\n//     if(options.map_toggle=='percent-fully-vaccinated'){\n//         var country = data.vGroup.filter(d=>d[1][0].country_code == id)[0][1];\n//         if((!country)||(country.length==0)) return false;\n//         mapTooltip.select('#map_tooltip_val tspan').text(parseFloat(country[0].people_fully_vaccinated_per_hundred).toFixed(1)+'% fully vaccinated');\n//     }\n//     if(options.map_toggle=='percent-vaccine-acceptance'){\n//         var country = data.vGroup.filter(d=>d[1][0].country_code == id)[0][1];\n//         if((!country)||(country.length==0)) return false;\n//         mapTooltip.select('#map_tooltip_val tspan').text(parseFloat(country[0].vaccine_acceptance_percent).toFixed(1)+'% vaccine acceptance');\n//     }\n//     d3.select('#map_tooltip_bg').attr('width', 0)\n//     var bbox = mapTooltip.node().getBBox();\n//     d3.select('#map_tooltip_bg').attr('width', (parseFloat(bbox.width)+2))\n//     var scale = window.innerWidth/1329;\n//     mapTooltip\n//     .attr('display', 'inline')\n//     .attr('transform', 'translate('+project(([d.lng, d.lat])).x+','+project(([d.lng, d.lat])).y+')scale('+scale+')');\n//     var heightOffset = mapTooltip.node().getBBox();\n//     mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\nmap.setLayoutProperty('countries','visibility','visible');}// function project(d) {\n//     return map.project(new mapboxgl.LngLat(d[0], d[1]));\n// }\nexport default createMap;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Map.js"],"names":["d3","moment","colors","filter","mapboxgl","addCommas","accessToken","mapboxStyle","map","dots","maxSize","mapTooltip","createMap","data","options","select","attr","style","on","d","i","setCenter","setZoom","Map","container","center","preserveDrawingBuffer","zoom","setRenderWorldCopies","addControl","NavigationControl","scrollZoom","disable","getCanvasContainer","svg","append","document","getElementById","appendChild","node","e","setPaintProperty","duration","delay","updateMap","setLayoutProperty","map_toggle","maxIncrease","max","country","percent_change","maxDecrease","min","Math","ceil","floor","text","round","abs","colorScale","scaleLinear","domain","range","blue","lightgrey","red","fillColorArray","forEach","isFinite","push","country_code","length","darkgrey","maxValue","cumulative_cases_per_100k","cumulative_deaths_per_100k","clamp","peoplevaccinated","parseFloat","people_fully_vaccinated_per_hundred","isNaN","vaccine_acceptance_percent","features","queryRenderedFeatures","point","displayProperties","layer","id","properties","iso","countryfiltered","equity_data","country_iso2","countryName","country_name","val","toFixed","str","includes","scale","window","innerWidth","x","y","heightOffset","getBBox","bbox","width","event","toElement"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {filter} from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {addCommas} from './HelperFunctions';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\nvar mapboxStyle = 'mapbox://styles/go-ifrc/ckqrsg27f1cwu17pex8w2de2e';\n\nlet map;\nlet dots; \nlet maxSize = 15; \nlet mapTooltip;\n\nexport function createMap(data, options, filter) {\n\n    d3.select('#map-refresh').attr('display', 'none').style('cursor', 'pointer')\n    .on('click', function(d,i){\n        map.setCenter([8, 22]);\n        map.setZoom(0);\n        d3.select('#map-refresh').attr('display', 'none');\n    })\n    \n    map = new mapboxgl.Map({\n        container: 'map_div', // container ID\n        style: mapboxStyle, // style URL\n        center: [8, 22], // starting position [lng, lat]\n        preserveDrawingBuffer: true,\n        zoom: 0 // starting zoom\n    });\n\n    map.setRenderWorldCopies(false);\n    map.addControl(new mapboxgl.NavigationControl());\n    \n    // disable map zoom when using scroll\n    map.scrollZoom.disable();\n\n    map.on('zoom', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    map.on('touchmove', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    map.on('wheel', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    map.on('drag', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    var container = map.getCanvasContainer();\n\n    var svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr('id', 'mapoverlay')\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"24vw\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", 2);\n\n    mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'inline');\n\n    // dots = svg\n    // .selectAll(\".country-map\")\n    // .data(data.world)\n    // .enter()\n    // .append(\"circle\")\n    // .attr('class', 'country-map')\n    // .attr('id', function(d,i){ return 'country-map-'+d.iso2 })\n    // .attr(\"r\", 0)\n    \n\n    // var maxValue = d3.max(data.country, function(d,i){\n    //     return d[1].cumulative_cases;\n    // })\n\n    // var rScale = d3.scalePow().exponent(0.5)\n    //   .domain([0, maxValue])\n    //   .range([0, 15]);\n\n    // data.country.forEach(function(d,i){\n    //     d3.select('#country-'+d[0]).attr('r', rScale(d[1].cumulative_cases))\n    //     .attr('data-name', d[1].country)\n    // })\n    \n    d3.select(\"#map_div\").append('svg')\n    .attr('width', '18vw')\n    .attr('height', '1.5vw')\n    .attr('id', 'maplegend')\n    .attr('viewBox', '-3 0 227 18')\n    .style('background-color', 'rgba(255,255,255,0.8)')\n\n    document.getElementById(\"maplegend\").appendChild(d3.select('#red_legend').node());\n    document.getElementById(\"maplegend\").appendChild(d3.select('#blue_legend').node());\n    document.getElementById(\"maplegend\").appendChild(d3.select('#bi_legend').node());\n\n    d3.select('#red_legend').attr('transform', 'translate(20,0)');\n    d3.select('#blue_legend').attr('transform', 'translate(20,0)');\n    d3.select('#bi_legend').attr('transform', 'translate(0,0)');\n\n    d3.select('#bi_legend').attr('display', 'none');\n    d3.select('#blue_legend').attr('display', 'none');\n\n    document.getElementById(\"mapoverlay\").appendChild(d3.select('#map_tooltip').node());\n    mapTooltip.attr('display', 'none')  \n\n    map.on('load', function (e) {\n\n        map.setPaintProperty('countries', 'fill-opacity-transition', {duration: 0, delay: 0});\n\n        updateMap(data, options) ;\n\n    });\n\n}\n\nexport function updateMap(data, options) {\n   \n    var duration = 800;\n    var delay = 10;\n\n    map.setLayoutProperty(\n        'countries',\n        'visibility',\n        'none'\n    );\n\n    if(options.map_toggle == 'bi-weekly-change'){\n        \n        var maxIncrease = d3.max(data.country, function(d,i){\n            return d.percent_change;\n        })\n\n        var maxDecrease = d3.min(data.country, function(d,i){\n            return d.percent_change;\n        })\n\n        d3.select('#bi_legend').attr('display', 'inline');\n        d3.select('#blue_legend').attr('display', 'none');\n        d3.select('#red_legend').attr('display', 'none');\n\n        maxIncrease = (Math.ceil(maxIncrease/0.1))*0.1;\n        maxDecrease = (Math.floor(maxDecrease/0.1))*0.1;\n\n        if(maxIncrease>1) maxIncrease = 1;\n        if(maxDecrease<-1) maxDecrease = -1;\n\n        d3.select('#bi_legend_dec_val').attr('text-anchor', 'end');\n        if(maxIncrease<1){\n            d3.select('#bi_legend_inc_val tspan').text(Math.round(maxIncrease*100)+'%');\n        } else {\n            d3.select('#bi_legend_inc_val tspan').text(Math.round(maxIncrease*100)+'% +');\n        }\n        if(maxDecrease>-1){\n            d3.select('#bi_legend_dec_val tspan').text(Math.round(Math.abs(maxDecrease)*100)+'%').attr('dx', 14);\n        } else {\n            d3.select('#bi_legend_dec_val tspan').text(Math.round(Math.abs(maxDecrease)*100)+'% +').attr('dx', 14);\n        }\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([-1, 0, 1])\n        // .range([maxSize, 0, maxSize])\n        // .clamp(true);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].percent_change))\n        //     .style('stroke', function(){\n        //         // if(d[1].percent_change>1){ return '#E02225'} else { return '#1F558C'}\n        //         return '#FFF'\n        //     }).style('fill', function(){\n        //         if(d[1].percent_change>0){ return colors.red } else { return colors.blue}\n        //     })\n        // })\n\n        var colorScale = d3.scaleLinear()\n        // .domain([-1, 0, 1])\n        .domain([maxDecrease, 0, maxIncrease])\n        .range([colors.blue, colors.lightgrey, colors.red])\n        // .clamp(true);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            if(isFinite(d.percent_change)){\n                fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n                fillColorArray.push(colorScale(d.percent_change));\n            }\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        }\n        \n    }\n\n    if(options.map_toggle == 'cases'){\n\n        var maxValue = d3.max(data.country, function(d,i){\n            return d.cumulative_cases_per_100k;\n        });\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'none');\n        d3.select('#red_legend').attr('display', 'inline');\n\n        d3.select('#red_legend_title tspan').text('Cases per 100k');\n\n        if(maxValue>1000){\n            maxValue = (Math.ceil(maxValue/100))*100;\n        } else {\n            maxValue = (Math.ceil(maxValue/10))*10;\n        }\n\n        d3.select('#red_legend_val tspan').text(addCommas(maxValue));\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([0, maxValue])\n        // .range([0, maxSize]);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].cumulative_cases))\n        //     .style('fill', colors.red)\n        //     .style('stroke', '#FFF');\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, maxValue])\n        .range([colors.lightgrey, colors.red]);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n            fillColorArray.push(colorScale(d.cumulative_cases_per_100k));\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        }\n\n    }\n    \n    if(options.map_toggle == 'deaths'){\n\n        var maxValue = d3.max(data.country, function(d,i){\n            return d.cumulative_deaths_per_100k;\n        })\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'none');\n        d3.select('#red_legend').attr('display', 'inline');\n\n        d3.select('#red_legend_title tspan').text('Deaths per 100k');\n\n        if(maxValue>1000){\n            maxValue = (Math.ceil(maxValue/100))*100;\n        } else {\n            maxValue = (Math.ceil(maxValue/10))*10;\n        }\n\n        d3.select('#red_legend_val tspan').text(addCommas(maxValue));\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([0, maxValue])\n        // .range([0, maxSize]);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].cumulative_deaths))\n        //     .style('fill', colors.red)\n        //     .style('stroke', '#FFF');\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, maxValue])\n        .range([colors.lightgrey, colors.red]);\n\n        var fillColorArray = ['case']\n\n        data.country.forEach(function(d,i){\n            fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n            fillColorArray.push(colorScale(d.cumulative_deaths_per_100k));\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        }\n    }\n\n    if(options.map_toggle == 'percent-fully-vaccinated'){\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'inline');\n        d3.select('#red_legend').attr('display', 'none');\n        d3.select('#blue_legend_title tspan').text('Percent fully vaccinated');\n        d3.select('#blue_legend_val tspan').text('100%');\n\n        // var rScale = d3.scalePow().exponent(0.55)\n        // .domain([0, 1])\n        // .range([1, maxSize])\n        // .clamp(true);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.vGroup.forEach(function(d,i){\n        //     var peoplevaccinated = parseFloat(d[1][0].people_fully_vaccinated_per_hundred)/100;\n        //     if(isNaN(peoplevaccinated)) peoplevaccinated = 0;\n        //     d3.select('#country-map-'+d[1][0].country_code)\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(peoplevaccinated))\n        //     .style('stroke', '#FFF')\n        //     .style('fill', function(){\n        //         return colors.blue;\n        //     })\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, 1])\n        .range([colors.lightgrey, colors.blue])\n        .clamp(true);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            var peoplevaccinated = parseFloat(d.people_fully_vaccinated_per_hundred)/100;\n            if(isNaN(peoplevaccinated)) peoplevaccinated = 0;\n            if(peoplevaccinated>0){\n                if(d.country_code) fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n                if(d.country_code) fillColorArray.push(colorScale(peoplevaccinated));\n            }\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        } else {\n            map.setPaintProperty(\n                'countries', \n                'fill-color',\n                colors.darkgrey\n            );\n        }\n        \n    }\n\n    if(options.map_toggle == 'percent-vaccine-acceptance'){\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'inline');\n        d3.select('#red_legend').attr('display', 'none');\n        d3.select('#blue_legend_title tspan').text('% vaccine acceptance');\n        d3.select('#blue_legend_val tspan').text('100%');\n        \n        // var rScale = d3.scalePow().exponent(1)\n        // .domain([0, 1])\n        // .range([1, maxSize*.7])\n        // // .clamp(true);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.vGroup.forEach(function(d,i){\n        //     var vaccine_acceptance_percent = parseFloat(d[1][0].vaccine_acceptance_percent/100);\n            \n        //     if(isNaN(vaccine_acceptance_percent)) vaccine_acceptance_percent = 0;\n\n        //     d3.select('#country-map-'+d[1][0].country_code)\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(vaccine_acceptance_percent))\n        //     .style('stroke', '#FFF')\n        //     .style('fill', function(){\n        //         return colors.blue;\n        //     })\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, 1])\n        .range([colors.lightgrey, colors.blue])\n        .clamp(true);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            var vaccine_acceptance_percent = parseFloat(d.vaccine_acceptance_percent)/100;\n            if(isNaN(vaccine_acceptance_percent)) vaccine_acceptance_percent = 0;\n            if(vaccine_acceptance_percent>0){\n                if(d.country_code) fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n                if(d.country_code) fillColorArray.push(colorScale(vaccine_acceptance_percent));\n            }\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        } else {\n            map.setPaintProperty(\n                'countries', \n                'fill-color',\n                colors.darkgrey\n            );\n        }\n\n    }\n\n    mapTooltip.attr('display', 'none')  \n\n    map.on('mousemove', function (e) {\n        var features = map.queryRenderedFeatures(e.point);\n         \n        var displayProperties = [\n        'type',\n        'properties',\n        'id',\n        'layer',\n        'source',\n        'sourceLayer',\n        'state'\n        ];\n         \n        if((features.length==1)&&(features[0].layer.id=='countries')){\n\n            var id = features[0].properties.iso;\n            var countryfiltered = data.equity_data.filter(d=>d.country_iso2 == id);\n            var countryName;\n            if(countryfiltered[0]) countryName = countryfiltered[0].country_name;\n    \n            mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n  \n            if(mapTooltip.select('#map_tooltip_name tspan').text().length==0){\n                mapTooltip\n                .attr('display', 'none');\n            };\n            \n            if(options.map_toggle=='cases'){\n                var country = data.country.filter(d=>d.country_code == id)[0];\n                if((!country)||(country.length==0)) return false;\n                mapTooltip.select('#map_tooltip_val tspan').text(addCommas(Math.round(country.cumulative_cases_per_100k))+' cases per 100k');\n            }\n    \n            if(options.map_toggle=='deaths'){\n                var country = data.country.filter(d=>d.country_code == id)[0];\n                if((!country)||(country.length==0)) return false;\n                mapTooltip.select('#map_tooltip_val tspan').text(addCommas(Math.round(country.cumulative_deaths_per_100k))+' deaths per 100k');\n            }\n    \n            if(options.map_toggle=='bi-weekly-change'){\n                var country = data.country.filter(d=>d.country_code == id);\n                if((!country)||(country.length==0)) return false;\n                var val = ((country[0].percent_change)*100).toFixed(1);\n                var str = '';\n                if(val>=0){\n                    str = '% increase';\n                } else {\n                    str = '% decrease';\n                }\n                mapTooltip.select('#map_tooltip_val tspan').text(Math.abs(val)+str);\n            }\n    \n            if(options.map_toggle=='percent-fully-vaccinated'){\n                var country = data.country.filter(d=>d.country_code == id);\n                if((!country)||(country.length==0)) return false;\n                var val = parseFloat(country[0].people_fully_vaccinated_per_hundred).toFixed(1)\n                if(isNaN(val)){ val = '-' } else { val = val + '% fully vaccinated'}\n                mapTooltip.select('#map_tooltip_val tspan').text(val);\n            }\n    \n            if(options.map_toggle=='percent-vaccine-acceptance'){\n                var country = data.country.filter(d=>d.country_code == id);\n                if((!country)||(country.length==0)) return false;\n                var val = parseFloat(country[0].vaccine_acceptance_percent).toFixed(1)\n                if(isNaN(val)){ val = '-' } else { val = val + '% vaccine acceptance'}\n                mapTooltip.select('#map_tooltip_val tspan').text(val);\n            }\n    \n            var str = mapTooltip.select('#map_tooltip_val tspan').text();\n            if(str.includes('NaN')) mapTooltip.attr('display', 'none')\n\n            d3.select('#map_tooltip_bg').attr('width', 20)\n\n            var scale = window.innerWidth/1329;\n            mapTooltip\n            .attr('display', 'inline')\n            .attr('transform', 'translate('+(e.point.x+20)+','+e.point.y+')scale('+scale+')');\n            var heightOffset = mapTooltip.node().getBBox();\n\n            var bbox = d3.select('#map_tooltip').node().getBBox();\n            d3.select('#map_tooltip_bg').attr('width', (parseFloat(bbox.width)+2))\n\n            if(mapTooltip.select('#map_tooltip_name tspan').text().length==0){\n                mapTooltip\n                .attr('display', 'none');\n            };\n\n            // mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\n        } else {\n            mapTooltip.attr('display', 'none')\n        }\n    }).on('mouseout', function(event){\n        if(event.toElement=='tspan') return false;\n        mapTooltip.attr('display', 'none');\n    })\n\n\n    // function render() {\n    //     dots\n    //       .attr(\"cx\", function(d) {\n    //         return project(([d.lng, d.lat])).x;\n    //       })\n    //       .attr(\"cy\", function(d) {\n    //         return project(([d.lng, d.lat])).y;\n    //       });\n    //   }\n\n    // map.on(\"viewreset\", render);\n    // map.on(\"move\", render);\n    // map.on(\"moveend\", render);\n    // render(); // Call once to render\n\n    // tooltips\n\n    // var mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'none');\n\n    // d3.selectAll('.country-map').on('mousemove', function(event, d){\n\n    //     var id = d3.select(this).attr('id').substr(12,2);\n    //     var countryfiltered = data.equity_data.filter(d=>d.country_iso2 == id);\n    //     var countryName;\n    //     if(countryfiltered[0]) countryName = countryfiltered[0].country_name;\n\n    //     mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n\n    //     if(options.map_toggle=='cases'){\n    //         var country = data.country.filter(d=>d.country_code == id)[0];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_cases)+' cases');\n    //     }\n\n    //     if(options.map_toggle=='deaths'){\n    //         var country = data.country.filter(d=>d.country_code == id)[0];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_deaths)+' deaths');\n    //     }\n\n    //     if(options.map_toggle=='bi-weekly-change'){\n    //         var country = data.country.filter(d=>d.country_code == id)[0];\n    //         if((!country)||(country.length==0)) return false;\n    //         var val = ((country[1].percent_change)*100).toFixed(1);\n    //         var str = '';\n    //         if(val>=0){\n    //             str = '% increase';\n    //         } else {\n    //             str = '% decrease';\n    //         }\n    //         mapTooltip.select('#map_tooltip_val tspan').text(Math.abs(val)+str);\n    //     }\n\n    //     if(options.map_toggle=='percent-fully-vaccinated'){\n    //         var country = data.vGroup.filter(d=>d[1][0].country_code == id)[0][1];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(parseFloat(country[0].people_fully_vaccinated_per_hundred).toFixed(1)+'% fully vaccinated');\n    //     }\n\n    //     if(options.map_toggle=='percent-vaccine-acceptance'){\n    //         var country = data.vGroup.filter(d=>d[1][0].country_code == id)[0][1];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(parseFloat(country[0].vaccine_acceptance_percent).toFixed(1)+'% vaccine acceptance');\n    //     }\n\n\n    //     d3.select('#map_tooltip_bg').attr('width', 0)\n\n    //     var bbox = mapTooltip.node().getBBox();\n    //     d3.select('#map_tooltip_bg').attr('width', (parseFloat(bbox.width)+2))\n    //     var scale = window.innerWidth/1329;\n    //     mapTooltip\n    //     .attr('display', 'inline')\n    //     .attr('transform', 'translate('+project(([d.lng, d.lat])).x+','+project(([d.lng, d.lat])).y+')scale('+scale+')');\n\n    //     var heightOffset = mapTooltip.node().getBBox();\n    //     mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\n\n   \n\n    map.setLayoutProperty(\n        'countries',\n        'visibility',\n        'visible'\n    );\n\n}\n\n// function project(d) {\n//     return map.project(new mapboxgl.LngLat(d[0], d[1]));\n// }\n\nexport default createMap;\n"]},"metadata":{},"sourceType":"module"}