{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { filter } from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\nexport function createMap(data, options, filter) {\n  console.log('createMap');\n  var map = new mapboxgl.Map({\n    container: 'map_div',\n    // container ID\n    style: 'mapbox://styles/go-ifrc/ck9tz6f150ub11ip8j97wrsww',\n    // style URL\n    center: [8, 22],\n    // starting position [lng, lat]\n    zoom: -0.01 // starting zoom\n\n  });\n  map.setRenderWorldCopies(false);\n  map.addControl(new mapboxgl.NavigationControl());\n  console.log(data);\n  var container = map.getCanvasContainer();\n  var svg = d3.select(container).append(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"24vw\").style(\"position\", \"absolute\").style(\"z-index\", 2);\n\n  function project(d) {\n    return map.project(new mapboxgl.LngLat(d[0], d[1]));\n  }\n\n  var dots = svg.selectAll(\".country\").data(data.world).enter().append(\"circle\").attr('class', 'country').attr('id', function (d, i) {\n    return 'country-' + d.iso2;\n  }).attr(\"r\", 0); // var maxRadius = d3.max(data.country, function(d,i{\n  //     return d.\n  // })\n\n  data.country.forEach(function (d, i) {\n    console.log(d);\n  });\n\n  function render() {\n    dots.attr(\"cx\", function (d) {\n      return project([d.lng, d.lat]).x;\n    }).attr(\"cy\", function (d) {\n      return project([d.lng, d.lat]).y;\n    });\n  }\n\n  map.on(\"viewreset\", render);\n  map.on(\"move\", render);\n  map.on(\"moveend\", render);\n  render(); // Call once to render\n  // map.on('load', function (e) {\n  //     map.setLayerZoomRange('countries', -1, 23);\n  //     map.setLayoutProperty(\n  //         'countries',\n  //         'visibility',\n  //         'visible'\n  //         );\n  // }).\n  // map.on('mousemove', function (e) {\n  //     var features = map.queryRenderedFeatures(e.point);\n  //     // Limit the number of properties we're displaying for\n  //     // legibility and performance\n  //     var displayProperties = [\n  //     'type',\n  //     'properties',\n  //     'id',\n  //     'layer',\n  //     'source',\n  //     'sourceLayer',\n  //     'state'\n  //     ];\n  //     var displayFeatures = features.map(function (feat) {\n  //     var displayFeat = {};\n  //     displayProperties.forEach(function (prop) {\n  //     displayFeat[prop] = feat[prop];\n  //     });\n  //     return displayFeat;\n  //     });\n  //     console.log(JSON.stringify(\n  //     displayFeatures,\n  //     null,\n  //     2\n  //     ))\n  //     })\n}\nexport default createMap;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Map.js"],"names":["d3","moment","colors","filter","mapboxgl","accessToken","createMap","data","options","console","log","map","Map","container","style","center","zoom","setRenderWorldCopies","addControl","NavigationControl","getCanvasContainer","svg","select","append","attr","project","d","LngLat","dots","selectAll","world","enter","i","iso2","country","forEach","render","lng","lat","x","y","on"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {filter} from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\n\nexport function createMap(data, options, filter) {\n    console.log('createMap');\n\n    var map = new mapboxgl.Map({\n        container: 'map_div', // container ID\n        style: 'mapbox://styles/go-ifrc/ck9tz6f150ub11ip8j97wrsww', // style URL\n        center: [8, 22], // starting position [lng, lat]\n        zoom: -0.01 // starting zoom\n    });\n\n    map.setRenderWorldCopies(false);\n    map.addControl(new mapboxgl.NavigationControl());\n    \n    console.log(data);\n\n    var container = map.getCanvasContainer();\n\n    var svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"24vw\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", 2);\n\n    function project(d) {\n        return map.project(new mapboxgl.LngLat(d[0], d[1]));\n    }\n\n    var dots = svg\n    .selectAll(\".country\")\n    .data(data.world)\n    .enter()\n    .append(\"circle\")\n    .attr('class', 'country')\n    .attr('id', function(d,i){ return 'country-'+d.iso2 })\n    .attr(\"r\", 0);\n\n    // var maxRadius = d3.max(data.country, function(d,i{\n    //     return d.\n    // })\n    data.country.forEach(function(d,i){\n        console.log(d);\n    })\n    \n    function render() {\n        dots\n          .attr(\"cx\", function(d) {\n            return project(([d.lng, d.lat])).x;\n          })\n          .attr(\"cy\", function(d) {\n            return project(([d.lng, d.lat])).y;\n          });\n      }\n\n    map.on(\"viewreset\", render);\n    map.on(\"move\", render);\n    map.on(\"moveend\", render);\n    render(); // Call once to render\n\n\n\n    \n\n\n    // map.on('load', function (e) {\n    //     map.setLayerZoomRange('countries', -1, 23);\n    //     map.setLayoutProperty(\n    //         'countries',\n    //         'visibility',\n    //         'visible'\n    //         );\n\n\n\n    // }).\n\n\n    // map.on('mousemove', function (e) {\n    //     var features = map.queryRenderedFeatures(e.point);\n         \n    //     // Limit the number of properties we're displaying for\n    //     // legibility and performance\n\n\n    //     var displayProperties = [\n    //     'type',\n    //     'properties',\n    //     'id',\n    //     'layer',\n    //     'source',\n    //     'sourceLayer',\n    //     'state'\n    //     ];\n         \n    //     var displayFeatures = features.map(function (feat) {\n    //     var displayFeat = {};\n    //     displayProperties.forEach(function (prop) {\n    //     displayFeat[prop] = feat[prop];\n    //     });\n    //     return displayFeat;\n    //     });\n         \n    //     console.log(JSON.stringify(\n    //     displayFeatures,\n    //     null,\n    //     2\n    //     ))\n    //     })\n}\n\nexport default createMap;\n"]},"metadata":{},"sourceType":"module"}