{"ast":null,"code":"import*as d3 from\"d3\";import moment from'moment';import colors from'./colors';import{addCommas}from'./HelperFunctions';import{filter}from'./App';var maxCases;var maxDeaths;var maxVaccinations;var xScaleCases;var xScaleDeaths;var xScaleVaccines;var labelWidth;var margin={left:20,top:0,right:58};var rcSize;var groupedData=[];export function drawRegionchart(data,options,filter){var barSpacing=0.1;// reset region values to zero\ndata.regions.forEach(function(d,i){d.population=0;d.cumulative_deaths=0;d.cumulative_cases=0;d.cumulative_vaccines=0;});// loop through countries and calculate region totals\ndata.country.forEach(function(d,i){data.regions.forEach(function(dd,ii){if(dd.code==d.ifrc_region){if(d.population>0&&d.who_daily_latest){if(d.who_daily_latest.cumulative_cases>0)dd.cumulative_cases+=d.who_daily_latest.cumulative_cases;if(d.who_daily_latest.cumulative_deaths>0)dd.cumulative_deaths+=d.who_daily_latest.cumulative_deaths||0;dd.population+=d.population;}if(d.population>0&&d.vaccine_daily_latest){dd.cumulative_vaccines+=d.vaccine_daily_latest.total_vaccinations||0;}}});});// calculate regions per 100k values using total population for each region\ndata.regions.forEach(function(d,i){d.cumulative_cases_per_100k=d.cumulative_cases/(d.population/100000);d.cumulative_deaths_per_100k=d.cumulative_deaths/(d.population/100000);d.cumulative_vaccines_per_100k=d.cumulative_vaccines/(d.population/100000);if(!isFinite(d.cumulative_cases_per_100k))d.cumulative_cases_per_100k=0;if(!isFinite(d.cumulative_deaths_per_100k))d.cumulative_deaths_per_100k=0;if(!isFinite(d.cumulative_vaccines_per_100k))d.cumulative_vaccines_per_100k=0;});// get maximum values for each series\nmaxVaccinations=d3.max(data.regions,function(d,i){return d.cumulative_vaccines_per_100k;});maxCases=d3.max(data.regions,function(d,i){return d.cumulative_cases_per_100k;});maxDeaths=d3.max(data.regions,function(d,i){return d.cumulative_deaths_per_100k;});// append region chart container\nvar regionChartContainer=d3.select('#layout #region_chart_container').attr('opacity',0);// get dimensions\nrcSize={x:regionChartContainer.attr('x'),y:regionChartContainer.attr('y'),width:regionChartContainer.attr('width'),height:regionChartContainer.attr('height')};// create svg container\nvar svg=d3.select('#layout').append('g').attr('transform','translate('+rcSize.x+', '+rcSize.y+')').attr('id','region_chart');// calculate chart row height\nvar rowHeight=rcSize.height/(data.regions.length-1);// remove OTH\n// create rows\nvar rows=svg.selectAll('.bar-row').data(data.regions.filter(function(d){return d.code!=='OTH';})).enter().append('g').attr('class','bar-row').attr('transform',function(d,i){return'translate(0,'+(i*rowHeight+margin.top)+')';});// create region labels\nvar label=rows.append('text').attr('y',rowHeight/2).attr('x',margin.left-5).attr('class',function(d,i){return'bar-labels bar-label-'+d.code;}).style('alignment-baseline','middle').style('font-size','11px').attr('opacity',1).attr('fill','#000').text(function(d,i){if(d.code==='AM')return'Americas';if(d.code==='EU')return'Europe';if(d.code==='AF')return'Africa';if(d.code==='ME')return'Middle East and North Africa';if(d.code==='AP')return'Asia-Pacific';}).style('text-anchor','end');// get label node width for use in scale\nlabelWidth=rows.node().getBBox().width+margin.left;label.attr('x',labelWidth+89);labelWidth=labelWidth+94;d3.selectAll('.timeBar').attr('opacity',1);// create fading background click area\nvar rowBg=rows.append('rect').attr('y',0).attr('x',0).attr('width',labelWidth).attr('height',rowHeight-2).style('opacity',0).attr('fill','grey').style('cursor','pointer').attr('class',function(d,i){return'bar-bg-'+d.code;}).attr('data-id',function(d,i){return d.code;}).on('mouseover',function(d){d3.select(this).style('opacity',0.1);}).on('mouseout',function(){d3.select(this).style('opacity',0);}).on('click',function(d,i){var t=d3.select(this).attr('data-id');filter([t],'regionchart');});// define scales\nxScaleCases=d3.scaleLinear().range([0,rcSize.width-margin.right-labelWidth]).domain([0,maxCases]);xScaleDeaths=d3.scaleLinear().range([0,rcSize.width-margin.right-labelWidth]).domain([0,maxDeaths]);xScaleVaccines=d3.scaleLinear().range([labelWidth,rcSize.width-margin.right-labelWidth]).domain([0,maxVaccinations]);var bars=rows.append('rect').attr('id',function(d,i){return'bar-'+d.code;}).attr('data-id',function(d,i){return d.code;}).attr('class','region-bar').attr('width',function(d,i){if(options.region_chart_toggle=='cases')return xScaleCases(d.cumulative_cases_per_100k);if(options.region_chart_toggle=='deaths')return xScaleDeaths(d.cumulative_deaths_per_100k);if(options.region_chart_toggle=='vaccines')return xScaleDeaths(d.cumulative_vaccines_per_100k);}).attr('x',labelWidth).style('outline','none').style('cursor','pointer').attr('y',rowHeight*barSpacing-1).attr('height',rowHeight-rowHeight*barSpacing*2).style('fill',function(d){return colors.regions[d.code];}).attr('opacity',1).on('click',function(d,i){var t=d3.select(this).attr('data-id');filter([t],'regionchart');}).on('mouseover',function(d){var dat=d3.select(this.parentNode).datum();// d3.selectAll('.timeBar:not(.time_'+dat.region).transition().duration(500).attr('opacity', 0.3);\n// d3.selectAll('.time_'+dat.region).attr('opacity', 1);\n}).on('mouseout',function(){// d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n});// create data value labels\nvar dataLabel=rows.append('text').text(function(d){if(options.region_chart_toggle=='cases')return addCommas(Math.round(d.cumulative_cases_per_100k));if(options.region_chart_toggle=='deaths')return addCommas(Math.round(d.cumulative_deaths_per_100k));if(options.region_chart_toggle=='vaccines')return addCommas(Math.round(d.cumulative_vaccines_per_100k));}).attr('id',function(d,i){return'data-label'+d.code;}).attr('data-id',function(d,i){return d.code;}).attr('class','data-label').attr('y',rowHeight/2).style('alignment-baseline','middle').style('text-anchor','start').attr('x',function(d,i){if(options.region_chart_toggle=='cases')return xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;if(options.region_chart_toggle=='deaths')return xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;if(options.region_chart_toggle=='vaccines')return xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;}).attr('opacity',function(d,i){var val=0;if(options.region_chart_toggle=='cases')val=d.cumulative_cases_per_100k;if(options.region_chart_toggle=='deaths')val=d.cumulative_deaths_per_100k;if(options.region_chart_toggle=='vaccines')val=d.cumulative_vaccines_per_100k;if(val>0){return 1;}else{return 0;}}).style('fill','#696969').style('font-weight','normal').style('font-size','10px');}export function updateRegionchart(options,data){// reset region values to zero\ndata.regions.forEach(function(d,i){d.population=0;d.cumulative_deaths=0;d.cumulative_cases=0;d.cumulative_vaccines=0;});// loop through countries and calculate region totals\ndata.country.forEach(function(d,i){data.regions.forEach(function(dd,ii){if(dd.code==d.ifrc_region){if(d.population>0&&d.who_daily_latest){if(d.who_daily_latest.cumulative_cases>0)dd.cumulative_cases+=d.who_daily_latest.cumulative_cases;if(d.who_daily_latest.cumulative_deaths>0)dd.cumulative_deaths+=d.who_daily_latest.cumulative_deaths||0;dd.population+=d.population;}if(d.population>0&&d.vaccine_daily_latest){dd.cumulative_vaccines+=d.vaccine_daily_latest.total_vaccinations||0;}}});});// calculate regions per 100k values using total population for each region\ndata.regions.forEach(function(d,i){d.cumulative_cases_per_100k=d.cumulative_cases/(d.population/100000);d.cumulative_deaths_per_100k=d.cumulative_deaths/(d.population/100000);d.cumulative_vaccines_per_100k=d.cumulative_vaccines/(d.population/100000);if(!isFinite(d.cumulative_cases_per_100k))d.cumulative_cases_per_100k=0;if(!isFinite(d.cumulative_deaths_per_100k))d.cumulative_deaths_per_100k=0;if(!isFinite(d.cumulative_vaccines_per_100k))d.cumulative_vaccines_per_100k=0;});// get maximum values for each series\nmaxVaccinations=d3.max(data.regions,function(d,i){return d.cumulative_vaccines_per_100k;});maxCases=d3.max(data.regions,function(d,i){return d.cumulative_cases_per_100k;});maxDeaths=d3.max(data.regions,function(d,i){return d.cumulative_deaths_per_100k;});// redefine scales using new extent\nxScaleCases=d3.scaleLinear().range([0,rcSize.width-margin.right-labelWidth]).domain([0,maxCases]);xScaleDeaths=d3.scaleLinear().range([0,rcSize.width-margin.right-labelWidth]).domain([0,maxDeaths]);xScaleVaccines=d3.scaleLinear().range([0,rcSize.width-margin.right-labelWidth]).domain([0,maxVaccinations]);// update bars\nif(maxVaccinations==0&&maxCases==0&&maxDeaths==0){d3.selectAll('.region-bar').transition().duration(500).attr('width',0);d3.selectAll('.data-label').transition().duration(500).attr('x',labelWidth).attr('opacity',0);}else{d3.selectAll('.region-bar').transition().duration(500).attr('width',function(d,i){var id=d3.select(this).attr('data-id');var d;groupedData.forEach(function(dd,ii){if(dd.code==id){d=dd;}});var val=0;if(options.region_chart_toggle=='cases')val=xScaleCases(d.cumulative_cases_per_100k);if(options.region_chart_toggle=='deaths')val=xScaleDeaths(d.cumulative_deaths_per_100k);if(options.region_chart_toggle=='vaccines')val=xScaleVaccines(d.cumulative_vaccines_per_100k);if(!isNaN(val)){return parseFloat(val);}else{return 0;}});d3.selectAll('.data-label').transition().duration(500).tween(\"text\",function(d,i){var end=0;var id=d3.select(this).attr('data-id');var d;groupedData.forEach(function(dd,ii){if(dd.code==id){d=dd;}});if(options.region_chart_toggle=='cases')end=d.cumulative_cases_per_100k;if(options.region_chart_toggle=='deaths')end=d.cumulative_deaths_per_100k;if(options.region_chart_toggle=='vaccines')end=d.cumulative_vaccines_per_100k;var i=d3.interpolate(Math.floor(Math.random()*2346+9345),end);return function(t){d3.select(this).text(addCommas(Math.round(i(t))));};}).attr('x',function(d,i){var id=d3.select(this).attr('data-id');var d;groupedData.forEach(function(dd,ii){if(dd.code==id){d=dd;}});if(options.region_chart_toggle=='cases')return xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;if(options.region_chart_toggle=='deaths')return xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;if(options.region_chart_toggle=='vaccines')return xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;}).attr('opacity',function(d,i){var d;var id=d3.select(this).attr('data-id');groupedData.forEach(function(dd,ii){if(dd.code==id){d=dd;}});var val=0;if(options.region_chart_toggle=='cases')val=d.cumulative_cases_per_100k;if(options.region_chart_toggle=='deaths')val=d.cumulative_deaths_per_100k;if(options.region_chart_toggle=='vaccines')val=d.cumulative_vaccines_per_100k;if(val>0){return 1;}else{return 0;}});}}export default drawRegionchart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Regionchart.js"],"names":["d3","moment","colors","addCommas","filter","maxCases","maxDeaths","maxVaccinations","xScaleCases","xScaleDeaths","xScaleVaccines","labelWidth","margin","left","top","right","rcSize","groupedData","drawRegionchart","data","options","barSpacing","regions","forEach","d","i","population","cumulative_deaths","cumulative_cases","cumulative_vaccines","country","dd","ii","code","ifrc_region","who_daily_latest","vaccine_daily_latest","total_vaccinations","cumulative_cases_per_100k","cumulative_deaths_per_100k","cumulative_vaccines_per_100k","isFinite","max","regionChartContainer","select","attr","x","y","width","height","svg","append","rowHeight","length","rows","selectAll","enter","label","style","text","node","getBBox","rowBg","on","t","scaleLinear","range","domain","bars","region_chart_toggle","dat","parentNode","datum","dataLabel","Math","round","val","updateRegionchart","transition","duration","id","isNaN","parseFloat","tween","end","interpolate","floor","random"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases; \nlet xScaleDeaths;\nlet xScaleVaccines;\nlet labelWidth; \nconst margin = { left: 20, top: 0, right: 58 };\nlet rcSize; \nlet groupedData = [];\n\nexport function drawRegionchart(data, options, filter) {\n\n    const barSpacing = 0.1;\n\n    // reset region values to zero\n    data.regions.forEach(function(d,i){\n        d.population = 0;\n        d.cumulative_deaths = 0;\n        d.cumulative_cases = 0;\n        d.cumulative_vaccines = 0;\n    })\n\n    // loop through countries and calculate region totals\n    data.country.forEach(function(d,i){\n        data.regions.forEach(function(dd,ii){\n            if((dd.code==d.ifrc_region)){ \n                if((d.population>0)&&(d.who_daily_latest)){\n                    if(d.who_daily_latest.cumulative_cases>0)\n                    dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n                    if(d.who_daily_latest.cumulative_deaths>0)\n                    dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths||0;\n                    dd.population += d.population;\n                }\n                if((d.population>0)&&(d.vaccine_daily_latest)){\n                    dd.cumulative_vaccines += (d.vaccine_daily_latest.total_vaccinations)||0;\n                }\n            }\n        });\n    });\n\n    // calculate regions per 100k values using total population for each region\n    data.regions.forEach(function(d,i){\n        d.cumulative_cases_per_100k = d.cumulative_cases/(d.population/100000)\n        d.cumulative_deaths_per_100k = d.cumulative_deaths/(d.population/100000);\n        d.cumulative_vaccines_per_100k = d.cumulative_vaccines/(d.population/100000);\n        if(!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n    })\n\n    // get maximum values for each series\n    maxVaccinations = d3.max(data.regions, function(d,i){\n        return d.cumulative_vaccines_per_100k;\n    })\n\n    maxCases = d3.max(data.regions, function(d,i){\n        return d.cumulative_cases_per_100k;\n    })\n\n    maxDeaths = d3.max(data.regions, function(d,i){\n        return d.cumulative_deaths_per_100k;\n    });\n\n    // append region chart container\n    const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n\n    // get dimensions\n    rcSize = {\n        x: regionChartContainer.attr('x'), y: regionChartContainer.attr('y'), width: regionChartContainer.attr('width'), height: regionChartContainer.attr('height')\n    }\n\n    // create svg container\n    const svg = d3.select('#layout').append('g').attr('transform', 'translate('+rcSize.x+', '+rcSize.y+')')\n    .attr('id', 'region_chart');\n\n    // calculate chart row height\n\tvar rowHeight = rcSize.height/(data.regions.length-1); // remove OTH\n\n    // create rows\n    var rows = svg.selectAll('.bar-row')\n\t.data(data.regions.filter(d=>d.code!=='OTH'))\n\t.enter()\n\t.append('g')\n\t.attr('class', 'bar-row')\n\t.attr('transform', function(d,i){\n\t\treturn 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t});\n\n    // create region labels\n    var label = rows.append('text')\n\t.attr('y', rowHeight/2 )\n    .attr('x', margin.left-5)\n\t.attr('class', function(d,i){ return 'bar-labels bar-label-'+d.code })\n\t.style('alignment-baseline', 'middle')\n\t.style('font-size', '11px')\n    .attr('opacity', 1)\n\t.attr('fill', '#000')\n\t.text(function(d,i){\n\t\tif(d.code==='AM') return 'Americas';\n\t\tif(d.code==='EU') return 'Europe';\n\t\tif(d.code==='AF') return 'Africa';\n\t\tif(d.code==='ME') return 'Middle East and North Africa';\n\t\tif(d.code==='AP') return 'Asia-Pacific';\n\t}).style('text-anchor', 'end');\n\n    // get label node width for use in scale\n    labelWidth = rows.node().getBBox().width + margin.left;\n\tlabel.attr('x', labelWidth+89);\n\tlabelWidth = labelWidth + 94;\n    d3.selectAll('.timeBar').attr('opacity',1);\n    \n    // create fading background click area\n    var rowBg = rows.append('rect')\n\t.attr('y', 0)\n\t.attr('x', 0)\n\t.attr('width', labelWidth)\n\t.attr('height', rowHeight-2)\n\t.style('opacity', 0)\n    .attr('fill', 'grey')\n\t.style('cursor', 'pointer')\n\t.attr('class', function(d,i){ return 'bar-bg-'+d.code })\n\t.attr('data-id', function(d,i){ return d.code })\n\t.on('mouseover', function(d){\n\t\td3.select(this).style('opacity', 0.1);\n\t})\n\t.on('mouseout', function(){\n\t\td3.select(this).style('opacity', 0);\n\t})\n\t.on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    });\n\n    // define scales\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([labelWidth, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);\n\n    var bars = rows.append('rect')\n    .attr('id', function(d,i){\n        return 'bar-'+d.code;\n    })\n\t.attr('data-id', function(d,i){ return d.code })\n    .attr('class', 'region-bar')\n    .attr('width', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k);\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k);\n        if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines_per_100k);\n    })\n    .attr('x', labelWidth)\n    .style('outline', 'none')\n    .style('cursor', 'pointer')\n    .attr('y', rowHeight*barSpacing - 1)\n    .attr('height', rowHeight-((rowHeight*barSpacing)*2))\n    .style('fill', function(d){\n        return colors.regions[d.code]\n    })\n    .attr('opacity',1)\n    .on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    })\n    .on('mouseover', function(d){\n        var dat = d3.select(this.parentNode).datum();\n        // d3.selectAll('.timeBar:not(.time_'+dat.region).transition().duration(500).attr('opacity', 0.3);\n        // d3.selectAll('.time_'+dat.region).attr('opacity', 1);\n\t})\n\t.on('mouseout', function(){\n        // d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n\t})\n\n    // create data value labels\n    var dataLabel = rows.append('text')\n\t.text(function(d){\n        if(options.region_chart_toggle == 'cases') return addCommas(Math.round(d.cumulative_cases_per_100k));\n        if(options.region_chart_toggle == 'deaths') return addCommas(Math.round(d.cumulative_deaths_per_100k));\n        if(options.region_chart_toggle == 'vaccines') return addCommas(Math.round(d.cumulative_vaccines_per_100k));\n    })\n\t.attr('id', function(d,i){\n\t\treturn 'data-label'+d.code;\n\t})\n    .attr('data-id', function(d,i){ return d.code })\n\t.attr('class', 'data-label')\n\t.attr('y', rowHeight/2)\n\t.style('alignment-baseline', 'middle')\n\t.style('text-anchor', 'start')\n\t.attr('x', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;\n        if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;\n    })\n    .attr('opacity', function(d,i){\n        var val = 0;\n        if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases_per_100k);\n        if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths_per_100k);\n        if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines_per_100k);\n        if(val>0){ return 1 } else { return 0}\n    })\n\t.style('fill', '#696969')\n\t.style('font-weight', 'normal')\n\t.style('font-size', '10px');\n\n}\n\nexport function updateRegionchart(options,data) {\n    \n    // reset region values to zero\n    data.regions.forEach(function(d,i){\n        d.population = 0;\n        d.cumulative_deaths = 0;\n        d.cumulative_cases = 0;\n        d.cumulative_vaccines = 0;\n    })\n\n    // loop through countries and calculate region totals\n    data.country.forEach(function(d,i){\n        data.regions.forEach(function(dd,ii){\n            if((dd.code==d.ifrc_region)){ \n                if((d.population>0)&&(d.who_daily_latest)){\n                    if(d.who_daily_latest.cumulative_cases>0)\n                    dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n                    if(d.who_daily_latest.cumulative_deaths>0)\n                    dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths||0;\n                    dd.population += d.population;\n                }\n                if((d.population>0)&&(d.vaccine_daily_latest)){\n                    dd.cumulative_vaccines += (d.vaccine_daily_latest.total_vaccinations)||0;\n                }\n            }\n        });\n    });\n\n    // calculate regions per 100k values using total population for each region\n    data.regions.forEach(function(d,i){\n        d.cumulative_cases_per_100k = d.cumulative_cases/(d.population/100000)\n        d.cumulative_deaths_per_100k = d.cumulative_deaths/(d.population/100000);\n        d.cumulative_vaccines_per_100k = d.cumulative_vaccines/(d.population/100000);\n        if(!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n    })\n\n    // get maximum values for each series\n    maxVaccinations = d3.max(data.regions, function(d,i){\n        return d.cumulative_vaccines_per_100k;\n    })\n\n    maxCases = d3.max(data.regions, function(d,i){\n        return d.cumulative_cases_per_100k;\n    })\n\n    maxDeaths = d3.max(data.regions, function(d,i){\n        return d.cumulative_deaths_per_100k;\n    });\n\n    // redefine scales using new extent\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);\n\n    // update bars\n    if((maxVaccinations==0)&&(maxCases==0)&&(maxDeaths==0)){\n        d3.selectAll('.region-bar')\n        .transition().duration(500)\n        .attr('width', 0);\n\n        d3.selectAll('.data-label')\n        .transition()\n          .duration(500) \n          .attr('x', labelWidth)\n          .attr('opacity', 0);\n    } else {\n        d3.selectAll('.region-bar')\n        .transition().duration(500)\n        .attr('width', function(d,i){\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k);\n            if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k);\n            if(!isNaN(val)) { return parseFloat(val) } else { return 0}\n        })   \n        d3.selectAll('.data-label')\n        .transition()\n          .duration(500)\n          .tween(\"text\", function(d,i) {\n            var end = 0;\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            if(options.region_chart_toggle == 'cases') end = (d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') end = (d.cumulative_deaths_per_100k);  \n            if(options.region_chart_toggle == 'vaccines') end = (d.cumulative_vaccines_per_100k);  \n            var i = d3.interpolate(Math.floor((Math.random() * 2346) + 9345), end);\n            return function(t) {\n              d3.select(this).text(addCommas(Math.round(i(t))));\n            };\n          })\n        .attr('x', function(d,i){\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;\n            if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;\n            if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;\n        })\n        .attr('opacity', function(d,i){\n            var d;\n            var id = d3.select(this).attr('data-id');\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths_per_100k);\n            if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines_per_100k);\n            if(val>0){ return 1 } else { return 0}\n        })\n\n    }\n\n}\n\nexport default drawRegionchart;\n"]},"metadata":{},"sourceType":"module"}