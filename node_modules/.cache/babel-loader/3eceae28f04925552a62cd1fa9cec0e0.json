{"ast":null,"code":"var _jsxFileName = \"/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport Select from 'react-select';\nimport * as d3 from \"d3\";\nimport axios from 'axios';\nimport Layout from './Layout';\nimport { drawTimechart, updateTimechart } from './Timechart';\nimport options from './Options';\nimport './App.css';\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst equityDataUrl = './data/equity_data.csv';\nconst layoutUrl = \"./images/layout.svg\";\nconst whoDataUrl = \"./data/who_global_cases.csv\";\nconst worldUrl = \"./data/world-wb5.geojson\";\nconst data = {\n  'data': []\n};\nconst regionOptions = [{\n  value: 'AM',\n  label: 'Americas'\n}, {\n  value: 'EU',\n  label: 'Europe'\n}, {\n  value: 'AS',\n  label: 'Asia-Pacific'\n}, {\n  value: 'ME',\n  label: 'Middle East and North Africa'\n}, {\n  value: 'AF',\n  label: 'Africa'\n}];\n\nfunction App() {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [loaderText, setLoaderText] = useState('Loading SVG layout...');\n\n  async function init() {\n    // data source 1: layout.svg\n    const layout = d3.xml(layoutUrl);\n    layout.then(function (d) {\n      d3.select('#svg_container').node().append(d3.select(d.documentElement).attr('width', '100%').attr('height', 'auto').node());\n      const svg = d3.select('#svg_container svg');\n      svg.select('title').remove();\n      Layout(svg, options, data);\n      setProgress(0.1);\n      setLoaderText('Loading equity data CSV...'); // data source 2: equity_data.csv\n\n      const equityData = d3.csv(equityDataUrl);\n      equityData.then(function (d) {\n        data.equity_data = d;\n        setProgress(0.3);\n        setLoaderText('Loading WHO data CSV...'); // data source 3: who_global_cases.csv\n\n        const whoData = d3.csv(whoDataUrl);\n        whoData.then(function (d) {\n          data.who_data = d;\n          setProgress(0.8);\n          setLoaderText('Loading World Map GeoJSON...'); // data source 4: world-wb5.geojson\n\n          const world = d3.csv(worldUrl);\n          world.then(function (d) {\n            data.world = d;\n            setLoaderText('Loading complete.');\n            setProgress(1);\n            console.log(data);\n            d3.select('#loaderDiv').transition().duration(1000).style('opacity', 0).on(\"end\", () => d3.select('#loaderDiv').remove());\n            createCharts();\n          });\n        });\n      });\n    });\n  }\n\n  function createCharts() {\n    drawTimechart();\n  }\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loaderDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loaderText\",\n        children: loaderText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loaderBar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"loaderProgress\",\n          style: {\n            width: progress * 100 + '%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"regionSelectContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        id: \"regionSelect\",\n        options: regionOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"countrySelectContainer\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        id: \"countrySelect\",\n        options: regionOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"svg_container\",\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dIWdRh6Aq0pdUXjFSLJaJri2VpA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/App.js"],"names":["React","Component","useEffect","useState","Select","d3","axios","Layout","drawTimechart","updateTimechart","options","$","equityDataUrl","layoutUrl","whoDataUrl","worldUrl","data","regionOptions","value","label","App","progress","setProgress","loaderText","setLoaderText","init","layout","xml","then","d","select","node","append","documentElement","attr","svg","remove","equityData","csv","equity_data","whoData","who_data","world","console","log","transition","duration","style","on","createCharts","width"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport Select from 'react-select'\nimport * as d3 from \"d3\";\nimport axios from 'axios';\nimport Layout from './Layout';\nimport {drawTimechart, updateTimechart} from './Timechart';\nimport options from './Options';\nimport './App.css'\nimport $ from \"jquery\";\n\nconst equityDataUrl = './data/equity_data.csv';\nconst layoutUrl = \"./images/layout.svg\";\nconst whoDataUrl = \"./data/who_global_cases.csv\";\nconst worldUrl = \"./data/world-wb5.geojson\";\n\nconst data = {'data': []};\n\nconst regionOptions = [\n  { value: 'AM', label: 'Americas' },\n  { value: 'EU', label: 'Europe' },\n  { value: 'AS', label: 'Asia-Pacific' },\n  { value: 'ME', label: 'Middle East and North Africa'},\n  { value: 'AF', label: 'Africa' }\n]\n\nfunction App() {\n\n  const [progress, setProgress] = useState(0);\n  const [loaderText, setLoaderText] = useState('Loading SVG layout...');\n\n  async function init(){\n\n    // data source 1: layout.svg\n    const layout = d3.xml(layoutUrl);\n    layout.then(function(d){\n      d3.select('#svg_container').node().append(d3.select(d.documentElement).attr('width', '100%').attr('height', 'auto').node());\n      const svg = d3.select('#svg_container svg');\n      svg.select('title').remove();\n      Layout(svg, options, data);\n      setProgress(0.1);\n      setLoaderText('Loading equity data CSV...');\n      // data source 2: equity_data.csv\n      const equityData = d3.csv(equityDataUrl);\n      equityData.then(function(d){\n        data.equity_data = d;\n        setProgress(0.3);\n        setLoaderText('Loading WHO data CSV...');\n          // data source 3: who_global_cases.csv\n          const whoData = d3.csv(whoDataUrl);\n          whoData.then(function(d){\n            data.who_data = d;\n            setProgress(0.8);\n            setLoaderText('Loading World Map GeoJSON...');\n            // data source 4: world-wb5.geojson\n            const world = d3.csv(worldUrl);\n            world.then(function(d){\n              data.world = d;\n              setLoaderText('Loading complete.');\n              setProgress(1);\n              console.log(data);\n              d3.select('#loaderDiv').transition().duration(1000).style('opacity', 0).on(\"end\", () => d3.select('#loaderDiv').remove());\n              createCharts();\n            });\n          });\n      });\n    })\n  }\n  \n  function createCharts(){\n    drawTimechart();\n  }\n  \n  useEffect(() => {\n    init();\n  }, [])\n\n\n  return (\n    <div>\n      <div id=\"loaderDiv\">\n        <div id=\"loaderText\">{loaderText}</div>\n        <div id=\"loaderBar\">\n          <div id=\"loaderProgress\" style={{width: progress*100+'%'}}></div>\n        </div>\n      </div>\n\n      <div id=\"regionSelectContainer\">\n        <Select id=\"regionSelect\" options={regionOptions} />\n      </div>\n      <div id=\"countrySelectContainer\">\n        <Select id=\"countrySelect\" options={regionOptions} />\n      </div>\n\n    <div id=\"svg_container\" className=\"App\">\n\n    </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}