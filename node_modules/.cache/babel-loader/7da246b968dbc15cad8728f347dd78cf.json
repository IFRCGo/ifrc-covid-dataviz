{"ast":null,"code":"import * as d3 from \"d3\";\nexport function ParseData(data, options) {\n  console.log('ParseData');\n  console.log(data);\n  data.who_data.forEach(function (d, i) {\n    d.date = new Date(d.Date_reported);\n    d.month = d.date.month;\n    d.new_cases = parseInt(d.New_cases);\n    d.new_deaths = parseInt(d.New_deaths);\n    d.cumulative_deaths = parseInt(d.Cumulative_deaths);\n    d.cumulative_cases = parseInt(d.Cumulative_cases);\n    data.equity_data.forEach(function (dd, ii) {\n      if (dd.country_iso2 === d.Country_code) {\n        d.ifrc_region = dd.ifrc_region;\n        d.country_name = dd.country_name;\n      }\n    });\n    delete d.Date_reported;\n    delete d.New_cases;\n    delete d.New_deaths;\n    delete d.Cumulative_deaths;\n    delete d.Cumulative_cases;\n    delete d.Country_code;\n    delete d.WHO_region;\n    delete d.Country;\n  });\n  console.log(data.who_data[1000]);\n}\n_c = ParseData;\nexport default ParseData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParseData\");","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/ParseData.js"],"names":["d3","ParseData","data","options","console","log","who_data","forEach","d","i","date","Date","Date_reported","month","new_cases","parseInt","New_cases","new_deaths","New_deaths","cumulative_deaths","Cumulative_deaths","cumulative_cases","Cumulative_cases","equity_data","dd","ii","country_iso2","Country_code","ifrc_region","country_name","WHO_region","Country"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAA,EAAAA,IAAI,CAACI,QAAL,CAAcC,OAAd,CAAsB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAC/BD,IAAAA,CAAC,CAACE,IAAF,GAAS,IAAIC,IAAJ,CAASH,CAAC,CAACI,aAAX,CAAT;AACAJ,IAAAA,CAAC,CAACK,KAAF,GAAUL,CAAC,CAACE,IAAF,CAAOG,KAAjB;AACAL,IAAAA,CAAC,CAACM,SAAF,GAAcC,QAAQ,CAACP,CAAC,CAACQ,SAAH,CAAtB;AACAR,IAAAA,CAAC,CAACS,UAAF,GAAeF,QAAQ,CAACP,CAAC,CAACU,UAAH,CAAvB;AACAV,IAAAA,CAAC,CAACW,iBAAF,GAAsBJ,QAAQ,CAACP,CAAC,CAACY,iBAAH,CAA9B;AACAZ,IAAAA,CAAC,CAACa,gBAAF,GAAqBN,QAAQ,CAACP,CAAC,CAACc,gBAAH,CAA7B;AACApB,IAAAA,IAAI,CAACqB,WAAL,CAAiBhB,OAAjB,CAAyB,UAASiB,EAAT,EAAYC,EAAZ,EAAe;AACpC,UAAGD,EAAE,CAACE,YAAH,KAAkBlB,CAAC,CAACmB,YAAvB,EAAoC;AAChCnB,QAAAA,CAAC,CAACoB,WAAF,GAAgBJ,EAAE,CAACI,WAAnB;AACApB,QAAAA,CAAC,CAACqB,YAAF,GAAiBL,EAAE,CAACK,YAApB;AACH;AACJ,KALD;AAOA,WAAOrB,CAAC,CAACI,aAAT;AACA,WAAOJ,CAAC,CAACQ,SAAT;AACA,WAAOR,CAAC,CAACU,UAAT;AACA,WAAOV,CAAC,CAACY,iBAAT;AACA,WAAOZ,CAAC,CAACc,gBAAT;AACA,WAAOd,CAAC,CAACmB,YAAT;AACA,WAAOnB,CAAC,CAACsB,UAAT;AACA,WAAOtB,CAAC,CAACuB,OAAT;AACH,GAtBD;AAwBA3B,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAL,CAAc,IAAd,CAAZ;AACH;KA7BeL,S;AA+BhB,eAAeA,SAAf","sourcesContent":["import * as d3 from \"d3\";\n\nexport function ParseData(data, options) {\n\n    console.log('ParseData');\n    console.log(data);\n    data.who_data.forEach(function(d,i){\n        d.date = new Date(d.Date_reported);\n        d.month = d.date.month;\n        d.new_cases = parseInt(d.New_cases);\n        d.new_deaths = parseInt(d.New_deaths);\n        d.cumulative_deaths = parseInt(d.Cumulative_deaths);\n        d.cumulative_cases = parseInt(d.Cumulative_cases);\n        data.equity_data.forEach(function(dd,ii){\n            if(dd.country_iso2===d.Country_code){\n                d.ifrc_region = dd.ifrc_region;\n                d.country_name = dd.country_name;\n            }\n        })\n\n        delete d.Date_reported;\n        delete d.New_cases;\n        delete d.New_deaths;\n        delete d.Cumulative_deaths;\n        delete d.Cumulative_cases;\n        delete d.Country_code;\n        delete d.WHO_region;\n        delete d.Country;\n    })\n\n    console.log(data.who_data[1000]);\n}\n\nexport default ParseData;\n"]},"metadata":{},"sourceType":"module"}