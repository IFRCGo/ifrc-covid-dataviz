{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { addCommas } from './HelperFunctions';\nimport { filter } from './App';\nlet maxX;\nlet maxY;\nlet xScale;\nlet yScale;\nlet groupedData = [];\nlet width = 600;\nlet height = 244;\nlet x = 684;\nlet y = 659;\nexport function drawBubblechart(data, options, filter) {\n  maxX = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  maxY = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  xScale = d3.scaleLinear().range([0, width]).domain([0, maxX]);\n  yScale = d3.scaleLinear().range([0, height]).domain([0, maxY]);\n  const svg = d3.select('#layout').append('g').attr('transform', 'translate(' + x + ', ' + y + ')').attr('id', 'region_chart');\n  var rows = svg.selectAll('.bar-row').data(groupedData.filter(d => d.region !== 'OTH')).enter().append('g').attr('class', 'bar-row').attr('transform', function (d, i) {\n    return 'translate(0,' + (i * rowHeight + margin.top) + ')';\n  });\n}\nexport function updateBubblechart(options, data) {\n  maxX = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  maxY = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  xScale = d3.scaleLinear().range([0, width]).domain([0, maxX]);\n  yScale = d3.scaleLinear().range([0, height]).domain([0, maxY]);\n}\nexport default drawBubblechart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Bubblechart.js"],"names":["d3","moment","colors","addCommas","filter","maxX","maxY","xScale","yScale","groupedData","width","height","x","y","drawBubblechart","data","options","max","d","i","cumulative_cases","scaleLinear","range","domain","svg","select","append","attr","rows","selectAll","region","enter","rowHeight","margin","top","updateBubblechart"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxX;\nlet maxY;\nlet xScale; \nlet yScale; \nlet groupedData = [];\nlet width = 600;\nlet height = 244;\nlet x = 684;\nlet y = 659;\n\nexport function drawBubblechart(data, options, filter) {\n\n    maxX = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    maxY = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    xScale = d3.scaleLinear()\n\t.range([0, width])\n\t.domain([0, maxX]);\n\n    yScale = d3.scaleLinear()\n\t.range([0, height])\n\t.domain([0, maxY]);\n\n    const svg = d3.select('#layout').append('g').attr('transform', 'translate('+x+', '+y+')')\n    .attr('id', 'region_chart');\n\n    var rows = svg.selectAll('.bar-row')\n\t.data(groupedData.filter(d=>d.region!=='OTH'))\n\t.enter()\n\t.append('g')\n\t.attr('class', 'bar-row')\n\t.attr('transform', function(d,i){\n\t\treturn 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t});\n\n}\n\nexport function updateBubblechart(options,data) {\n    \n\n    maxX = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    maxY = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    xScale = d3.scaleLinear()\n\t.range([0, width])\n\t.domain([0, maxX]);\n\n    yScale = d3.scaleLinear()\n\t.range([0, height])\n\t.domain([0, maxY]);\n\n  \n\n   \n\n}\n\nexport default drawBubblechart;\n"]},"metadata":{},"sourceType":"module"}