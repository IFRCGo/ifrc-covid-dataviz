{"ast":null,"code":"import * as d3 from \"d3\";\nexport function addCommas(nStr) {\n  nStr += '';\n  let x = nStr.split('.');\n  let x1 = x[0];\n  let x2 = x.length > 1 ? '.' + x[1] : '';\n  var rgx = /(\\d+)(\\d{3})/;\n\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1' + ',' + '$2');\n  }\n\n  return x1 + x2;\n}\nexport function tweenText(newValue) {\n  return function () {\n    var currentValue = +this.textContent;\n    var i = d3.interpolateRound(currentValue, newValue);\n    return function (t) {\n      this.textContent = addCommas(i(t));\n    };\n  };\n}","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/HelperFunctions.js"],"names":["d3","addCommas","nStr","x","split","x1","x2","length","rgx","test","replace","tweenText","newValue","currentValue","textContent","i","interpolateRound","t"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAwB;AAC3BA,EAAAA,IAAI,IAAI,EAAR;AACA,MAAIC,CAAC,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAR;AACA,MAAIC,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAV;AACA,MAAIG,EAAE,GAAGH,CAAC,CAACI,MAAF,GAAW,CAAX,GAAe,MAAMJ,CAAC,CAAC,CAAD,CAAtB,GAA4B,EAArC;AACA,MAAIK,GAAG,GAAG,cAAV;;AACA,SAAOA,GAAG,CAACC,IAAJ,CAASJ,EAAT,CAAP,EAAqB;AACjBA,IAAAA,EAAE,GAAGA,EAAE,CAACK,OAAH,CAAWF,GAAX,EAAgB,OAAO,GAAP,GAAa,IAA7B,CAAL;AACH;;AACD,SAAOH,EAAE,GAAGC,EAAZ;AACH;AAED,OAAO,SAASK,SAAT,CAAoBC,QAApB,EAA+B;AAClC,SAAO,YAAW;AAChB,QAAIC,YAAY,GAAG,CAAC,KAAKC,WAAzB;AAEA,QAAIC,CAAC,GAAGf,EAAE,CAACgB,gBAAH,CAAqBH,YAArB,EAAmCD,QAAnC,CAAR;AAEA,WAAO,UAASK,CAAT,EAAY;AACjB,WAAKH,WAAL,GAAmBb,SAAS,CAACc,CAAC,CAACE,CAAD,CAAF,CAA5B;AACD,KAFD;AAGD,GARD;AASD","sourcesContent":["import * as d3 from \"d3\";\n\nexport function addCommas(nStr){\n    nStr += '';\n    let x = nStr.split('.');\n    let x1 = x[0];\n    let x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n\nexport function tweenText( newValue ) {\n    return function() {\n      var currentValue = +this.textContent;\n      \n      var i = d3.interpolateRound( currentValue, newValue );\n      \n      return function(t) {\n        this.textContent = addCommas(i(t));\n      };\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}