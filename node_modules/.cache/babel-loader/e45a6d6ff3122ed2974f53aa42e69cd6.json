{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { addCommas } from './HelperFunctions';\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases;\nlet xScaleDeaths;\nlet xScaleVaccinations;\nlet groupedData = [];\nlet labelWidth;\nexport function drawRegionchart(data, options) {\n  const regions = ['AF', 'ME', 'AP', 'EU', 'AM', 'OTH'];\n  const margin = {\n    left: 20,\n    top: 0,\n    right: 58\n  };\n  const barSpacing = 0.1;\n  regions.forEach(function (d, i) {\n    if (d != 'OTH') // remove OTH\n      groupedData.push({\n        region: d,\n        cumulative_cases: 0,\n        cumulative_deaths: 0,\n        cumulative_vaccines: 0\n      });\n  });\n  data.who_data.forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (dd == d.ifrc_region && dd != 'OTH') {\n        // remove OTH\n        groupedData[ii].cumulative_cases += d.new_cases;\n        groupedData[ii].cumulative_deaths += d.new_deaths;\n      }\n    });\n  });\n  groupedData.sort(function (a, b) {\n    if (options.region_chart_toggle == 'cases') return b.cumulative_cases - a.cumulative_cases;\n    if (options.region_chart_toggle == 'deaths') return b.cumulative_deaths - a.cumulative_deaths; // if(options.region_chart_toggle == 'vaccines') return (b.cumulative_deaths) - (a.cumulative_deaths); \n  });\n  maxCases = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  maxDeaths = d3.max(groupedData, function (d, i) {\n    return d.cumulative_deaths;\n  }); // vaccinations max date records\n\n  var vGroup = d3.group(data.vaccines_data, d => d.country_code); // maxVaccinations = d3.max(groupedData, function(d,i){\n  //     return d.cumulative_deaths;\n  // })\n  // append region chart containerg\n\n  const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n  const rcSize = {\n    x: regionChartContainer.attr('x'),\n    y: regionChartContainer.attr('y'),\n    width: regionChartContainer.attr('width'),\n    height: regionChartContainer.attr('height')\n  };\n  const svg = d3.select('#layout').append('g').attr('transform', 'translate(' + rcSize.x + ', ' + rcSize.y + ')').attr('id', 'region_chart');\n  var rowHeight = rcSize.height / groupedData.length - 1; // remove OTH\n\n  var rows = svg.selectAll('.bar-row').data(groupedData).enter().append('g').attr('class', 'bar-row').attr('transform', function (d, i) {\n    return 'translate(0,' + (i * rowHeight + margin.top) + ')';\n  });\n  var label = rows.append('text').attr('y', rowHeight / 2).attr('x', margin.left - 5).attr('class', function (d, i) {\n    return 'bar-labels';\n  }).style('alignment-baseline', 'middle').style('font-size', '11px').attr('fill', '#696969').text(function (d, i) {\n    if (d.region === 'AM') return 'Americas';\n    if (d.region === 'EU') return 'Europe';\n    if (d.region === 'AF') return 'Africa';\n    if (d.region === 'ME') return 'Middle East and North Africa';\n    if (d.region === 'AP') return 'Asia-Pacific';\n  }).style('text-anchor', 'end');\n  labelWidth = rows.node().getBBox().width + margin.left;\n  label.attr('x', labelWidth + 89);\n  labelWidth = labelWidth + 94;\n  var rowBg = rows.append('rect').attr('y', 0).attr('x', 0).attr('width', labelWidth).attr('height', rowHeight - 2).style('opacity', 0).attr('fill', 'grey').style('cursor', 'pointer').attr('class', function (d, i) {\n    return 'bar-bg-' + d.region;\n  }).on('mouseover', function (d) {\n    d3.select(this).style('opacity', 0.1);\n    console.log(d);\n  }).on('mouseout', function () {\n    d3.select(this).style('opacity', 0);\n  }).on('click', function (d, i) {\n    console.log('filter');\n  });\n  xScaleCases = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxCases]); // severity/reliability x xcale\n\n  xScaleDeaths = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxDeaths]); // severity/reliability x xcale\n  // const xScaleVaccines = d3.scaleLinear()\n  // .range([labelWidth, rcSize.width - margin.right])\n  // .domain([0, maxDeaths]);// severity/reliability x xcale\n\n  var bars = rows.append('rect').attr('id', function (d, i) {\n    return 'bar-' + d.region;\n  }).attr('class', 'region-bar').attr('width', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths); // if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines);\n  }).attr('x', labelWidth).style('outline', 'none').style('cursor', 'pointer').attr('y', rowHeight * barSpacing - 1).attr('height', rowHeight - rowHeight * barSpacing * 2).style('fill', function (d) {\n    return colors.regions[d.region];\n  }).on('click', function (d, i) {\n    var id = d3.select(this).attr('id');\n  });\n  var dataLabel = rows.append('text').text(function (d) {\n    if (options.region_chart_toggle == 'cases') return addCommas(d.cumulative_cases);\n    if (options.region_chart_toggle == 'deaths') return addCommas(d.cumulative_deaths); // if(options.region_chart_toggle == 'vaccines') return addCommas(d.cumulative_vaccines);\n  }).attr('id', function (d, i) {\n    return 'data-label' + d.region;\n  }).attr('class', 'data-label').attr('y', rowHeight / 2).style('alignment-baseline', 'middle').style('text-anchor', 'start').attr('x', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases) + labelWidth + 5;\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths) + labelWidth + 5; // if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;\n  }).style('fill', '#696969').style('font-weight', 'normal').style('font-size', '10px');\n}\nexport function updateRegionchart(options) {\n  d3.selectAll('.region-bar').transition().duration(500).attr('width', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths); // if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines);\n  });\n  d3.selectAll('.data-label').transition().duration(500).tween(\"text\", function (d) {\n    var end = 0;\n    if (options.region_chart_toggle == 'cases') end = d.cumulative_cases;\n    if (options.region_chart_toggle == 'deaths') end = d.cumulative_deaths;\n    var i = d3.interpolate(Math.floor(Math.random() * 112346 + 92345), end);\n    return function (t) {\n      d3.select(this).text(addCommas(Math.round(i(t))));\n    };\n  }).attr('x', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases) + labelWidth + 5;\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths) + labelWidth + 5; // if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;\n  });\n}\nexport default drawRegionchart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Regionchart.js"],"names":["d3","moment","colors","addCommas","maxCases","maxDeaths","maxVaccinations","xScaleCases","xScaleDeaths","xScaleVaccinations","groupedData","labelWidth","drawRegionchart","data","options","regions","margin","left","top","right","barSpacing","forEach","d","i","push","region","cumulative_cases","cumulative_deaths","cumulative_vaccines","who_data","dd","ii","ifrc_region","new_cases","new_deaths","sort","a","b","region_chart_toggle","max","vGroup","group","vaccines_data","country_code","regionChartContainer","select","attr","rcSize","x","y","width","height","svg","append","rowHeight","length","rows","selectAll","enter","label","style","text","node","getBBox","rowBg","on","console","log","scaleLinear","range","domain","bars","id","dataLabel","updateRegionchart","transition","duration","tween","end","interpolate","Math","floor","random","t","round"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\n\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases; \nlet xScaleDeaths;\nlet xScaleVaccinations;\nlet groupedData = [];\nlet labelWidth; \n\nexport function drawRegionchart(data, options) {\n\n    const regions = ['AF', 'ME', 'AP', 'EU', 'AM', 'OTH'];\n    const margin = { left: 20, top: 0, right: 58 };\n    const barSpacing = 0.1;\n\n    regions.forEach(function(d,i){\n        if(d!='OTH') // remove OTH\n        groupedData.push({ region: d, cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0});\n    })\n\n    data.who_data.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if((dd==d.ifrc_region)&&(dd!='OTH')){ // remove OTH\n                groupedData[ii].cumulative_cases += d.new_cases;\n                groupedData[ii].cumulative_deaths += d.new_deaths;\n            }\n        })\n    });\n\n    groupedData.sort(function(a,b){\n        if(options.region_chart_toggle == 'cases') return (b.cumulative_cases) - (a.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return (b.cumulative_deaths) - (a.cumulative_deaths);\n        // if(options.region_chart_toggle == 'vaccines') return (b.cumulative_deaths) - (a.cumulative_deaths); \n    });\n\n    maxCases = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    maxDeaths = d3.max(groupedData, function(d,i){\n        return d.cumulative_deaths;\n    })\n\n    // vaccinations max date records\n    var vGroup = d3.group(data.vaccines_data, d => d.country_code);\n\n    // maxVaccinations = d3.max(groupedData, function(d,i){\n    //     return d.cumulative_deaths;\n    // })\n\n    // append region chart containerg\n    const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n    const rcSize = {\n        x: regionChartContainer.attr('x'), y: regionChartContainer.attr('y'), width: regionChartContainer.attr('width'), height: regionChartContainer.attr('height')\n    }\n\n    const svg = d3.select('#layout').append('g').attr('transform', 'translate('+rcSize.x+', '+rcSize.y+')')\n    .attr('id', 'region_chart');\n\n\n\tvar rowHeight = rcSize.height/groupedData.length-1; // remove OTH\n\n    var rows = svg.selectAll('.bar-row')\n\t.data(groupedData)\n\t.enter()\n\t.append('g')\n\t.attr('class', 'bar-row')\n\t.attr('transform', function(d,i){\n\t\treturn 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t});\n\n    var label = rows.append('text')\n\t.attr('y', rowHeight/2 )\n    .attr('x', margin.left-5)\n\t.attr('class', function(d,i){ return 'bar-labels' })\n\t.style('alignment-baseline', 'middle')\n\t.style('font-size', '11px')\n\t.attr('fill', '#696969')\n\t.text(function(d,i){\n\t\tif(d.region==='AM') return 'Americas';\n\t\tif(d.region==='EU') return 'Europe';\n\t\tif(d.region==='AF') return 'Africa';\n\t\tif(d.region==='ME') return 'Middle East and North Africa';\n\t\tif(d.region==='AP') return 'Asia-Pacific';\n\t}).style('text-anchor', 'end');\n\n    labelWidth = rows.node().getBBox().width + margin.left;\n\tlabel.attr('x', labelWidth+89);\n\tlabelWidth = labelWidth + 94;\n\n    var rowBg = rows.append('rect')\n\t.attr('y', 0)\n\t.attr('x', 0)\n\t.attr('width', labelWidth)\n\t.attr('height', rowHeight-2)\n\t.style('opacity', 0)\n    .attr('fill', 'grey')\n\t.style('cursor', 'pointer')\n\t.attr('class', function(d,i){ return 'bar-bg-'+d.region })\n\t.on('mouseover', function(d){\n\t\td3.select(this).style('opacity', 0.1);\n        console.log(d);\n\t})\n\t.on('mouseout', function(){\n\t\td3.select(this).style('opacity', 0)\n\t})\n\t.on('click', function(d,i){\n        console.log('filter');\n    });\n\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);// severity/reliability x xcale\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);// severity/reliability x xcale\n\n    // const xScaleVaccines = d3.scaleLinear()\n\t// .range([labelWidth, rcSize.width - margin.right])\n\t// .domain([0, maxDeaths]);// severity/reliability x xcale\n\n    var bars = rows.append('rect')\n    .attr('id', function(d,i){\n        return 'bar-'+d.region;\n    })\n    .attr('class', 'region-bar')\n    .attr('width', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths);\n        // if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines);\n    })\n    .attr('x', labelWidth)\n    .style('outline', 'none')\n    .style('cursor', 'pointer')\n    .attr('y', rowHeight*barSpacing - 1)\n    .attr('height', rowHeight-((rowHeight*barSpacing)*2))\n    .style('fill', function(d){\n        return colors.regions[d.region]\n    })\n    .on('click', function(d,i){\n        var id = (d3.select(this).attr('id'));\n    });\n\n    var dataLabel = rows.append('text')\n\t.text(function(d){\n        if(options.region_chart_toggle == 'cases') return addCommas(d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return addCommas(d.cumulative_deaths);\n        // if(options.region_chart_toggle == 'vaccines') return addCommas(d.cumulative_vaccines);\n    })\n\t.attr('id', function(d,i){\n\t\treturn 'data-label'+d.region;\n\t})\n\t.attr('class', 'data-label')\n\t.attr('y', rowHeight/2)\n\t.style('alignment-baseline', 'middle')\n\t.style('text-anchor', 'start')\n\t.attr('x', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases)+labelWidth+5;\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths)+labelWidth+5;\n        // if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;\n    })\n\t.style('fill', '#696969')\n\t.style('font-weight', 'normal')\n\t.style('font-size', '10px');\n\n}\n\nexport function updateRegionchart(options) {\n\n    d3.selectAll('.region-bar')\n    .transition().duration(500)\n    .attr('width', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths);\n        // if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines);\n    })\n\n    d3.selectAll('.data-label')\n    .transition()\n      .duration(500)\n      .tween(\"text\", function(d) {\n        var end = 0;\n        if(options.region_chart_toggle == 'cases') end = (d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') end = (d.cumulative_deaths);  \n        var i = d3.interpolate(Math.floor((Math.random() * 112346) + 92345), end);\n        return function(t) {\n          d3.select(this).text(addCommas(Math.round(i(t))));\n        };\n      })\n\t.attr('x', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases)+labelWidth+5;\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths)+labelWidth+5;\n        // if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;\n    })\n\n}\n\nexport default drawRegionchart;\n"]},"metadata":{},"sourceType":"module"}