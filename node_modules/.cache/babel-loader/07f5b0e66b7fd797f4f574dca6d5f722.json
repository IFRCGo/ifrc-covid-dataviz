{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { filter } from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { addCommas } from './HelperFunctions';\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\nlet map;\nexport function createMap(data, options, filter) {\n  console.log('createMap');\n  map = new mapboxgl.Map({\n    container: 'map_div',\n    // container ID\n    style: 'mapbox://styles/go-ifrc/ck9tz6f150ub11ip8j97wrsww',\n    // style URL\n    center: [8, 22],\n    // starting position [lng, lat]\n    zoom: -0.01 // starting zoom\n\n  });\n  map.setRenderWorldCopies(false);\n  map.addControl(new mapboxgl.NavigationControl());\n  var container = map.getCanvasContainer();\n  var svg = d3.select(container).append(\"svg\").attr('id', 'mapoverlay').attr(\"width\", \"100%\").attr(\"height\", \"24vw\").style(\"position\", \"absolute\").style(\"z-index\", 2);\n  var mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'none');\n\n  function project(d) {\n    return map.project(new mapboxgl.LngLat(d[0], d[1]));\n  } // svg.on('mousemove', function(event){\n  //     console.log(event);\n  // })\n\n\n  var dots = svg.selectAll(\".country-map\").data(data.world).enter().append(\"circle\").attr('class', 'country-map').attr('id', function (d, i) {\n    return 'country-map-' + d.iso2;\n  }).attr(\"r\", 0).on('mousemove', function (event, d) {\n    // console.log(data);\n    // console.log(data.equity_data);\n    var id = d3.select(this).attr('id').substr(12, 2);\n    console.log(id);\n    var countryName = data.equity_data.filter(d => d.country_iso2 == id)[0].country_name;\n    mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n\n    if (options.map_toggle == 'cases') {\n      var country = data.country.filter(d => d[1].country_code == id)[0];\n      if (country.length == 0) return false;\n      console.log(country);\n      mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_cases) + ' cases');\n    }\n\n    var scale = window.innerWidth / 1329;\n    mapTooltip.attr('display', 'inline').attr('transform', 'translate(' + project([d.lng, d.lat]).x + ',' + project([d.lng, d.lat]).y + ')scale(' + scale + ')');\n    var heightOffset = mapTooltip.node().getBBox();\n    mapTooltip.attr('transform', 'translate(' + (project([d.lng, d.lat]).x + 3) + ',' + (project([d.lng, d.lat]).y + 2 - heightOffset.height / 2) + ')scale(' + scale + ')');\n  }).on('mouseout', function (event) {\n    console.log(event);\n    if (event.toElement == 'tspan') return false;\n    mapTooltip.attr('display', 'none');\n  });\n  var maxValue = d3.max(data.country, function (d, i) {\n    return d[1].cumulative_cases;\n  });\n  var rScale = d3.scalePow().exponent(0.5).domain([0, maxValue]).range([0, 15]);\n  data.country.forEach(function (d, i) {\n    d3.select('#country-' + d[0]).attr('r', rScale(d[1].cumulative_cases)).attr('data-name', d[1].country);\n  });\n  document.getElementById(\"mapoverlay\").appendChild(d3.select('#map_tooltip').node());\n\n  function render() {\n    dots.attr(\"cx\", function (d) {\n      return project([d.lng, d.lat]).x;\n    }).attr(\"cy\", function (d) {\n      return project([d.lng, d.lat]).y;\n    });\n  }\n\n  map.on(\"viewreset\", render);\n  map.on(\"move\", render);\n  map.on(\"moveend\", render);\n  render(); // Call once to render\n  // map.on('mousemove', function (e) {\n  //     var features = map.queryRenderedFeatures(e.point);\n  //     var displayProperties = [\n  //     'type',\n  //     'properties',\n  //     'id',\n  //     'layer',\n  //     'source',\n  //     'sourceLayer',\n  //     'state'\n  //     ];\n  //     var displayFeatures = features.map(function (feat) {\n  //     var displayFeat = {};\n  //     displayProperties.forEach(function (prop) {\n  //     displayFeat[prop] = feat[prop];\n  //     });\n  //     return displayFeat;\n  //     });\n  //     console.log(JSON.stringify(\n  //     displayFeatures,\n  //     null,\n  //     2\n  //     ))\n  //     })\n\n  updateMap(data, options);\n}\nexport function updateMap(data, options) {\n  var duration = 1000;\n  var delay = 10;\n\n  if (options.map_toggle == 'bi-weekly-change') {\n    var maxValue = d3.max(data.country, function (d, i) {\n      return d[1].percent_change;\n    });\n    var rScale = d3.scalePow().exponent(0.5).domain([0, 1, 1, maxValue]).range([7, 0, 0, 20]);\n    d3.selectAll('.country-map').transition('c').duration(duration / 1.7).attr('r', 0);\n    data.country.forEach(function (d, i) {\n      d3.select('#country-map-' + d[0]).transition('c').duration(duration).delay(delay).attr('r', rScale(d[1].percent_change)).style('stroke', function () {\n        // if(d[1].percent_change>1){ return '#E02225'} else { return '#1F558C'}\n        return '#FFF';\n      }).style('fill', function () {\n        if (d[1].percent_change > 1) {\n          return '#E02225';\n        } else {\n          return '#1F558C';\n        }\n      });\n    });\n  }\n\n  if (options.map_toggle == 'cases') {\n    var maxValue = d3.max(data.country, function (d, i) {\n      return d[1].cumulative_cases;\n    });\n    var rScale = d3.scalePow().exponent(0.5).domain([0, maxValue]).range([0, 20]);\n    d3.selectAll('.country-map').transition('c').duration(duration / 1.7).attr('r', 0);\n    data.country.forEach(function (d, i) {\n      d3.select('#country-map-' + d[0]).transition('c').duration(duration).delay(delay).attr('r', rScale(d[1].cumulative_cases)).style('fill', '#E02225').style('stroke', '#FFF');\n    });\n  }\n\n  if (options.map_toggle == 'deaths') {\n    var maxValue = d3.max(data.country, function (d, i) {\n      return d[1].cumulative_deaths;\n    });\n    var rScale = d3.scalePow().exponent(0.5).domain([0, maxValue]).range([0, 20]);\n    d3.selectAll('.country-map').transition('c').duration(duration / 1.7).attr('r', 0);\n    data.country.forEach(function (d, i) {\n      d3.select('#country-map-' + d[0]).transition('c').duration(duration).delay(delay).attr('r', rScale(d[1].cumulative_deaths)).style('fill', '#E02225').style('stroke', '#FFF');\n    });\n  }\n\n  if (options.map_toggle == 'percent-fully-vaccinated') {\n    var maxValue = d3.max(data.vGroup, function (d, i) {\n      return parseFloat(d[1][0].people_fully_vaccinated_per_hundred) / 100;\n    });\n    var rScale = d3.scalePow().exponent(0.5).domain([0, 1]).range([0, 20]).clamp(true);\n    d3.selectAll('.country-map').transition('c').duration(duration / 1.7).attr('r', 0);\n    data.vGroup.forEach(function (d, i) {\n      var peoplevaccinated = parseFloat(d[1][0].people_fully_vaccinated_per_hundred) / 100;\n      if (isNaN(peoplevaccinated)) peoplevaccinated = 0;\n      d3.select('#country-map-' + d[1][0].country_code).transition('c').duration(duration).delay(delay).attr('r', rScale(peoplevaccinated)).style('stroke', '#FFF').style('fill', function () {\n        if (peoplevaccinated <= 1) {\n          return '#E02225';\n        } else {\n          return '#1F558C';\n        }\n      });\n    });\n  }\n\n  if (options.map_toggle == 'percent-vaccine-acceptance') {// var maxValue = d3.max(data.country, function(d,i){\n    //     return d[1].cumulative_deaths;\n    // })\n    // var rScale = d3.scalePow().exponent(0.5)\n    // .domain([0, maxValue])\n    // .range([0, 20]);\n    // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n    // data.country.forEach(function(d,i){\n    //     d3.select('#country-map-'+d[0])\n    //     .transition('c').duration(duration).delay(delay)\n    //     .attr('r', rScale(d[1].cumulative_deaths))\n    //     .style('fill', '#E02225')\n    //     .style('stroke', '#FFF');\n    // })\n  }\n}\nexport default createMap;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Map.js"],"names":["d3","moment","colors","filter","mapboxgl","addCommas","accessToken","map","createMap","data","options","console","log","Map","container","style","center","zoom","setRenderWorldCopies","addControl","NavigationControl","getCanvasContainer","svg","select","append","attr","mapTooltip","project","d","LngLat","dots","selectAll","world","enter","i","iso2","on","event","id","substr","countryName","equity_data","country_iso2","country_name","text","map_toggle","country","country_code","length","cumulative_cases","scale","window","innerWidth","lng","lat","x","y","heightOffset","node","getBBox","height","toElement","maxValue","max","rScale","scalePow","exponent","domain","range","forEach","document","getElementById","appendChild","render","updateMap","duration","delay","percent_change","transition","cumulative_deaths","vGroup","parseFloat","people_fully_vaccinated_per_hundred","clamp","peoplevaccinated","isNaN"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {filter} from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {addCommas} from './HelperFunctions';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\n\nlet map;\nexport function createMap(data, options, filter) {\n    console.log('createMap');\n\n    map = new mapboxgl.Map({\n        container: 'map_div', // container ID\n        style: 'mapbox://styles/go-ifrc/ck9tz6f150ub11ip8j97wrsww', // style URL\n        center: [8, 22], // starting position [lng, lat]\n        zoom: -0.01 // starting zoom\n    });\n\n    map.setRenderWorldCopies(false);\n    map.addControl(new mapboxgl.NavigationControl());\n    \n    var container = map.getCanvasContainer();\n\n    var svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr('id', 'mapoverlay')\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"24vw\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", 2);\n\n    var mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'none');\n\n    function project(d) {\n        return map.project(new mapboxgl.LngLat(d[0], d[1]));\n    }\n\n    // svg.on('mousemove', function(event){\n    //     console.log(event);\n    // })\n\n    var dots = svg\n    .selectAll(\".country-map\")\n    .data(data.world)\n    .enter()\n    .append(\"circle\")\n    .attr('class', 'country-map')\n    .attr('id', function(d,i){ return 'country-map-'+d.iso2 })\n    .attr(\"r\", 0)\n    .on('mousemove', function(event, d){\n        // console.log(data);\n        // console.log(data.equity_data);\n        var id = d3.select(this).attr('id').substr(12,2)\n        console.log(id);\n        var countryName = data.equity_data.filter(d=>d.country_iso2 == id)[0].country_name;\n        mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n\n        if(options.map_toggle=='cases'){\n            var country = data.country.filter(d=>d[1].country_code == id)[0];\n            if(country.length==0) return false;\n            console.log(country);\n            mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_cases)+' cases');\n        }\n\n        var scale = window.innerWidth/1329;\n        mapTooltip\n        .attr('display', 'inline')\n        .attr('transform', 'translate('+project(([d.lng, d.lat])).x+','+project(([d.lng, d.lat])).y+')scale('+scale+')');\n\n        var heightOffset = mapTooltip.node().getBBox();\n        mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\n\n    }).on('mouseout', function(event){\n        console.log(event);\n        if(event.toElement=='tspan') return false;\n        mapTooltip.attr('display', 'none');\n    })\n\n    var maxValue = d3.max(data.country, function(d,i){\n        return d[1].cumulative_cases;\n    })\n\n    var rScale = d3.scalePow().exponent(0.5)\n      .domain([0, maxValue])\n      .range([0, 15]);\n\n    data.country.forEach(function(d,i){\n        d3.select('#country-'+d[0]).attr('r', rScale(d[1].cumulative_cases))\n        .attr('data-name', d[1].country)\n    })\n    \n    document.getElementById(\"mapoverlay\").appendChild(d3.select('#map_tooltip').node());\n\n\n    function render() {\n        dots\n          .attr(\"cx\", function(d) {\n            return project(([d.lng, d.lat])).x;\n          })\n          .attr(\"cy\", function(d) {\n            return project(([d.lng, d.lat])).y;\n          });\n      }\n\n    map.on(\"viewreset\", render);\n    map.on(\"move\", render);\n    map.on(\"moveend\", render);\n    render(); // Call once to render\n\n    // map.on('mousemove', function (e) {\n    //     var features = map.queryRenderedFeatures(e.point);\n         \n    //     var displayProperties = [\n    //     'type',\n    //     'properties',\n    //     'id',\n    //     'layer',\n    //     'source',\n    //     'sourceLayer',\n    //     'state'\n    //     ];\n         \n    //     var displayFeatures = features.map(function (feat) {\n    //     var displayFeat = {};\n    //     displayProperties.forEach(function (prop) {\n    //     displayFeat[prop] = feat[prop];\n    //     });\n    //     return displayFeat;\n    //     });\n         \n    //     console.log(JSON.stringify(\n    //     displayFeatures,\n    //     null,\n    //     2\n    //     ))\n    //     })\n    updateMap(data, options) ;\n}\n\nexport function updateMap(data, options) {\n   \n    var duration = 1000;\n    var delay = 10;\n\n    if(options.map_toggle == 'bi-weekly-change'){\n        \n        var maxValue = d3.max(data.country, function(d,i){\n            return d[1].percent_change;\n        })\n\n        var rScale = d3.scalePow().exponent(0.5)\n        .domain([0, 1,1, maxValue])\n        .range([7, 0,0, 20]);\n\n        d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        data.country.forEach(function(d,i){\n            d3.select('#country-map-'+d[0])\n            .transition('c').duration(duration).delay(delay)\n            .attr('r', rScale(d[1].percent_change))\n            .style('stroke', function(){\n                // if(d[1].percent_change>1){ return '#E02225'} else { return '#1F558C'}\n                return '#FFF'\n            }).style('fill', function(){\n                if(d[1].percent_change>1){ return '#E02225'} else { return '#1F558C'}\n            })\n        })\n\n    }\n\n    if(options.map_toggle == 'cases'){\n        var maxValue = d3.max(data.country, function(d,i){\n            return d[1].cumulative_cases;\n        })\n\n        var rScale = d3.scalePow().exponent(0.5)\n        .domain([0, maxValue])\n        .range([0, 20]);\n\n        d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        data.country.forEach(function(d,i){\n            d3.select('#country-map-'+d[0])\n            .transition('c').duration(duration).delay(delay)\n            .attr('r', rScale(d[1].cumulative_cases))\n            .style('fill', '#E02225')\n            .style('stroke', '#FFF');\n        })\n\n    }\n    \n    if(options.map_toggle == 'deaths'){\n        var maxValue = d3.max(data.country, function(d,i){\n            return d[1].cumulative_deaths;\n        })\n\n        var rScale = d3.scalePow().exponent(0.5)\n        .domain([0, maxValue])\n        .range([0, 20]);\n\n        d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        data.country.forEach(function(d,i){\n            d3.select('#country-map-'+d[0])\n            .transition('c').duration(duration).delay(delay)\n            .attr('r', rScale(d[1].cumulative_deaths))\n            .style('fill', '#E02225')\n            .style('stroke', '#FFF');\n        })\n\n    }\n\n    if(options.map_toggle == 'percent-fully-vaccinated'){\n        var maxValue = d3.max(data.vGroup, function(d,i){\n            return parseFloat(d[1][0].people_fully_vaccinated_per_hundred)/100;\n        })\n\n        var rScale = d3.scalePow().exponent(0.5)\n        .domain([0, 1])\n        .range([0, 20])\n        .clamp(true);\n\n        d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        data.vGroup.forEach(function(d,i){\n            var peoplevaccinated = parseFloat(d[1][0].people_fully_vaccinated_per_hundred)/100;\n            if(isNaN(peoplevaccinated)) peoplevaccinated = 0;\n            d3.select('#country-map-'+d[1][0].country_code)\n            .transition('c').duration(duration).delay(delay)\n            .attr('r', rScale(peoplevaccinated))\n            .style('stroke', '#FFF')\n            .style('fill', function(){\n                if(peoplevaccinated<=1){ return '#E02225'} else { return '#1F558C'}\n            })\n        })\n\n    }\n\n    if(options.map_toggle == 'percent-vaccine-acceptance'){\n        // var maxValue = d3.max(data.country, function(d,i){\n        //     return d[1].cumulative_deaths;\n        // })\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([0, maxValue])\n        // .range([0, 20]);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].cumulative_deaths))\n        //     .style('fill', '#E02225')\n        //     .style('stroke', '#FFF');\n        // })\n\n    }\n\n\n\n}\n\n\n\nexport default createMap;\n"]},"metadata":{},"sourceType":"module"}