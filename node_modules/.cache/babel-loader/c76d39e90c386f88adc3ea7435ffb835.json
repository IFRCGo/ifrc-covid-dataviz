{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { filter } from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\nexport function createMap(data, options, filter) {\n  console.log('createMap');\n  var map = new mapboxgl.Map({\n    container: 'map_div',\n    // container ID\n    style: 'mapbox://styles/go-ifrc/ck9tz6f150ub11ip8j97wrsww',\n    // style URL\n    center: [8, 22],\n    // starting position [lng, lat]\n    zoom: -0.01 // starting zoom\n\n  });\n  map.setRenderWorldCopies(false);\n  map.addControl(new mapboxgl.NavigationControl());\n  map.on('mousemove', function (e) {\n    var features = map.queryRenderedFeatures(e.point); // Limit the number of properties we're displaying for\n    // legibility and performance\n\n    map.setLayerZoomRange('countries', -1, 23);\n    var displayProperties = ['type', 'properties', 'id', 'layer', 'source', 'sourceLayer', 'state'];\n    var displayFeatures = features.map(function (feat) {\n      var displayFeat = {};\n      displayProperties.forEach(function (prop) {\n        displayFeat[prop] = feat[prop];\n      });\n      return displayFeat;\n    });\n    console.log(JSON.stringify(displayFeatures, null, 2));\n  });\n}\nexport default createMap;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Map.js"],"names":["d3","moment","colors","filter","mapboxgl","accessToken","createMap","data","options","console","log","map","Map","container","style","center","zoom","setRenderWorldCopies","addControl","NavigationControl","on","e","features","queryRenderedFeatures","point","setLayerZoomRange","displayProperties","displayFeatures","feat","displayFeat","forEach","prop","JSON","stringify"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,QAAqB,OAArB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;AACnC,OAAO,8BAAP;AAEAA,QAAQ,CAACC,WAAT,GAAuB,2FAAvB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkCL,MAAlC,EAA0C;AAC7CM,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,MAAIC,GAAG,GAAG,IAAIP,QAAQ,CAACQ,GAAb,CAAiB;AACvBC,IAAAA,SAAS,EAAE,SADY;AACD;AACtBC,IAAAA,KAAK,EAAE,mDAFgB;AAEqC;AAC5DC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAHe;AAGN;AACjBC,IAAAA,IAAI,EAAE,CAAC,IAJgB,CAIX;;AAJW,GAAjB,CAAV;AAOAL,EAAAA,GAAG,CAACM,oBAAJ,CAAyB,KAAzB;AACAN,EAAAA,GAAG,CAACO,UAAJ,CAAe,IAAId,QAAQ,CAACe,iBAAb,EAAf;AAEAR,EAAAA,GAAG,CAACS,EAAJ,CAAO,WAAP,EAAoB,UAAUC,CAAV,EAAa;AAC7B,QAAIC,QAAQ,GAAGX,GAAG,CAACY,qBAAJ,CAA0BF,CAAC,CAACG,KAA5B,CAAf,CAD6B,CAG7B;AACA;;AAEAb,IAAAA,GAAG,CAACc,iBAAJ,CAAsB,WAAtB,EAAmC,CAAC,CAApC,EAAuC,EAAvC;AAEA,QAAIC,iBAAiB,GAAG,CACxB,MADwB,EAExB,YAFwB,EAGxB,IAHwB,EAIxB,OAJwB,EAKxB,QALwB,EAMxB,aANwB,EAOxB,OAPwB,CAAxB;AAUA,QAAIC,eAAe,GAAGL,QAAQ,CAACX,GAAT,CAAa,UAAUiB,IAAV,EAAgB;AACnD,UAAIC,WAAW,GAAG,EAAlB;AACAH,MAAAA,iBAAiB,CAACI,OAAlB,CAA0B,UAAUC,IAAV,EAAgB;AAC1CF,QAAAA,WAAW,CAACE,IAAD,CAAX,GAAoBH,IAAI,CAACG,IAAD,CAAxB;AACC,OAFD;AAGA,aAAOF,WAAP;AACC,KANqB,CAAtB;AAQApB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,IAAI,CAACC,SAAL,CACZN,eADY,EAEZ,IAFY,EAGZ,CAHY,CAAZ;AAKC,GA/BL;AAgCH;AAED,eAAerB,SAAf","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {filter} from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\n\nexport function createMap(data, options, filter) {\n    console.log('createMap');\n\n    var map = new mapboxgl.Map({\n        container: 'map_div', // container ID\n        style: 'mapbox://styles/go-ifrc/ck9tz6f150ub11ip8j97wrsww', // style URL\n        center: [8, 22], // starting position [lng, lat]\n        zoom: -0.01 // starting zoom\n    });\n\n    map.setRenderWorldCopies(false);\n    map.addControl(new mapboxgl.NavigationControl());\n\n    map.on('mousemove', function (e) {\n        var features = map.queryRenderedFeatures(e.point);\n         \n        // Limit the number of properties we're displaying for\n        // legibility and performance\n\n        map.setLayerZoomRange('countries', -1, 23);\n\n        var displayProperties = [\n        'type',\n        'properties',\n        'id',\n        'layer',\n        'source',\n        'sourceLayer',\n        'state'\n        ];\n         \n        var displayFeatures = features.map(function (feat) {\n        var displayFeat = {};\n        displayProperties.forEach(function (prop) {\n        displayFeat[prop] = feat[prop];\n        });\n        return displayFeat;\n        });\n         \n        console.log(JSON.stringify(\n        displayFeatures,\n        null,\n        2\n        ))\n        })\n}\n\nexport default createMap;\n"]},"metadata":{},"sourceType":"module"}