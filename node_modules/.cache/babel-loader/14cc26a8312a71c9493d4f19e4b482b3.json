{"ast":null,"code":"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport { addCommas } from './HelperFunctions';\nimport { filter } from './App';\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases;\nlet xScaleDeaths;\nlet xScaleVaccines;\nlet groupedData = [];\nlet labelWidth;\nconst regions = ['AF', 'ME', 'AP', 'EU', 'AM', 'OTH'];\nexport function drawRegionchart(data, options, filter) {\n  const margin = {\n    left: 20,\n    top: 0,\n    right: 58\n  };\n  const barSpacing = 0.1;\n  regions.forEach(function (d, i) {\n    if (d != 'OTH') // remove OTH\n      groupedData.push({\n        region: d,\n        cumulative_cases: 0,\n        cumulative_deaths: 0,\n        cumulative_vaccines: 0\n      });\n  });\n  data.who_data.forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (dd == d.ifrc_region && dd != 'OTH') {\n        // remove OTH\n        groupedData[ii].cumulative_cases += d.new_cases;\n        groupedData[ii].cumulative_deaths += d.new_deaths;\n      }\n    });\n  });\n  maxCases = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  maxDeaths = d3.max(groupedData, function (d, i) {\n    return d.cumulative_deaths;\n  }); // vaccinations max date records\n\n  var vGroup = d3.flatGroup(data.vaccines_data_cumulative, d => d.date);\n  var vacGrouped = vGroup[vGroup.length - 1];\n  var vData = [];\n  vacGrouped[1].forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (dd == d.ifrc_region && dd != 'OTH') {\n        // remove OTH\n        groupedData[ii].cumulative_vaccines += d.total_vaccinations;\n      }\n    });\n  });\n  groupedData.sort(function (a, b) {\n    if (options.region_chart_toggle == 'cases') return b.cumulative_cases - a.cumulative_cases;\n    if (options.region_chart_toggle == 'deaths') return b.cumulative_deaths - a.cumulative_deaths;\n    if (options.region_chart_toggle == 'vaccines') return b.cumulative_vaccines - a.cumulative_vaccines;\n  });\n  maxVaccinations = d3.max(groupedData, function (d, i) {\n    return d.cumulative_vaccines;\n  });\n  xScaleCases = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxCases]); // severity/reliability x xcale\n\n  xScaleDeaths = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxDeaths]); // severity/reliability x xcale\n\n  xScaleVaccines = d3.scaleLinear().range([labelWidth, rcSize.width - margin.right - labelWidth]).domain([0, maxVaccinations]); // severity/reliability x xcale\n  // append region chart containerg\n\n  const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n  const rcSize = {\n    x: regionChartContainer.attr('x'),\n    y: regionChartContainer.attr('y'),\n    width: regionChartContainer.attr('width'),\n    height: regionChartContainer.attr('height')\n  };\n  const svg = d3.select('#layout').append('g').attr('transform', 'translate(' + rcSize.x + ', ' + rcSize.y + ')').attr('id', 'region_chart');\n  var rowHeight = rcSize.height / groupedData.length - 1; // remove OTH\n\n  var rows = svg.selectAll('.bar-row').data(groupedData).enter().append('g').attr('class', 'bar-row').attr('transform', function (d, i) {\n    return 'translate(0,' + (i * rowHeight + margin.top) + ')';\n  });\n  var label = rows.append('text').attr('y', rowHeight / 2).attr('x', margin.left - 5).attr('class', function (d, i) {\n    return 'bar-labels';\n  }).style('alignment-baseline', 'middle').style('font-size', '11px').attr('fill', '#696969').text(function (d, i) {\n    if (d.region === 'AM') return 'Americas';\n    if (d.region === 'EU') return 'Europe';\n    if (d.region === 'AF') return 'Africa';\n    if (d.region === 'ME') return 'Middle East and North Africa';\n    if (d.region === 'AP') return 'Asia-Pacific';\n  }).style('text-anchor', 'end');\n  labelWidth = rows.node().getBBox().width + margin.left;\n  label.attr('x', labelWidth + 89);\n  labelWidth = labelWidth + 94;\n  d3.selectAll('.timeBar').attr('opacity', 1);\n  var rowBg = rows.append('rect').attr('y', 0).attr('x', 0).attr('width', labelWidth).attr('height', rowHeight - 2).style('opacity', 0).attr('fill', 'grey').style('cursor', 'pointer').attr('class', function (d, i) {\n    return 'bar-bg-' + d.region;\n  }).attr('data-id', function (d, i) {\n    return d.region;\n  }).on('mouseover', function (d) {\n    d3.select(this).style('opacity', 0.1);\n    var dat = d3.select(this.parentNode).datum();\n    d3.selectAll('.timeBar:not(.time_' + dat.region).transition().duration(500).attr('opacity', 0.3);\n    d3.selectAll('.time_' + dat.region).attr('opacity', 1);\n  }).on('mouseout', function () {\n    d3.select(this).style('opacity', 0);\n    d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n  }).on('click', function (d, i) {\n    var t = d3.select(this).attr('data-id');\n    filter([t], 'regionchart');\n  });\n  var bars = rows.append('rect').attr('id', function (d, i) {\n    return 'bar-' + d.region;\n  }).attr('data-id', function (d, i) {\n    return d.region;\n  }).attr('class', 'region-bar').attr('width', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths);\n    if (options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines);\n  }).attr('x', labelWidth).style('outline', 'none').style('cursor', 'pointer').attr('y', rowHeight * barSpacing - 1).attr('height', rowHeight - rowHeight * barSpacing * 2).style('fill', function (d) {\n    return colors.regions[d.region];\n  }).attr('opacity', 1).on('click', function (d, i) {\n    var t = d3.select(this).attr('data-id');\n    filter([t], 'regionchart');\n  }).on('mouseover', function (d) {\n    var dat = d3.select(this.parentNode).datum();\n    d3.selectAll('.timeBar:not(.time_' + dat.region).transition().duration(500).attr('opacity', 0.3); // d3.selectAll('.time_'+dat.region).attr('opacity', 1);\n  }).on('mouseout', function () {\n    d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n  });\n  var dataLabel = rows.append('text').text(function (d) {\n    if (options.region_chart_toggle == 'cases') return addCommas(d.cumulative_cases);\n    if (options.region_chart_toggle == 'deaths') return addCommas(d.cumulative_deaths);\n    if (options.region_chart_toggle == 'vaccines') return addCommas(d.cumulative_vaccines);\n  }).attr('id', function (d, i) {\n    return 'data-label' + d.region;\n  }).attr('class', 'data-label').attr('y', rowHeight / 2).style('alignment-baseline', 'middle').style('text-anchor', 'start').attr('x', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases) + labelWidth + 5;\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths) + labelWidth + 5;\n    if (options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines) + labelWidth + 5;\n  }).style('fill', '#696969').style('font-weight', 'normal').style('font-size', '10px');\n}\nexport function updateRegionchart(options, data) {\n  groupedData = [];\n  regions.forEach(function (d, i) {\n    if (d != 'OTH') // remove OTH\n      groupedData.push({\n        region: d,\n        cumulative_cases: 0,\n        cumulative_deaths: 0,\n        cumulative_vaccines: 0\n      });\n  });\n  data.who_data.forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (dd == d.ifrc_region && dd != 'OTH') {\n        // remove OTH\n        groupedData[ii].cumulative_cases += d.new_cases;\n        groupedData[ii].cumulative_deaths += d.new_deaths;\n      }\n    });\n  });\n  maxCases = d3.max(groupedData, function (d, i) {\n    return d.cumulative_cases;\n  });\n  maxDeaths = d3.max(groupedData, function (d, i) {\n    return d.cumulative_deaths;\n  }); // vaccinations max date records\n\n  var vGroup = d3.flatGroup(data.vaccines_data_cumulative, d => d.date);\n  var vacGrouped = vGroup[vGroup.length - 1];\n  var vData = [];\n  vacGrouped[1].forEach(function (d, i) {\n    regions.forEach(function (dd, ii) {\n      if (dd == d.ifrc_region && dd != 'OTH') {\n        // remove OTH\n        groupedData[ii].cumulative_vaccines += d.total_vaccinations;\n      }\n    });\n  });\n  groupedData.sort(function (a, b) {\n    if (options.region_chart_toggle == 'cases') return b.cumulative_cases - a.cumulative_cases;\n    if (options.region_chart_toggle == 'deaths') return b.cumulative_deaths - a.cumulative_deaths;\n    if (options.region_chart_toggle == 'vaccines') return b.cumulative_vaccines - a.cumulative_vaccines;\n  });\n  maxVaccinations = d3.max(groupedData, function (d, i) {\n    return d.cumulative_vaccines;\n  });\n  xScaleCases = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxCases]); // severity/reliability x xcale\n\n  xScaleDeaths = d3.scaleLinear().range([0, rcSize.width - margin.right - labelWidth]).domain([0, maxDeaths]); // severity/reliability x xcale\n\n  xScaleVaccines = d3.scaleLinear().range([labelWidth, rcSize.width - margin.right - labelWidth]).domain([0, maxVaccinations]); // severity/reliability x xcale\n\n  d3.selectAll('.region-bar').transition().duration(500).attr('width', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths);\n    if (options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines);\n  });\n  d3.selectAll('.data-label').transition().duration(500).tween(\"text\", function (d) {\n    var end = 0;\n    if (options.region_chart_toggle == 'cases') end = d.cumulative_cases;\n    if (options.region_chart_toggle == 'deaths') end = d.cumulative_deaths;\n    if (options.region_chart_toggle == 'vaccines') end = d.cumulative_vaccines;\n    var i = d3.interpolate(Math.floor(Math.random() * 112346 + 92345), end);\n    return function (t) {\n      d3.select(this).text(addCommas(Math.round(i(t))));\n    };\n  }).attr('x', function (d, i) {\n    if (options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases) + labelWidth + 5;\n    if (options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths) + labelWidth + 5;\n    if (options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines) + labelWidth + 5;\n  });\n}\nexport default drawRegionchart;","map":{"version":3,"sources":["/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Regionchart.js"],"names":["d3","moment","colors","addCommas","filter","maxCases","maxDeaths","maxVaccinations","xScaleCases","xScaleDeaths","xScaleVaccines","groupedData","labelWidth","regions","drawRegionchart","data","options","margin","left","top","right","barSpacing","forEach","d","i","push","region","cumulative_cases","cumulative_deaths","cumulative_vaccines","who_data","dd","ii","ifrc_region","new_cases","new_deaths","max","vGroup","flatGroup","vaccines_data_cumulative","date","vacGrouped","length","vData","total_vaccinations","sort","a","b","region_chart_toggle","scaleLinear","range","rcSize","width","domain","regionChartContainer","select","attr","x","y","height","svg","append","rowHeight","rows","selectAll","enter","label","style","text","node","getBBox","rowBg","on","dat","parentNode","datum","transition","duration","t","bars","dataLabel","updateRegionchart","tween","end","interpolate","Math","floor","random","round"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases; \nlet xScaleDeaths;\nlet xScaleVaccines;\nlet groupedData = [];\nlet labelWidth; \nconst regions = ['AF', 'ME', 'AP', 'EU', 'AM', 'OTH'];\n\nexport function drawRegionchart(data, options, filter) {\n\n    const margin = { left: 20, top: 0, right: 58 };\n    const barSpacing = 0.1;\n\n    regions.forEach(function(d,i){\n        if(d!='OTH') // remove OTH\n        groupedData.push({ region: d, cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0});\n    })\n\n    data.who_data.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if((dd==d.ifrc_region)&&(dd!='OTH')){ // remove OTH\n                groupedData[ii].cumulative_cases += d.new_cases;\n                groupedData[ii].cumulative_deaths += d.new_deaths;\n            }\n        })\n    });\n\n    maxCases = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    maxDeaths = d3.max(groupedData, function(d,i){\n        return d.cumulative_deaths;\n    })\n\n    // vaccinations max date records\n    var vGroup = d3.flatGroup(data.vaccines_data_cumulative, d => d.date);\n\n    var vacGrouped = vGroup[vGroup.length-1];\n\n    var vData = [];\n    vacGrouped[1].forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if((dd==d.ifrc_region)&&(dd!='OTH')){ // remove OTH\n                groupedData[ii].cumulative_vaccines += d.total_vaccinations;\n            }\n        })\n    });\n\n    groupedData.sort(function(a,b){\n        if(options.region_chart_toggle == 'cases') return (b.cumulative_cases) - (a.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return (b.cumulative_deaths) - (a.cumulative_deaths);\n        if(options.region_chart_toggle == 'vaccines') return (b.cumulative_vaccines) - (a.cumulative_vaccines); \n    });\n\n    maxVaccinations = d3.max(groupedData, function(d,i){\n        return d.cumulative_vaccines;\n    })\n\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);// severity/reliability x xcale\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);// severity/reliability x xcale\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([labelWidth, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);// severity/reliability x xcale\n\n    // append region chart containerg\n    const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n    const rcSize = {\n        x: regionChartContainer.attr('x'), y: regionChartContainer.attr('y'), width: regionChartContainer.attr('width'), height: regionChartContainer.attr('height')\n    }\n\n    const svg = d3.select('#layout').append('g').attr('transform', 'translate('+rcSize.x+', '+rcSize.y+')')\n    .attr('id', 'region_chart');\n\n\tvar rowHeight = rcSize.height/groupedData.length-1; // remove OTH\n\n    var rows = svg.selectAll('.bar-row')\n\t.data(groupedData)\n\t.enter()\n\t.append('g')\n\t.attr('class', 'bar-row')\n\t.attr('transform', function(d,i){\n\t\treturn 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t});\n\n    var label = rows.append('text')\n\t.attr('y', rowHeight/2 )\n    .attr('x', margin.left-5)\n\t.attr('class', function(d,i){ return 'bar-labels' })\n\t.style('alignment-baseline', 'middle')\n\t.style('font-size', '11px')\n\t.attr('fill', '#696969')\n\t.text(function(d,i){\n\t\tif(d.region==='AM') return 'Americas';\n\t\tif(d.region==='EU') return 'Europe';\n\t\tif(d.region==='AF') return 'Africa';\n\t\tif(d.region==='ME') return 'Middle East and North Africa';\n\t\tif(d.region==='AP') return 'Asia-Pacific';\n\t}).style('text-anchor', 'end');\n\n    labelWidth = rows.node().getBBox().width + margin.left;\n\tlabel.attr('x', labelWidth+89);\n\tlabelWidth = labelWidth + 94;\n    d3.selectAll('.timeBar').attr('opacity',1);\n    \n    var rowBg = rows.append('rect')\n\t.attr('y', 0)\n\t.attr('x', 0)\n\t.attr('width', labelWidth)\n\t.attr('height', rowHeight-2)\n\t.style('opacity', 0)\n    .attr('fill', 'grey')\n\t.style('cursor', 'pointer')\n\t.attr('class', function(d,i){ return 'bar-bg-'+d.region })\n\t.attr('data-id', function(d,i){ return d.region })\n\t.on('mouseover', function(d){\n\t\td3.select(this).style('opacity', 0.1);\n        var dat = d3.select(this.parentNode).datum();\n        d3.selectAll('.timeBar:not(.time_'+dat.region).transition().duration(500).attr('opacity', 0.3);\n        d3.selectAll('.time_'+dat.region).attr('opacity', 1);\n\t})\n\t.on('mouseout', function(){\n\t\td3.select(this).style('opacity', 0);\n        d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n\t})\n\t.on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    });\n\n    var bars = rows.append('rect')\n    .attr('id', function(d,i){\n        return 'bar-'+d.region;\n    })\n\t.attr('data-id', function(d,i){ return d.region })\n    .attr('class', 'region-bar')\n    .attr('width', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths);\n        if(options.region_chart_toggle == 'vaccines') return xScaleDeaths(d.cumulative_vaccines);\n    })\n    .attr('x', labelWidth)\n    .style('outline', 'none')\n    .style('cursor', 'pointer')\n    .attr('y', rowHeight*barSpacing - 1)\n    .attr('height', rowHeight-((rowHeight*barSpacing)*2))\n    .style('fill', function(d){\n        return colors.regions[d.region]\n    })\n    .attr('opacity',1)\n    .on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    })\n    .on('mouseover', function(d){\n        var dat = d3.select(this.parentNode).datum();\n        d3.selectAll('.timeBar:not(.time_'+dat.region).transition().duration(500).attr('opacity', 0.3);\n        // d3.selectAll('.time_'+dat.region).attr('opacity', 1);\n\t})\n\t.on('mouseout', function(){\n        d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n\t})\n\n    var dataLabel = rows.append('text')\n\t.text(function(d){\n        if(options.region_chart_toggle == 'cases') return addCommas(d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return addCommas(d.cumulative_deaths);\n        if(options.region_chart_toggle == 'vaccines') return addCommas(d.cumulative_vaccines);\n    })\n\t.attr('id', function(d,i){\n\t\treturn 'data-label'+d.region;\n\t})\n\t.attr('class', 'data-label')\n\t.attr('y', rowHeight/2)\n\t.style('alignment-baseline', 'middle')\n\t.style('text-anchor', 'start')\n\t.attr('x', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases)+labelWidth+5;\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths)+labelWidth+5;\n        if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;\n    })\n\t.style('fill', '#696969')\n\t.style('font-weight', 'normal')\n\t.style('font-size', '10px');\n\n}\n\nexport function updateRegionchart(options,data) {\n    groupedData = [];\n\n    regions.forEach(function(d,i){\n        if(d!='OTH') // remove OTH\n        groupedData.push({ region: d, cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0});\n    })\n\n    data.who_data.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if((dd==d.ifrc_region)&&(dd!='OTH')){ // remove OTH\n                groupedData[ii].cumulative_cases += d.new_cases;\n                groupedData[ii].cumulative_deaths += d.new_deaths;\n            }\n        })\n    });\n\n    maxCases = d3.max(groupedData, function(d,i){\n        return d.cumulative_cases;\n    })\n\n    maxDeaths = d3.max(groupedData, function(d,i){\n        return d.cumulative_deaths;\n    })\n\n    // vaccinations max date records\n    var vGroup = d3.flatGroup(data.vaccines_data_cumulative, d => d.date);\n\n    var vacGrouped = vGroup[vGroup.length-1];\n\n    var vData = [];\n    vacGrouped[1].forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if((dd==d.ifrc_region)&&(dd!='OTH')){ // remove OTH\n                groupedData[ii].cumulative_vaccines += d.total_vaccinations;\n            }\n        })\n    });\n\n    groupedData.sort(function(a,b){\n        if(options.region_chart_toggle == 'cases') return (b.cumulative_cases) - (a.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return (b.cumulative_deaths) - (a.cumulative_deaths);\n        if(options.region_chart_toggle == 'vaccines') return (b.cumulative_vaccines) - (a.cumulative_vaccines); \n    });\n\n    maxVaccinations = d3.max(groupedData, function(d,i){\n        return d.cumulative_vaccines;\n    })\n\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);// severity/reliability x xcale\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);// severity/reliability x xcale\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([labelWidth, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);// severity/reliability x xcale\n    \n    d3.selectAll('.region-bar')\n    .transition().duration(500)\n    .attr('width', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths);\n        if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines);\n    })\n\n    d3.selectAll('.data-label')\n    .transition()\n      .duration(500)\n      .tween(\"text\", function(d) {\n        var end = 0;\n        if(options.region_chart_toggle == 'cases') end = (d.cumulative_cases);\n        if(options.region_chart_toggle == 'deaths') end = (d.cumulative_deaths);  \n        if(options.region_chart_toggle == 'vaccines') end = (d.cumulative_vaccines);  \n        var i = d3.interpolate(Math.floor((Math.random() * 112346) + 92345), end);\n        return function(t) {\n          d3.select(this).text(addCommas(Math.round(i(t))));\n        };\n      })\n\t.attr('x', function(d,i){\n        if(options.region_chart_toggle == 'cases') return xScaleCases(d.cumulative_cases)+labelWidth+5;\n        if(options.region_chart_toggle == 'deaths') return xScaleDeaths(d.cumulative_deaths)+labelWidth+5;\n        if(options.region_chart_toggle == 'vaccines') return xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;\n    })\n\n}\n\nexport default drawRegionchart;\n"]},"metadata":{},"sourceType":"module"}