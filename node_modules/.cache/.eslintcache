[{"/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/index.js":"1","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/App.js":"2","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/reportWebVitals.js":"3","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Layout.js":"4","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Options.js":"5","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Timechart.js":"6","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/ParseData.js":"7","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/colors.js":"8","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Regionchart.js":"9","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/HelperFunctions.js":"10","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Map.js":"11","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Bubblechart.js":"12"},{"size":478,"mtime":1626273620309,"results":"13","hashOfConfig":"14"},{"size":52408,"mtime":1626276666510,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1622653294460,"results":"16","hashOfConfig":"14"},{"size":33357,"mtime":1626174301705,"results":"17","hashOfConfig":"14"},{"size":1004,"mtime":1626170576083,"results":"18","hashOfConfig":"14"},{"size":54428,"mtime":1626171931422,"results":"19","hashOfConfig":"14"},{"size":18558,"mtime":1626089931788,"results":"20","hashOfConfig":"14"},{"size":1680,"mtime":1626171943667,"results":"21","hashOfConfig":"14"},{"size":18502,"mtime":1626172060911,"results":"22","hashOfConfig":"14"},{"size":841,"mtime":1624981016996,"results":"23","hashOfConfig":"14"},{"size":22978,"mtime":1626171638889,"results":"24","hashOfConfig":"14"},{"size":22212,"mtime":1626089814386,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fuol8r",{"filePath":"28","messages":"29","errorCount":0,"warningCount":65,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":80,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":73,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/index.js",[],"/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/App.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport Layout from './Layout';\nimport {drawTimechart, updateTimechart} from './Timechart';\nimport {drawRegionchart, updateRegionchart} from './Regionchart';\nimport {drawBubblechart, updateBubblechart} from './Bubblechart';\nimport options from './Options';\nimport ParseData from './ParseData';\nimport './App.css'\nimport $ from \"jquery\";\nimport select2 from 'select2';\nimport 'select2/dist/css/select2.min.css'\nimport {addCommas, nFormatter} from './HelperFunctions';\nimport { createMap, updateMap } from './Map';\nimport moment from 'moment';\n\n  /* \n  add this attribute to package.json when deploying to github pages.\n \"homepage\": \"https://ifrcgo.github.io/ifrc-covid-dataviz/build\", \n  */\n\nconst equityDataUrl = './data/equity_data.csv';\nconst layoutUrl = \"./images/layout.svg\";\n// const whoDataUrl = \"./data/who_global_cases.csv\";\nconst whoDataUrl = \"https://covid19.who.int/WHO-COVID-19-global-data.csv\";\n// const vaccinesDataUrl = \"./data/owid_vaccinations.csv\";\nconst vaccinesDataUrl = \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv\";\n// const vaccinesWhoDataUrl = \"./data/who_vaccination_data.csv\";\nconst vaccinesWhoDataUrl = \"https://covid19.who.int/who-data/vaccination-data.csv\";\nconst timelineDataUrl = \"./data/timeline.csv\";\nconst selfAssessmentDataUrl = \"./data/self_assessment.csv\";\nconst vaccineAcceptanceDataUrl = \"./data/vaccine_acceptance.csv\";\n\nconst data = {};\n\nconst regionOptions = [\n  { id: 'AM', text: 'Americas' },\n  { id: 'EU', text: 'Europe' },\n  { id: 'AP', text: 'Asia-Pacific' },\n  { id: 'ME', text: 'Middle East and North Africa'},\n  { id: 'AF', text: 'Africa' }\n]\n\nconst countryOptions = [];\n\nfunction App() {\n\n  const [progress, setProgress] = useState(0);\n  const [loaderText, setLoaderText] = useState('Loading SVG layout...');\n\n  async function init(){\n\n    // data source 1: layout.svg\n    const layout = d3.xml(layoutUrl);\n    layout.then(function(d){\n      d3.select('#svg_container').node().append(d3.select(d.documentElement).attr('width', '100%').attr('height', '100%').node());\n      const svg = d3.select('#svg_container svg');\n      svg.select('title').remove();\n      svg.attr('id', 'svg');\n      Layout(svg, options, data, filter, updateTable, updateMap);\n      setProgress(0.1);\n      setLoaderText('Loading equity data CSV...');\n      // data source 2: equity_data.csv\n      const equityData = d3.csv(equityDataUrl);\n      equityData.then(function(d){\n        data.equity_data = d;\n        d.forEach(function(d,i){\n          countryOptions.push({'text': d.country_name, 'id': 'Country-'+d.country_iso2 })\n        })\n        createSelects();\n        setProgress(0.1);\n        setLoaderText('Loading WHO data CSV...');\n        // data source 1: owid_vaccines.csv\n        const vaccinesData = d3.csv(vaccinesDataUrl);\n          vaccinesData.then(function(d){\n            data.vaccines_data = d;\n            setProgress(0.07);\n            setLoaderText('Loading OWID vaccines data...');\n             // data source 2: vaccinesWhoData.csv\n             const vaccinesWhoData = d3.csv(vaccinesWhoDataUrl);\n             vaccinesWhoData.then(function(d){\n               data.vaccines_who_data = d;\n               setProgress(0.15);\n               setLoaderText('Loading OWID vaccines data...');\n                // data source 3: self_assessment.csv\n                const selfAssessmentData = d3.csv(selfAssessmentDataUrl);\n                selfAssessmentData.then(function(d){\n                  data.self_assessment = d;\n                  setProgress(0.22);\n                  setLoaderText('Loading self assessment...');\n                  // data source 4: vaccine_acceptance.csv\n                  const vaccineAcceptanceData = d3.csv(vaccineAcceptanceDataUrl);\n                  vaccineAcceptanceData.then(function(d){\n                    data.vaccine_acceptance = d;\n                    setProgress(0.3);\n                      setLoaderText('Loading vaccine acceptance data...');\n                      // data source 3: timeline.csv\n                      const timelineData = d3.csv(timelineDataUrl);\n                      timelineData.then(function(d){\n                        data.timeline_data = d;\n                        setProgress(0.4);\n                        setLoaderText('Loading WHO daily data...');\n                          // data source 5: who_global_cases.csv\n                          const whoData = d3.csv(whoDataUrl);\n                          whoData.then(function(d){\n                            data.who_data = d;\n                            setProgress(0.8);\n                              setLoaderText('Loading complete.');\n                              setProgress(1);\n                              ParseData(data, options);\n                              createCharts();\n                              d3.select('#loaderDiv').transition().duration(1000).style('opacity', 0).on(\"end\", () => d3.select('#loaderDiv').remove());\n                    });\n                  });\n                });\n              });\n            });\n          });\n      });\n    })\n  }\n  \n  function createCharts(){\n    d3.select('#who_data_date tspan').text(moment(data.max_date).format('ll'));\n    d3.select('#owid_data_date tspan').text(moment(data.max_vaccine_date).format('ll'));\n    drawTimechart(data, options);\n    drawRegionchart(data, options, filter);\n    updateTable(data, options);\n    updateTotals(data, options);\n    createMap(data, options, filter);\n    drawBubblechart(data, options, filter);\n  }\n\n  function filter(id,e){\n    options.page = 1;\n    if(id=='clear'){\n      options.region_filter = [];\n      options.country_filter = [];\n      d3.select('#reset_locations').attr('display', 'none');\n    } \n    if(id=='clear-region'){\n      options.region_filter = [];\n    } \n\n    if(id=='clear-hdi'){\n      options.hdi_filter = [];\n    } \n\n    if(id=='clear-inform'){\n      options.inform_filter = [];\n    } \n\n    if((id.length==1)&&(id[0].length==2)&&(id!='filter')){\n      if(options.region_filter.includes(id[0])){\n        options.region_filter = options.region_filter.filter(d=>d!==id[0])\n      } else {\n        options.region_filter.push(id[0]);\n      }\n    }\n\n    if(options.region_filter.length==5) options.region_filter = [];\n\n    if(options.region_filter.length>0){\n      d3.select('#region_remove_filter').attr('opacity', 1);\n\n      d3.selectAll('.bar-labels').attr('opacity', 0.5);\n      options.region_filter.forEach(function(d,i){\n        d3.select('.bar-label-'+d).attr('opacity', 1);\n      })\n    } else {\n        d3.select('#region_remove_filter').attr('opacity', 0);\n        d3.selectAll('.bar-labels').attr('opacity', 1);\n    }\n\n    data.country = data.original.country;\n\n    var hdi_countries = [];\n    if(options.hdi_filter.length>0){\n      d3.select('#hdi_remove_filter').attr('opacity', 1);\n      data.country.forEach(function(d,i){\n        if(options.hdi_filter.includes(d.hdi_category)){\n          hdi_countries.push(d.country_iso2);\n        }\n      })\n    } else {\n      d3.select('#hdi_remove_filter').attr('opacity', 0);\n    }\n\n    var inform_countries = [];\n    if(options.inform_filter.length>0){\n      d3.select('#inform_remove_filter').attr('opacity', 1);\n      data.country.forEach(function(d,i){\n        if(options.inform_filter.includes(d.inform_severity)){\n          inform_countries.push(d.country_iso2);\n        }\n      })\n    } else {\n      d3.select('#inform_remove_filter').attr('opacity', 0);\n    }\n\n    if((id.length==1)&&(id[0].length>2)){\n      var code = id[0].substring(8);\n      if(options.country_filter.includes(code)){\n        options.country_filter = options.country_filter.filter(d=>d!==code)\n      } else {\n        options.country_filter.push(code);\n      }\n    }\n\n    if((options.region_filter.length==0)&&(options.country_filter.length==0)){\n      d3.select('#reset_locations').attr('display', 'none');\n    }\n\n    var countryIds = [];\n    options.country_filter.forEach(function(d,i){\n      countryIds.push('Country-'+d);\n    })\n\n    if((options.region_filter.length>0)||(options.country_filter.length>0)) {\n        d3.select('#reset_locations').attr('display', 'inline')\n      } else {\n        d3.select('#reset_locations').attr('display', 'none')\n      }\n\n    var mergeFilter = options.region_filter.concat(countryIds);\n    $('#regionSelect').val(mergeFilter)\n    $('#regionSelect').trigger('change');\n\n    // update data\n    data.who_data = data.original.who_data;\n\n    if(inform_countries.length>0){\n      data.who_data = data.who_data.filter(function(d,i){\n        return inform_countries.includes(d.country_code)\n      })\n    }\n    \n    if((options.region_filter.length>0)||(options.country_filter.length>0)||(hdi_countries.length>0)){\n      data.who_data = data.who_data.filter(function(d,i){\n        if(hdi_countries.length>0){\n          if((options.region_filter.length>0)||(options.country_filter.length>0)){\n            return (options.region_filter.includes(d.ifrc_region)||(options.country_filter.includes(d.country_code)))&&(hdi_countries.includes(d.country_code))\n          } else {\n            return (hdi_countries.includes(d.country_code))\n          }\n        } else {\n          return options.region_filter.includes(d.ifrc_region)||(options.country_filter.includes(d.country_code))\n        }\n      })\n    }\n    data.vaccines_data = data.original.vaccines_data;\n\n    if(inform_countries.length>0){\n      data.vaccines_data = data.vaccines_data.filter(function(d,i){\n        return inform_countries.includes(d.country_code)\n      })\n    }\n    if((options.region_filter.length>0)||(options.country_filter.length>0)||(hdi_countries.length>0)){\n      data.vaccines_data = data.vaccines_data.filter(function(d,i){\n        if(hdi_countries.length>0){\n          if((options.region_filter.length>0)||(options.country_filter.length>0)){\n            return (options.region_filter.includes(d.ifrc_region)||(options.country_filter.includes(d.country_code)))&&(hdi_countries.includes(d.country_code))\n          } else {\n            return (hdi_countries.includes(d.country_code))\n          }\n        } else {\n          return options.region_filter.includes(d.ifrc_region)||(options.country_filter.includes(d.country_code))\n        }\n      })\n    }\n\n    if(inform_countries.length>0){\n      data.country = data.country.filter(function(d,i){\n        return inform_countries.includes(d.country_iso2)\n      })\n    } \n    if((options.region_filter.length>0)||(options.country_filter.length>0)||(hdi_countries.length>0)){\n      data.country = data.country.filter(function(d,i){\n        if(hdi_countries.length>0){\n          if((options.region_filter.length>0)||(options.country_filter.length>0)){\n            return (options.region_filter.includes(d.ifrc_region)||(options.country_filter.includes(d.country_iso2)))&&(hdi_countries.includes(d.country_iso2))\n          } else {\n            return (hdi_countries.includes(d.country_iso2))\n          }\n        } else {\n          return options.region_filter.includes(d.ifrc_region)||(options.country_filter.includes(d.country_iso2))\n        }\n      })\n    }\n\n    handleSelectLength();\n    updateCharts();\n\n  }\n  function updateCharts(){\n    updateRegionchart(options,data);\n    updateTable(data, options);\n    updateTotals(data, options);\n    updateTimechart(data, options);\n    updateMap(data,options);\n    updateBubblechart(data, options, filter);\n  }\n\n  function updateTotals(data,options){\n\n    var numCountriesFiltered = data.country.length;\n\n    // total cases\n    var totalCases = d3.sum(data.country, d => d.cumulative_cases);\n    d3.select('#total_cases tspan').transition().duration(500)\n    .textTween(function() {\n      return function(t) {\n        return nFormatter(d3.interpolate(0, totalCases)(t))\n      };\n    });\n\n    // hide bars when zero cases\n    if(totalCases==0){\n      d3.selectAll('.bar_group').attr('opacity',0);\n    } else {\n      d3.selectAll('.bar_group').attr('opacity',1);\n    }\n\n    // total new cases\n    var totalNewCases = totalCases - d3.sum(data.country, d => d.cumulative_cases_7_days);\n    d3.select('#total_new_cases tspan').text('-');\n    d3.select('#total_new_cases tspan').transition().duration(500)\n    .textTween(function() {\n      return function(t) {\n        return nFormatter(d3.interpolate(0, totalNewCases)(t))\n      };\n    })\n\n    // total deaths\n    var totalDeaths = d3.sum(data.country, d => d.cumulative_deaths);\n    d3.select('#total_deaths tspan').transition().duration(500)\n    .textTween(function() {\n      return function(t) {\n        return nFormatter(d3.interpolate(0, totalDeaths)(t))\n      };\n    })\n\n    var totalVaccinations = d3.sum(data.country, d => d.total_vaccinations);\n    d3.select('#total_vaccines tspan').transition().duration(500)\n    .textTween(function() {\n      return function(t) {\n        return nFormatter(d3.interpolate(0, totalVaccinations)(t))\n      };\n    })\n\n    //***************************\n    // vaccies per 100 / acceptance / vaccine types / ns involvemnt\n    //***************************\n    var vaccinesPer100 = {population: 0, vaccine_population: 0};\n    var vaccineAcceptance = {population: 0, vaccine_acceptance_population: 0};\n    var numNsInvolvedCountres = 0;\n    data.vaccine_types = [];\n    data.country.forEach(function(dd,ii){\n      // vaccine per 100 including country population weight\n      if((dd.vaccines_per_100>0)&&(dd.population>0)) {\n        vaccinesPer100.population += dd.population;\n        vaccinesPer100.vaccine_population += dd.population*dd.vaccines_per_100;\n      }\n      // vaccine acceptance including country population weight\n      if(dd.vaccine_acceptance_population>0) {\n        vaccineAcceptance.population += dd.vaccine_acceptance_population;\n        vaccineAcceptance.vaccine_acceptance_population += dd.vaccine_acceptance_population*dd.vaccine_acceptance_percent;\n      }\n      // vacine types data\n      dd.vaccines_used.forEach(function(ddd){\n        if((!data.vaccine_types.includes(ddd))&&(ddd.length>1)&&(!ddd.includes('nactiv'))) data.vaccine_types.push(ddd);\n      })\n      // ns involved countries\n      numNsInvolvedCountres += dd.ns_involvement;\n    });\n\n    // update total doses per 100 total\n    d3.select('#total_vac_100 tspan').text('-');\n    var vaccinePer100ByPopulation = vaccinesPer100.vaccine_population / vaccinesPer100.population;\n    if(vaccinePer100ByPopulation){\n      d3.select('#total_vac_100 tspan').transition().duration(500)\n      .textTween(function() {\n        return function(t) {\n          return (d3.interpolate(0, vaccinePer100ByPopulation)(t).toFixed(1))\n        };\n      })\n    }\n\n    // update vaccine acceptance percent total\n    d3.select('#percent_acceptance tspan').text('-');\n    var vaccineAcceptancePercent = vaccineAcceptance.vaccine_acceptance_population / vaccineAcceptance.population;\n    if(vaccineAcceptancePercent){\n      d3.select('#percent_acceptance tspan').transition().duration(500)\n      .textTween(function() {\n        return function(t) {\n          return Math.round(d3.interpolate(0, Math.round(vaccineAcceptancePercent))(t))+'%';\n        };\n      })\n    }\n\n    // update ns involved total\n    d3.select('#total_ns_countries tspan').transition().duration(500)\n    .textTween(function() {\n      return function(t) {\n        return Math.round(d3.interpolate(0, numNsInvolvedCountres)(t))\n      };\n    })\n\n    // update num types of vaccines total\n    d3.select('#num_vaccines tspan').transition().duration(500)\n    .textTween(function() {\n      return function(t) {\n        return Math.round(d3.interpolate(0, data.vaccine_types.length)(t))\n      };\n    })\n\n    // vaccine type tooltip list\n    d3.selectAll('.vaccine_type').remove();\n    d3.select('#vaccine_tooltip_bg').attr('height', 1);\n    data.vaccine_types.forEach(function(d,i){\n      d3.select(\"#vaccine_tooltip\").append('text')\n      .attr('font-size', 9)\n      .attr('fill', '#000')\n      .attr('class', 'vaccine_type')\n      .append('tspan').text(d)\n      .attr('dx', 6)\n      .attr('dy',((i*1.3)+1.8)+'em')\n    });\n\n    var vtooltipbbox = d3.select('#vaccine_tooltip').node().getBBox();\n    d3.select('#vaccine_tooltip_bg').attr('height', vtooltipbbox.height+6);\n\n    //***************************\n    // update hdi / inform numbers\n    //***************************\n\n    // define empty objects\n    var hdiData = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0};\n    var hdiDataPopulation = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0};\n    var hdiDataVaccines = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0};\n    var hdiContactTracing = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0};\n    var hdiTotalCasesData = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0};\n    var hdiTestingData = {'very-high':[], 'high': [], 'medium': [], 'low': []};\n    var informData = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0, 'no-score': 0};\n    var informDataPopulation = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0, 'no-score': 0};\n    var informDataVaccines = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0, 'no-score': 0};\n    var informContactTracing = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0, 'no-score': 0};\n    var informTotalCasesData = {'very-high':0, 'high': 0, 'medium': 0, 'low': 0, 'no-score': 0};\n    var informTestingData = {'very-high':[], 'high': [], 'medium': [], 'low': [], 'no-score': []};\n    var totalRecordedPopulation = 0;\n\n    if(totalCases>0){\n      data.country.forEach(function(dd,ii){\n          \n          hdiData[dd.hdi_category] += 1;\n          hdiDataPopulation[dd.hdi_category] += parseInt(dd.population);\n          hdiDataVaccines[dd.hdi_category] += parseInt(dd.total_vaccinations)||0;\n\n          informData[dd.inform_severity] += 1;\n          \n          informContactTracing[dd.inform_severity] += dd.contract_tracing;\n          hdiContactTracing[dd.hdi_category] += dd.contract_tracing;\n\n          if((dd.hdi_category=='very-high')||(dd.hdi_category=='high')||(dd.hdi_category=='medium')||(dd.hdi_category=='low'))\n          hdiTestingData[dd.hdi_category].push(dd.avg_tests_per_1000);\n          if((dd.inform_severity=='very-high')||(dd.inform_severity=='high')||(dd.inform_severity=='medium')||(dd.inform_severity=='low')||(dd.inform_severity=='no-score'))\n          informTestingData[dd.inform_severity].push(dd.avg_tests_per_1000);\n\n          informDataPopulation[dd.inform_severity] += parseInt(dd.population);\n          informDataVaccines[dd.inform_severity] += parseInt(dd.total_vaccinations)||0;\n          // hdi index\n          hdiTotalCasesData[dd.hdi_category] += dd.cumulative_cases || 0;\n          informTotalCasesData[dd.inform_severity] += dd.cumulative_cases || 0;\n      })\n    }\n\n    var totalHdiPop = hdiDataPopulation['very-high']+hdiDataPopulation['high']+hdiDataPopulation['medium']+hdiDataPopulation['low'];\n    var totalInformPop = informDataPopulation['very-high']+informDataPopulation['high']+informDataPopulation['medium']+informDataPopulation['low']+informDataPopulation['no-score'];\n\n    // update additional indicators\n    // row 0 percent of vaccinations by hdi\n    d3.select('#hdi-percent-val-very-high tspan').text(parse((hdiTotalCasesData['very-high']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#hdi-percent-bar-very-high').transition().duration(500).attr('width', (parse(hdiTotalCasesData['very-high']/totalCases)*70));\n    d3.select('#hdi-percent-val-high tspan').text(parse((hdiTotalCasesData['high']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#hdi-percent-bar-high').transition().duration(500).attr('width', (parse(hdiTotalCasesData['high']/totalCases)*70));\n    d3.select('#hdi-percent-val-medium tspan').text(parse((hdiTotalCasesData['medium']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#hdi-percent-bar-medium').transition().duration(500).attr('width', (parse(hdiTotalCasesData['medium']/totalCases)*70));\n    d3.select('#hdi-percent-val-low tspan').text(parse((hdiTotalCasesData['low']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#hdi-percent-bar-low').transition().duration(500).attr('width', (parse(hdiTotalCasesData['low']/totalCases)*70));\n\n    d3.select('#inform-percent-val-very-high tspan').text(parse((informTotalCasesData['very-high']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#inform-percent-bar-very-high').transition().duration(500).attr('width', (parse(informTotalCasesData['very-high']/totalCases)*64));\n    d3.select('#inform-percent-val-high tspan').text(parse((informTotalCasesData['high']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#inform-percent-bar-high').transition().duration(500).attr('width', (parse(informTotalCasesData['high']/totalCases)*64));\n    d3.select('#inform-percent-val-medium tspan').text(parse((informTotalCasesData['medium']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#inform-percent-bar-medium').transition().duration(500).attr('width', (parse(informTotalCasesData['medium']/totalCases)*64));\n    d3.select('#inform-percent-val-low tspan').text(parse((informTotalCasesData['low']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#inform-percent-bar-low').transition().duration(500).attr('width', (parse(informTotalCasesData['low']/totalCases)*64));\n    d3.select('#inform-percent-val-no-score tspan').text(parse((informTotalCasesData['no-score']/totalCases)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '16');\n    d3.select('#inform-percent-bar-no-score').transition().duration(500).attr('width', (parse(informTotalCasesData['no-score']/totalCases)*64));\n\n    d3.select('#hdi-toggle-very-high-val tspan').text(hdiData['very-high']).style('text-anchor', 'end').attr('dx', '10');\n    d3.select('#hdi-toggle-high-val tspan').text(hdiData['high']).style('text-anchor', 'end').attr('dx', '10');\n    d3.select('#hdi-toggle-medium-val tspan').text(hdiData['medium']).style('text-anchor', 'end').attr('dx', '10');\n    d3.select('#hdi-toggle-low-val tspan').text(hdiData['low']).style('text-anchor', 'end').attr('dx', '10');\n\n    d3.select('#inform-toggle-very-high-val tspan').text(informData['very-high']).style('text-anchor', 'end').attr('dx', '6');\n    d3.select('#inform-toggle-high-val tspan').text(informData['high']).style('text-anchor', 'end').attr('dx', '10');\n    d3.select('#inform-toggle-medium-val tspan').text(informData['medium']).style('text-anchor', 'end').attr('dx', '9');\n    d3.select('#inform-toggle-low-val tspan').text(informData['low']).style('text-anchor', 'end').attr('dx', '7');\n    d3.select('#inform-toggle-no-score-val tspan').text(informData['no-score']).style('text-anchor', 'end').attr('dx', '13');\n\n    // row 1 percnet of vaccinations by hdi\n    d3.select('#hdi1val-very-high tspan').text(parse((hdiDataPopulation['very-high']/totalHdiPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi1bar-very-high').transition().duration(500).attr('width', (parse(hdiDataPopulation['very-high']/totalHdiPop)*70));\n    d3.select('#hdi1val-high tspan').text(parse((hdiDataPopulation['high']/totalHdiPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi1bar-high').transition().duration(500).attr('width', (parse(hdiDataPopulation['high']/totalHdiPop)*70));\n    d3.select('#hdi1val-medium tspan').text(parse((hdiDataPopulation['medium']/totalHdiPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi1bar-medium').transition().duration(500).attr('width', (parse(hdiDataPopulation['medium']/totalHdiPop)*70));\n    d3.select('#hdi1val-low tspan').text(parse((hdiDataPopulation['low']/totalHdiPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi1bar-low').transition().duration(500).attr('width', (parse(hdiDataPopulation['low']/totalHdiPop)*70));\n\n    d3.select('#inform1val-very-high tspan').text(parse((informDataPopulation['very-high']/totalInformPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform1bar-very-high').transition().duration(500).attr('width', (parse(informDataPopulation['very-high']/totalInformPop)*64));\n    d3.select('#inform1val-high tspan').text(parse((informDataPopulation['high']/totalInformPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform1bar-high').transition().duration(500).attr('width', (parse(informDataPopulation['high']/totalInformPop)*64));\n    d3.select('#inform1val-medium tspan').text(parse((informDataPopulation['medium']/totalInformPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform1bar-medium').transition().duration(500).attr('width', (parse(informDataPopulation['medium']/totalInformPop)*64));\n    d3.select('#inform1val-low tspan').text(parse((informDataPopulation['low']/totalInformPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform1bar-low').transition().duration(500).attr('width', (parse(informDataPopulation['low']/totalInformPop)*64));\n    d3.select('#inform1val-no-score tspan').text(parse((informDataPopulation['no-score']/totalInformPop)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform1bar-no-score').transition().duration(500).attr('width', (parse(informDataPopulation['no-score']/totalInformPop)*64));\n\n    // row 2 percent of total vaccinations\n    d3.select('#hdi2val-very-high tspan').text(parse((hdiDataVaccines['very-high']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi2bar-very-high').transition().duration(500).attr('width', (parse(hdiDataVaccines['very-high']/totalVaccinations)*70));\n    d3.select('#hdi2val-high tspan').text(parse((hdiDataVaccines['high']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi2bar-high').transition().duration(500).attr('width', (parse(hdiDataVaccines['high']/totalVaccinations)*70));\n    d3.select('#hdi2val-medium tspan').text(parse((hdiDataVaccines['medium']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi2bar-medium').transition().duration(500).attr('width', (parse(hdiDataVaccines['medium']/totalVaccinations)*70));\n    d3.select('#hdi2val-low tspan').text(parse((hdiDataVaccines['low']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi2bar-low').transition().duration(500).attr('width', (parse(hdiDataVaccines['low']/totalVaccinations)*70));\n\n    d3.select('#inform2val-very-high tspan').text(parse((informDataVaccines['very-high']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform2bar-very-high').transition().duration(500).attr('width', (parse(informDataVaccines['very-high']/totalVaccinations)*64));\n    d3.select('#inform2val-high tspan').text(parse((informDataVaccines['high']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform2bar-high').transition().duration(500).attr('width', (parse(informDataVaccines['high']/totalVaccinations)*64));\n    d3.select('#inform2val-medium tspan').text(parse((informDataVaccines['medium']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform2bar-medium').transition().duration(500).attr('width', (parse(informDataVaccines['medium']/totalVaccinations)*64));\n    d3.select('#inform2val-low tspan').text(parse((informDataVaccines['low']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform2bar-low').transition().duration(500).attr('width', (parse(informDataVaccines['low']/totalVaccinations)*64));\n    d3.select('#inform2val-no-score tspan').text(parse((informDataVaccines['no-score']/totalVaccinations)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform2bar-no-score').transition().duration(500).attr('width', (parse(informDataVaccines['no-score']/totalVaccinations)*64));\n\n    // row 3 total doses by hdi/inform\n    var maxhdivac = d3.max([ hdiDataVaccines['low'],hdiDataVaccines['medium'],hdiDataVaccines['high'],hdiDataVaccines['very-high'] ]);\n    var maxinformvac = d3.max([ informDataVaccines['low'],informDataVaccines['medium'],informDataVaccines['high'],informDataVaccines['very-high'],informDataVaccines['no-score'] ]);\n\n    d3.select('#hdi3val-very-high tspan').text(nFormatter(hdiDataVaccines['very-high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi3bar-very-high').transition().duration(500).attr('width', (parse(hdiDataVaccines['very-high']/maxhdivac)*70));\n    d3.select('#hdi3val-high tspan').text(nFormatter(hdiDataVaccines['high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi3bar-high').transition().duration(500).attr('width', (parse(hdiDataVaccines['high']/maxhdivac)*70));\n    d3.select('#hdi3val-medium tspan').text(nFormatter(hdiDataVaccines['medium'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi3bar-medium').transition().duration(500).attr('width', (parse(hdiDataVaccines['medium']/maxhdivac)*70));\n    d3.select('#hdi3val-low tspan').text(nFormatter(hdiDataVaccines['low'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi3bar-low').transition().duration(500).attr('width', (parse(hdiDataVaccines['low']/maxhdivac)*70));\n\n    d3.select('#inform3val-very-high tspan').text(nFormatter(informDataVaccines['very-high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform3bar-very-high').transition().duration(500).attr('width', (parse(informDataVaccines['very-high']/maxinformvac)*64));\n    d3.select('#inform3val-high tspan').text(nFormatter(informDataVaccines['high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform3bar-high').transition().duration(500).attr('width', (parse(informDataVaccines['high']/maxinformvac)*64));\n    d3.select('#inform3val-medium tspan').text(nFormatter(informDataVaccines['medium'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform3bar-medium').transition().duration(500).attr('width', (parse(informDataVaccines['medium']/maxinformvac)*64));\n    d3.select('#inform3val-low tspan').text(nFormatter(informDataVaccines['low'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform3bar-low').transition().duration(500).attr('width', (parse(informDataVaccines['low']/maxinformvac)*64));\n    d3.select('#inform3val-no-score tspan').text(nFormatter(informDataVaccines['no-score'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform3bar-no-score').transition().duration(500).attr('width', (parse(informDataVaccines['no-score']/maxinformvac)*64));\n\n    // row 4 total vaccinations\n    d3.select('#hdi4val-very-high tspan').text(parse((hdiContactTracing['very-high']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi4bar-very-high').transition().duration(500).attr('width', (parse(hdiContactTracing['very-high']/numCountriesFiltered)*70));\n    d3.select('#hdi4val-high tspan').text(parse((hdiContactTracing['high']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi4bar-high').transition().duration(500).attr('width', (parse(hdiContactTracing['high']/numCountriesFiltered)*70));\n    d3.select('#hdi4val-medium tspan').text(parse((hdiContactTracing['medium']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi4bar-medium').transition().duration(500).attr('width', (parse(hdiContactTracing['medium']/numCountriesFiltered)*70));\n    d3.select('#hdi4val-low tspan').text(parse((hdiContactTracing['low']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi4bar-low').transition().duration(500).attr('width', (parse(hdiContactTracing['low']/numCountriesFiltered)*70));\n\n    d3.select('#inform4val-very-high tspan').text(parse((informContactTracing['very-high']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform4bar-very-high').transition().duration(500).attr('width', (parse(informContactTracing['very-high']/numCountriesFiltered)*64));\n    d3.select('#inform4val-high tspan').text(parse((informContactTracing['high']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform4bar-high').transition().duration(500).attr('width', (parse(informContactTracing['high']/numCountriesFiltered)*64));\n    d3.select('#inform4val-medium tspan').text(parse((informContactTracing['medium']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform4bar-medium').transition().duration(500).attr('width', (parse(informContactTracing['medium']/numCountriesFiltered)*64));\n    d3.select('#inform4val-low tspan').text(parse((informContactTracing['low']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform4bar-low').transition().duration(500).attr('width', (parse(informContactTracing['low']/numCountriesFiltered)*64));\n    d3.select('#inform4val-no-score tspan').text(parse((informContactTracing['no-score']/numCountriesFiltered)*100).toFixed(0)+'%').style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform4bar-no-score').transition().duration(500).attr('width', (parse(informContactTracing['no-score']/numCountriesFiltered)*64));\n\n    // row 5 average testing\n    hdiTestingData['low'] = Math.round(d3.mean(hdiTestingData['low']))||0;\n    hdiTestingData['medium'] = Math.round(d3.mean(hdiTestingData['medium']))||0;\n    hdiTestingData['high'] = Math.round(d3.mean(hdiTestingData['high']))||0;\n    hdiTestingData['very-high'] = Math.round(d3.mean(hdiTestingData['very-high']))||0;\n    informTestingData['no-score'] = Math.round(d3.mean(informTestingData['no-score']))||0;\n    informTestingData['low'] = Math.round(d3.mean(informTestingData['low']))||0;\n    informTestingData['medium'] = Math.round(d3.mean(informTestingData['medium']))||0;\n    informTestingData['high'] = Math.round(d3.mean(informTestingData['high']))||0;\n    informTestingData['very-high'] = Math.round(d3.mean(informTestingData['very-high']))||0;\n\n    var maxhditest = d3.max([ hdiTestingData['low'],hdiTestingData['medium'],hdiTestingData['high'],hdiTestingData['very-high'] ]);\n    var maxinformtest = d3.max([ informTestingData['low'],informTestingData['medium'],informTestingData['high'],informTestingData['very-high'],informTestingData['no-score'] ]);\n\n    d3.select('#hdi5val-very-high tspan').text(addCommas(hdiTestingData['very-high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi5bar-very-high').transition().duration(500).attr('width', (parse(hdiTestingData['very-high']/maxhditest)*70));\n    d3.select('#hdi5val-high tspan').text(addCommas(hdiTestingData['high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi5bar-high').transition().duration(500).attr('width', (parse(hdiTestingData['high']/maxhditest)*70));\n    d3.select('#hdi5val-medium tspan').text(addCommas(hdiTestingData['medium'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi5bar-medium').transition().duration(500).attr('width', (parse(hdiTestingData['medium']/maxhditest)*70));\n    d3.select('#hdi5val-low tspan').text(addCommas(hdiTestingData['low'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#hdi5bar-low').transition().duration(500).attr('width', (parse(hdiTestingData['low']/maxhditest)*70));\n\n    d3.select('#inform5val-very-high tspan').text(addCommas(informTestingData['very-high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform5bar-very-high').transition().duration(500).attr('width', (parse(informTestingData['very-high']/maxinformtest)*64));\n    d3.select('#inform5val-high tspan').text(addCommas(informTestingData['high'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform5bar-high').transition().duration(500).attr('width', (parse(informTestingData['high']/maxinformtest)*64));\n    d3.select('#inform5val-medium tspan').text(addCommas(informTestingData['medium'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform5bar-medium').transition().duration(500).attr('width', (parse(informTestingData['medium']/maxinformtest)*64));\n    d3.select('#inform5val-low tspan').text(addCommas(informTestingData['low'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform5bar-low').transition().duration(500).attr('width', (parse(informTestingData['low']/maxinformtest)*64));\n    d3.select('#inform5val-no-score tspan').text(addCommas(informTestingData['no-score'])).style('text-anchor', 'end').attr('dx', '');\n    d3.select('#inform5bar-no-score').transition().duration(500).attr('width', (parse(informTestingData['no-score']/maxinformtest)*64));\n\n    // num countries filtered (table)\n    d3.select('#countries_filtered tspan').text(numCountriesFiltered+' countries filtered').style('text-anchor', 'end').attr('dx', '105');\n\n  }\n\n  d3.select('#prev').style('cursor', 'pointer')\n  .attr('opacity', 0.5)\n  .on('click',function(){\n    if(options.page==1) return false;\n    options.page = options.page-1;\n    updateTable(data, options);\n  })\n\n\n  d3.select('#next').style('cursor', 'pointer').on('click',function(){\n    if(options.page==options.numPages) return false;\n    options.page = options.page+1;\n    updateTable(data, options);\n  })\n\n  async function updateTable(data, options){\n\n    // var lastRecord = data.vaccines_data_cumulative.filter(d=>d.date.getTime()==data.max_date.getTime());\n    // var vGroup = d3.flatGroup(lastRecord, d => d.iso_code);\n\n    // data.country.forEach(function(d,i){\n    //   var vaccine_acceptance_percent = (d.vaccine_acceptance_percent) || 0\n    //   if(!vGroup.some(item => item[0] === d.country_iso3)){\n    //     vGroup.push([d.country_iso3, [{\n    //       country_name: d.country_name,\n    //       country_code: d.country_iso2,\n    //       vaccine_acceptance_percent: vaccine_acceptance_percent\n    //     }]])\n    //   }\n    //   vGroup.forEach(function(dd,ii){\n    //     if(dd[0]==d.country_iso3){\n    //       dd[1][0].vaccine_acceptance_percent = vaccine_acceptance_percent;\n    //       dd[1][0].country_name = d.country_name;\n    //       dd[1][0].country_code = d.country_iso2;\n    //     }\n    //   })\n    // })\n\n    var sortKey;\n    if(options.table_sort=='col0_sort') sortKey = 'country_name';\n    if(options.table_sort=='col1_sort') sortKey = 'total_vaccinations_per_hundred';\n    if(options.table_sort=='col2_sort') sortKey = 'people_vaccinated_per_hundred';\n    if(options.table_sort=='col3_sort') sortKey = 'people_fully_vaccinated_per_hundred';\n    if(options.table_sort=='col4_sort') sortKey = 'vaccine_acceptance_percent';\n    if(options.table_sort=='col5_sort') sortKey = 'total_vaccinations';\n\n    for(var x = 0; x<6; x++){\n      d3.select('#col'+x+'_sort_desc').attr('opacity', 0);\n      d3.select('#col'+x+'_sort_asc').attr('opacity', 0);\n    }\n\n    d3.select('#'+options.table_sort+'_'+options.table_sort_direction)\n    .attr('opacity', 1);\n\n    if(sortKey=='country_name'){\n      if(options.table_sort_direction=='asc') {\n        data.country.sort(function(b, a){\n          return a.country_name.localeCompare(b.country_name);\n        })\n      } else {\n        data.country.sort(function(a, b){\n          return a.country_name.localeCompare(b.country_name);\n        })    \n      }\n\n    } else {\n      if(options.table_sort_direction=='desc') {\n        data.country.sort(function(a,b){\n            return b[sortKey] - a[sortKey];\n        });\n      } else {\n        data.country.sort(function(b,a){\n          return b[sortKey] - a[sortKey];\n        });\n      }\n    }\n\n  //   data.vGroup = vGroup;\n\n  //   data.vGroup.forEach(function(d,i){\n  //     data.equity_data.forEach(function(dd,ii){\n  //         if(d[0] == dd.country_iso3){\n  //             dd.people_fully_vaccinated_per_hundred = parseFloat(d[1][0].people_fully_vaccinated_per_hundred);\n  //             dd.people_vaccinated_per_hundred = parseFloat(d[1][0].people_vaccinated_per_hundred);\n  //             dd.total_vaccinations = parseFloat(d[1][0].total_vaccinations);\n  //             dd.total_vaccinations_per_hundred = parseFloat(d[1][0].total_vaccinations_per_hundred);\n  //         }\n  //     })\n  // })\n\n\n    d3.selectAll('.tablerow').remove();\n    d3.selectAll('.col1bar').attr('opacity', 0);\n    d3.selectAll('.col2bar').attr('opacity', 0);\n    d3.selectAll('.col3bar').attr('opacity', 0);\n    d3.selectAll('.col4bar').attr('opacity', 0);\n    d3.selectAll('.colbg').attr('opacity', 0);\n    d3.selectAll('.table_country_name tspan').text('');\n\n    options.numPages = Math.ceil(data.country.length/10);\n\n    d3.select('#next').attr('opacity', function(){\n      if(options.page==options.numPages) return 0.5;\n      return 1;\n    })\n\n    d3.select('#prev')\n    .attr('opacity', function(){\n      if(options.page==1) return 0.5;\n      return 1;\n    })\n\n    d3.select('#pagination_text').attr('text-anchor', 'end');\n    d3.select('#pagination_text tspan').attr('x', 40);\n    d3.select('#pagination_text tspan').text('Page '+options.page + ' of '+options.numPages)\n\n    var i = 0;\n    var delay = 10;\n    const timer = ms => new Promise(res => setTimeout(res, ms));\n\n    for(let k = ((options.page-1)*10); k < ((options.page)*10); k++){\n\n      var d = data.country[k];\n      if(!data.country[k]) {\n        d3.select('#col1bar'+i)\n        .attr('width', 0);\n        d3.select('#col2bar'+i)\n        .attr('width', 0)\n        d3.select('#col3bar'+i)\n        .attr('width', 0)\n        d3.select('#col4bar'+i)\n        .attr('width', 0)\n        continue;\n      }\n\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow table_country_name')\n      .text(function(){\n        var name;\n        if(d.country_name) { name = d.country_name; } else {\n          name = d.country_code;\n        }\n        name = name.substring(0,17);\n        if(name.length==17)name=name+'.';\n        return name;\n      })\n      .attr('x', 0)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n\n      // col 1 val\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow table_country_name')\n      .text(function(){\n        var val = parseFloat(d.total_vaccinations_per_hundred).toFixed(1);\n        if((isNaN(val))||(val==0)){ return ''} else { return val }\n      })\n      .style('text-anchor', 'end')\n      .attr('x', 112)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n\n      // col 1 bar\n      d3.select('#col1bar'+i)\n      .attr('opacity', 1)\n      .transition()\n      .duration(200)\n      .attr('width', function(){\n        var val = d.total_vaccinations_per_hundred;\n        if(d.total_vaccinations_per_hundred>100){\n          val = 100\n        } \n        if(isNaN(val)){ return 0} else { return 68*(val/100) }\n      });\n\n      d3.select('#col1bg'+i)\n      .attr('opacity', 1);\n\n      // col 2 val\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow')\n      .text(function(){\n        var val = parseFloat(d.people_vaccinated_per_hundred).toFixed(1);\n        if((isNaN(val))||(val==0)){ return ''} else { return val+'%' }\n      })\n      .style('text-anchor', 'end')\n      .attr('x', 223)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n\n      // col 2 bar\n      d3.select('#col2bar'+i)\n      .attr('opacity', 1)\n      .transition()\n      .duration(200)\n      .attr('width', function(){\n        var val = d.people_vaccinated_per_hundred;\n        if(d.people_vaccinated_per_hundred>100){\n          val = 100\n        } \n        if(isNaN(val)){ return 0} else { return 68*(val/100) }\n      });\n\n      d3.select('#col2bg'+i)\n      .attr('opacity', 1);\n\n      // col 3 val\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow')\n      .text(function(){\n        var val = parseFloat(d.people_fully_vaccinated_per_hundred).toFixed(1);\n        if((isNaN(val))||(val==0)){ return ''} else { return val+'%' }\n      })\n      .style('text-anchor', 'end')\n      .attr('x', 335)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n\n      // col 3 bar\n      d3.select('#col3bar'+i)\n      .attr('opacity', 1)\n      .transition()\n      .duration(200)\n      .attr('width', function(){\n        var val = d.people_fully_vaccinated_per_hundred;\n        if(d.people_fully_vaccinated_per_hundred>100){\n          val = 100\n        } \n        if(isNaN(val)){ return 0} else { return 68*(val/100) }\n      });\n      \n      d3.select('#col3bg'+i)\n      .attr('opacity', 1);\n\n      // col 4 val\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow')\n      .text(function(){\n        var val = parseFloat(d.vaccine_acceptance_percent).toFixed(1);\n        if((isNaN(val))||(val==0)){ return ''} else { return val+'%' }\n      })\n      .style('text-anchor', 'end')\n      .attr('x', 450)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n\n      // col 4 bar\n      d3.select('#col4bar'+i)\n      .attr('opacity', 1)\n      .transition()\n      .duration(200)\n      .attr('width', function(){\n        var val = d.vaccine_acceptance_percent;\n        if(d.vaccine_acceptance_percent>100){\n          val = 100\n        } \n        if(isNaN(val)){ return 0} else { return 68*(val/100) }\n      });\n      \n      d3.select('#col4bg'+i)\n      .attr('opacity', 1);\n\n\n      var dayFormat = d3.timeFormat(\"%b %d\");\n      // col 5 val\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow')\n      .text(function(){\n        var val = (d.total_vaccinations);\n        if((isNaN(val))||(val==0)){ return ''} else { return nFormatter(val) }\n      })\n      .style('text-anchor', 'end')\n      .attr('x', 572)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n      \n      // col 6 val\n      d3.select('#vac-tab').append('text')\n      .attr('class','tablerow')\n      .text(function(){\n        var val = (d.data_updated);\n        if((val)){ return dayFormat(val)} else { return '' }\n      })\n      .style('text-anchor', 'end')\n      .attr('x', 620)\n      .attr('y', function(){\n        return 80+(i*24.8);\n      })\n      .style('fill', '#000')\n      .style('font-size', '9px');\n      \n      i++;\n      \n      await timer(15);\n    }\n\n  }\n\n  function createSelects(){\n     // region select\n      $('#regionSelect').select2({\n        data: [{\n          id: 'regions',\n          text: 'IFRC Regions',\n          children: regionOptions\n        },{\n          id: 'countries',\n          text: 'Countries',\n          children: countryOptions\n        }],\n        placeholder: '',\n        scrollAfterSelect: true,\n        renderTemplate: item => item.text || '\\u200B',\n        dropdownParent: $('#regionDrop'),\n        shouldFocusInput: function() {\n        return false;\n      },\n        templateResult: function(data) {\n        var $state = $('<span>' + data.text + '<span>');\n        return $state;\n      }\n      }).on('select2:unselecting', function() {\n          $(this).data('unselecting', true);\n      }).on('select2:opening', function(e) {\n          if ($(this).data('unselecting')) {\n              $(this).removeData('unselecting');\n              e.preventDefault();\n          }\n      });\n\n      $('#regionSelect').on('select2:select', function (e) {\n          var data = e.params.data;\n          filter([data.id]);\n      });\n\n      $('#regionSelect').on('select2:unselect', function (e) {\n        var data = e.params.data;\n        filter([data.id]);\n    });\n\n      // reset locations\n      d3.select('#reset_locations').style('cursor', 'pointer')\n      .on('click', function(){\n        filter('clear');\n      }); \n\n      // bubble map select color by\n      $('#colorSelect').select2({\n        scrollAfterSelect: true,\n        minimumResultsForSearch: -1,\n        renderTemplate: item => item.text || '\\u200B',\n        dropdownParent: $('#regionDrop'),\n        shouldFocusInput: function() {\n        return false;\n      },\n        templateResult: function(data) {\n        var $state = $('<span>' + data.text + '<span>');\n        return $state;\n      }\n      }).on('select2:select', function(e) {\n        var d = e.params.data;\n        options.bubble_chart_color_by = d.id;\n        updateBubblechart(data, options, filter);\n      });\n\n      // bubble map select y-axis\n      $('#ySelect').select2({\n        scrollAfterSelect: true,\n        minimumResultsForSearch: -1,\n        renderTemplate: item => item.text || '\\u200B',\n        dropdownParent: $('#regionDrop'),\n        shouldFocusInput: function() {\n        return false;\n      },\n        templateResult: function(data) {\n        var $state = $('<span>' + data.text + '<span>');\n        return $state;\n      }\n      }).on('select2:select', function(e) {\n        var d = e.params.data;\n        options.bubble_chart_y_axis = d.id;\n        updateBubblechart(data, options, filter);\n      });\n\n  }\n\n  function handleSelectLength(){\n    var values = $('#regionSelect').select2('data');\n    // handle height for many selections\n    var select2HeightRatio = $('#regionSelectContainer').width()/$('#regionSelectContainer').height();\n    if(select2HeightRatio<10){\n      $('.select2-selection__choice').hide();\n      $('.select2-search__field').attr('placeholder', values.length+' LOCATIONS SELECTED' ).css('width', '100%')\n    } else {\n      $('.select2-search__field').attr('placeholder', '' );\n      $('.select2-selection__choice').show();\n    }\n  }\n\n  useEffect(() => {\n    init();\n  }, [])\n\n\n  const selectStyle = {\n    control: (base, state) => ({\n      ...base,\n      border: '1px solid #D8D8D8',\n      boxShadow: 'none',\n      '&:hover': {\n          border: '1px solid #D8D8D8',\n      }\n  })\n  };\n\n  return (\n    <div>\n      <div id=\"loaderDiv\">\n        <div id=\"loaderText\">{loaderText}</div>\n        <div id=\"loaderBar\">\n          <div id=\"loaderProgress\" style={{width: progress*100+'%'}}></div>\n        </div>\n      </div>\n\n      <div id=\"regionSelectContainer\">\n        <select id=\"regionSelect\" className=\"js-example-responsive\" name=\"region[]\" multiple=\"multiple\"></select>\n        <div id=\"regionDrop\"></div>\n      </div>\n\n      <div id=\"bubbleSelectContainer\">\n        <div id=\"colorSelectContainer\">Color by&nbsp;&nbsp;\n        <select id=\"colorSelect\" className=\"js-example-responsive\" name=\"colorby[]\" defaultValue=\"hdi\">\n          <option value=\"region\">IFRC region</option>\n          <option value=\"hdi\">Human Development Index (HDI)</option>\n          <option value=\"inform-severity\">INFORM Severity Index</option>\n        </select>\n        <div id=\"colorDrop\"></div>\n        </div>\n        <div id=\"ySelectContainer\">\n          y-Axis&nbsp;&nbsp;\n        <select id=\"ySelect\" className=\"js-example-responsive\" name=\"yaxis[]\">\n          <option value=\"percent-vaccinated-at-least-1-dose\">% vaccinated at least 1 dose</option>\n          <option value=\"percent-fully-vaccinated\">% fully vaccinated</option>\n          <option value=\"percent-vaccine-acceptance\">% vaccine acceptance</option>\n        </select>\n        <div id=\"yDrop\"></div>\n        </div>\n      </div>\n\n\n    <div id=\"svg_container\" className=\"App\">\n\n    </div>\n    <div id=\"map_div_outer\">\n      <div id=\"map_div\">\n      </div>\n    </div>\n    \n    <div id=\"footer\">Data Sources - <a href=\"https://covid19.who.int/info/\" target=\"_blank\">WHO Daily cases and deaths by date, vaccination data</a>, <a href=\"https://github.com/owid/covid-19-data/tree/master/public/data/vaccinations\" target=\"_blank\">OWID vaccinations csv</a></div>\n\n    </div>\n  );\n}\n\nfunction parse(p){\n  if(isNaN(p)){\n    return 0\n  } else {\n    return p;\n  }\n}\n\nexport default App;\n\n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/reportWebVitals.js",[],"/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Layout.js",["124","125","126","127"],"import * as d3 from \"d3\";\nimport {drawTimechart, updateTimechart} from './Timechart';\nimport {updateRegionchart} from './Regionchart';\nimport colors from './colors';\nimport tippy from 'tippy.js';\nimport 'tippy.js/dist/svg-arrow.css';\nimport 'tippy.js/themes/light.css';\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from 'html2canvas';\n\nconst selectedToggle = '#595454';\nconst unselectedToggle = '#EAEAEA';\nconst unselectedToggleText = '#000';\nconst selectedToggleText = '#FFF';\n\nfunction Layout(svg, options, data, filter, updateTable, updateMap) {\n\n  // vaccine info\n  d3.select('#vaccine_tooltip').attr('opacity', 0).style('display', 'none');\n  d3.select('#vaccine_info path').attr('fill', colors.black);\n\n  svg.select('#vaccine_info').style('cursor', 'pointer')\n  .on('mouseover', function(event, bd){\n    d3.select('#svg_container').style('z-index', 10);\n    d3.select('#vaccine_tooltip').style('display', 'inline').transition().duration(500).attr('opacity', 1);\n    d3.select('#vaccine_info path').transition().duration(200).attr('fill', colors.blue);\n  }).on('mouseout', function(event, d){\n    d3.select('#svg_container').style('z-index', 1);\n    d3.select('#vaccine_tooltip').style('display', 'none').attr('opacity', 0);\n    d3.select('#vaccine_info path').transition().duration(500).attr('fill', colors.black);\n  })\n\n  // region chart toggle\n  svg.select('#region_remove_filter').attr('opacity', 0).style('cursor', 'pointer').on('click', function(d,i){\n    options.region_filter = []; \n    filter('clear-region');\n  });\n\n  svg.select('#region_switch').style('cursor', 'pointer').on('click', function(d,i){\n    if(options.region_switch=='total'){\n      options.region_switch = 'per100';\n      d3.select('#region_switch_toggle').transition().duration(200).attr('x', 15.1);\n    } else {\n      options.region_switch = 'total';\n      d3.select('#region_switch_toggle').transition().duration(200).attr('x', 3.1);\n    }\n    updateRegionchart(options,data);\n  })\n\n  svg.select('#region-chart-toggle #region-chart-toggle-cases').style('cursor', 'pointer').on('click', function(d){\n    if(options.region_chart_toggle === 'cases') return false;\n    options.region_chart_toggle = 'cases';\n    svg.selectAll('#region-chart-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#region-chart-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#region-chart-toggle-cases rect').attr('fill', selectedToggle);\n    svg.select('#region-chart-toggle-cases text').attr('fill', selectedToggleText);\n    updateRegionchart(options,data);\n  });\n\n  svg.select('#region-chart-toggle #region-chart-toggle-deaths').style('cursor', 'pointer').on('click', function(d){\n    if(options.region_chart_toggle === 'deaths') return false;\n    options.region_chart_toggle = 'deaths';\n    svg.selectAll('#region-chart-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#region-chart-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#region-chart-toggle-deaths rect').attr('fill', selectedToggle);\n    svg.select('#region-chart-toggle-deaths text').attr('fill', selectedToggleText);\n    updateRegionchart(options,data);\n  });\n\n  svg.select('#region-chart-toggle #region-chart-toggle-vaccines').style('cursor', 'pointer').on('click', function(d){\n    if(options.region_chart_toggle === 'vaccines') return false;\n    options.region_chart_toggle = 'vaccines';\n    svg.selectAll('#region-chart-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#region-chart-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#region-chart-toggle-vaccines rect').attr('fill', selectedToggle);\n    svg.select('#region-chart-toggle-vaccines text').attr('fill', selectedToggleText);\n    updateRegionchart(options,data);\n  });\n\n  // map toggle\n  svg.select('#map-toggle #map-toggle-bi-weekly-change').style('cursor', 'pointer').on('click', function(d){\n    if(options.map_toggle === 'bi-weekly-change') return false;\n    options.map_toggle = 'bi-weekly-change';\n    svg.selectAll('#map-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#map-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#map-toggle-bi-weekly-change rect').attr('fill', selectedToggle);\n    svg.select('#map-toggle-bi-weekly-change text').attr('fill', selectedToggleText);\n    // update map legend\n\n    updateMap(data, options, 700);\n  });\n\n  svg.select('#map-toggle #map-toggle-cases').style('cursor', 'pointer').on('click', function(d){\n    if(options.map_toggle === 'cases') return false;\n    options.map_toggle = 'cases';\n    svg.selectAll('#map-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#map-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#map-toggle-cases rect').attr('fill', selectedToggle);\n    svg.select('#map-toggle-cases text').attr('fill', selectedToggleText);\n    // update map legend\n\n    updateMap(data, options, 700);\n  });\n\n  svg.select('#map-toggle #map-toggle-deaths').style('cursor', 'pointer').on('click', function(d){\n    if(options.map_toggle === 'deaths') return false;\n    options.map_toggle = 'deaths';\n    svg.selectAll('#map-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#map-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#map-toggle-deaths rect').attr('fill', selectedToggle);\n    svg.select('#map-toggle-deaths text').attr('fill', selectedToggleText);\n    // update map legend\n\n    updateMap(data, options, 700);\n  });\n\n  svg.select('#map-toggle #map-toggle-percent-fully-vaccinated').style('cursor', 'pointer').on('click', function(d){\n    if(options.map_toggle === 'percent-fully-vaccinated') return false;\n    options.map_toggle = 'percent-fully-vaccinated';\n    svg.selectAll('#map-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#map-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#map-toggle-percent-fully-vaccinated rect').attr('fill', selectedToggle);\n    svg.select('#map-toggle-percent-fully-vaccinated text').attr('fill', selectedToggleText);\n    // update map legend\n    updateMap(data, options, 700);\n  });\n\n  svg.select('#map-toggle #map-toggle-percent-vaccine-acceptance').style('cursor', 'pointer').on('click', function(d){\n    if(options.map_toggle === 'percent-vaccine-acceptance') return false;\n    options.map_toggle = 'percent-vaccine-acceptance';\n    svg.selectAll('#map-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#map-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#map-toggle-percent-vaccine-acceptance rect').attr('fill', selectedToggle);\n    svg.select('#map-toggle-percent-vaccine-acceptance text').attr('fill', selectedToggleText);\n    // update map legend\n    updateMap(data, options, 700);\n  });\n\n    // time chart type \n    svg.select('#timechart-type-toggle #timechart-type-toggle-cumulative').style('cursor', 'pointer').on('click', function(d){\n      if(options.timeline_type === 'cumulative') return false;\n      options.timeline_type = 'cumulative';\n      svg.selectAll('#timechart-type-toggle rect').attr('fill', unselectedToggle);\n      svg.selectAll('#timechart-type-toggle polyline').attr('stroke', unselectedToggleText);\n      svg.select('#timechart-type-toggle-cumulative rect').attr('fill', selectedToggle);\n      svg.select('#timechart-type-toggle-cumulative polyline').attr('stroke', selectedToggleText);\n      svg.selectAll('#timechart-type-toggle-stacked polygon').attr('fill', selectedToggle);\n      updateTimechart(data, options);\n    });\n  \n    tippy('#timechart-type-toggle-cumulative', {\n      content: 'Cumulative',\n      duration: 0,\n      placement: 'bottom',\n      theme: 'light',\n      arrow: true,\n      delay: [500, 200],\n    });\n\n    svg.select('#timechart-type-toggle #timechart-type-toggle-non-cumulative').style('cursor', 'pointer').on('click', function(d){\n      if(options.timeline_type === 'non-cumulative') return false;\n      options.timeline_type = 'non-cumulative';\n      svg.selectAll('#timechart-type-toggle rect').attr('fill', unselectedToggle);\n      svg.selectAll('#timechart-type-toggle polyline').attr('stroke', unselectedToggleText);\n      svg.select('#timechart-type-toggle-non-cumulative rect').attr('fill', selectedToggle);\n      svg.select('#timechart-type-toggle-non-cumulative polyline').attr('stroke', selectedToggleText);\n      svg.selectAll('#timechart-type-toggle-stacked polygon').attr('fill', selectedToggle);\n      updateTimechart(data, options);\n    });\n\n    tippy('#timechart-type-toggle-non-cumulative', {\n      content: 'Non-cumulative',\n      duration: 0,\n      placement: 'bottom',\n      theme: 'light',\n      arrow: true,\n      delay: [500, 200],\n    });\n\n    svg.select('#timechart-type-toggle #timechart-type-toggle-stacked').style('cursor', 'pointer').on('click', function(d){\n      if(options.timeline_type === 'stacked') return false;\n      options.timeline_type = 'stacked';\n      svg.selectAll('#timechart-type-toggle rect').attr('fill', unselectedToggle);\n      svg.selectAll('#timechart-type-toggle polyline').attr('stroke', unselectedToggleText);\n      svg.select('#timechart-type-toggle-stacked rect').attr('fill', selectedToggle);\n      svg.select('#timechart-type-toggle-stacked polyline').attr('stroke', selectedToggleText);\n      svg.selectAll('#timechart-type-toggle-stacked polygon').attr('fill', selectedToggleText);\n      updateTimechart(data, options);\n    });\n\n    tippy('#timechart-type-toggle-stacked', {\n      content: 'Stacked 100%',\n      duration: 0,\n      placement: 'bottom',\n      theme: 'light',\n      arrow: true,\n      delay: [500, 200],\n    });\n\n  // time chart frequency toggle\n  svg.select('#timechart-frequency-toggle #timechart-frequency-toggle-day').style('cursor', 'pointer').on('click', function(d){\n    if(options.timeline_frequency === 'day') return false;\n    options.timeline_frequency = 'day';\n    svg.selectAll('#timechart-frequency-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#timechart-frequency-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#timechart-frequency-toggle-day rect').attr('fill', selectedToggle);\n    svg.select('#timechart-frequency-toggle-day text').attr('fill', selectedToggleText);\n    svg.select('#tooltip_frequency tspan').attr('text-anchor', 'end').attr('dx', 20).text('DAY');\n    drawTimechart(data, options);\n  });\n\n  svg.select('#timechart-frequency-toggle #timechart-frequency-toggle-week').style('cursor', 'pointer').on('click', function(d){\n    if(options.timeline_frequency === 'week') return false;\n    options.timeline_frequency = 'week';\n    svg.selectAll('#timechart-frequency-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#timechart-frequency-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#timechart-frequency-toggle-week rect').attr('fill', selectedToggle);\n    svg.select('#tooltip_frequency tspan').attr('text-anchor', 'end').attr('dx', 20).text('WEEK');\n    svg.select('#timechart-frequency-toggle-week text').attr('fill', selectedToggleText);\n    drawTimechart(data, options);\n  });\n\n  svg.select('#timechart-frequency-toggle #timechart-frequency-toggle-month').style('cursor', 'pointer').on('click', function(d){\n    if(options.timeline_frequency === 'month') return false;\n    options.timeline_frequency = 'month';\n    svg.selectAll('#timechart-frequency-toggle rect').attr('fill', unselectedToggle);\n    svg.selectAll('#timechart-frequency-toggle text').attr('fill', unselectedToggleText);\n    svg.select('#timechart-frequency-toggle-month rect').attr('fill', selectedToggle);\n    svg.select('#tooltip_frequency tspan').attr('text-anchor', 'end').attr('dx', 20).text('MONTH');\n    svg.select('#timechart-frequency-toggle-month text').attr('fill', selectedToggleText);\n    drawTimechart(data, options);\n  });\n\n    // HDI toggle\n\n    svg.select('#hdi_remove_filter').attr('opacity', 0).style('cursor', 'pointer').on('click', function(d,i){\n      d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1);\n      filter('clear-hdi');\n    });\n\n    svg.select('#hdi-toggle #hdi-toggle-very-high').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.hdi_filter, 'very-high');\n      if(options.hdi_filter.length === 4) { options.hdi_filter = []; d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1); }\n      else if(options.hdi_filter.length === 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1);}\n      else if(options.hdi_filter.length > 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 0.3);}\n      if(options.hdi_filter.length > 0){\n        options.hdi_filter.forEach(function(d,i){\n          d3.select('#hdi-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('hdi');\n    });\n\n    svg.select('#hdi-toggle #hdi-toggle-high').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.hdi_filter, 'high');\n      if(options.hdi_filter.length === 4) { options.hdi_filter = []; d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1); }\n      else if(options.hdi_filter.length === 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1);}\n      else if(options.hdi_filter.length > 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 0.3);}\n      if(options.hdi_filter.length > 0){\n        options.hdi_filter.forEach(function(d,i){\n          d3.select('#hdi-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('hdi');\n    });\n    svg.select('#hdi-toggle #hdi-toggle-medium').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.hdi_filter, 'medium');\n      if(options.hdi_filter.length === 4) { options.hdi_filter = []; d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1); }\n      else if(options.hdi_filter.length === 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1);}\n      else if(options.hdi_filter.length > 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 0.3);}\n      if(options.hdi_filter.length > 0){\n        options.hdi_filter.forEach(function(d,i){\n          d3.select('#hdi-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('hdi');\n    });\n    svg.select('#hdi-toggle #hdi-toggle-low').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.hdi_filter, 'low');\n      if(options.hdi_filter.length === 4) { options.hdi_filter = []; d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1);}\n      else if(options.hdi_filter.length === 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 1);}\n      else if(options.hdi_filter.length > 0) { d3.selectAll('#hdi-toggle-very-high, #hdi-toggle-high, #hdi-toggle-medium, #hdi-toggle-low').attr('opacity', 0.3);}\n      if(options.hdi_filter.length > 0){\n        options.hdi_filter.forEach(function(d,i){\n          d3.select('#hdi-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('hdi');\n    });\n\n    // inform severity toggle\n\n    svg.select('#inform_remove_filter').attr('opacity', 0).style('cursor', 'pointer').on('click', function(d,i){\n      d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);\n      filter('clear-inform');\n    });\n\n    svg.select('#inform-toggle #inform-toggle-no-score').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.inform_filter, 'no-score');\n      if(options.inform_filter.length === 5) { options.inform_filter = []; d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length === 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length > 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 0.3);}\n      if(options.inform_filter.length > 0){\n        options.inform_filter.forEach(function(d,i){\n          d3.select('#inform-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('inform');\n    });\n\n    svg.select('#inform-toggle #inform-toggle-low').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.inform_filter, 'low');\n      if(options.inform_filter.length === 5) { options.inform_filter = []; d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length === 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length > 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 0.3);}\n      if(options.inform_filter.length > 0){\n        options.inform_filter.forEach(function(d,i){\n          d3.select('#inform-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('inform');\n    });\n\n    svg.select('#inform-toggle #inform-toggle-medium').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.inform_filter, 'medium');\n      if(options.inform_filter.length === 5) { options.inform_filter = []; d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length === 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length > 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 0.3);}\n      if(options.inform_filter.length > 0){\n        options.inform_filter.forEach(function(d,i){\n          d3.select('#inform-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('inform');\n    });\n\n    svg.select('#inform-toggle #inform-toggle-high').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.inform_filter, 'high');\n      if(options.inform_filter.length === 5) { options.inform_filter = []; d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length === 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length > 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 0.3);}\n      if(options.inform_filter.length > 0){\n        options.inform_filter.forEach(function(d,i){\n          d3.select('#inform-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('inform');\n    });\n\n    svg.select('#inform-toggle #inform-toggle-very-high').style('cursor', 'pointer').on('click', function(d){\n      toggle(options.inform_filter, 'very-high');\n      if(options.inform_filter.length === 5) { options.inform_filter = []; d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length === 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 1);}\n      else if(options.inform_filter.length > 0) { d3.selectAll('#inform-toggle-very-high, #inform-toggle-high, #inform-toggle-medium, #inform-toggle-low, #inform-toggle-no-score').attr('opacity', 0.3);}\n      if(options.inform_filter.length > 0){\n        options.inform_filter.forEach(function(d,i){\n          d3.select('#inform-toggle-'+d).attr('opacity', 1);\n        })\n      }\n      filter('inform');\n    });\n  \n  // tabs\n\n  d3.select('#additional-indicators-tab').attr('opacity', 0).select('#additional-indicators-tab-content').attr('display', 'none');\n  d3.select('#vac-tab').attr('opacity', 1).select('#vac-tab-content').attr('display', 'inline');\n  d3.select('#bubblechart-tab').attr('opacity', 0).selectAll('#bubblechart, #bubblechart-tab-content').attr('display', 'none');\n  d3.select('#bubbleSelectContainer').style('display', 'none');\n\n  svg.select('#tabs #vaccination-tab').style('cursor', 'pointer').on('click', function(d){\n    if(options.tab_toggle === 'vaccination-data') return false;\n    options.tab_toggle = 'vaccination-data';\n    d3.select('#additional-indicators-tab').attr('opacity', 0).select('#additional-indicators-tab-content').attr('display', 'none');\n    d3.select('#vac-tab').attr('opacity', 1).select('#vac-tab-content').attr('display', 'inline');\n    d3.select('#bubblechart-tab').attr('opacity', 0).selectAll('#bubblechart, #bubblechart-tab-content').attr('display', 'none');\n    svg.selectAll('#tabs rect').attr('fill', unselectedToggle);\n    svg.selectAll('#tabs text').attr('fill', unselectedToggleText);\n    svg.select('#vaccination-tab rect').attr('fill', selectedToggle);\n    svg.select('#vaccination-tab text').attr('fill', selectedToggleText);\n    d3.select('#bubbleSelectContainer').style('display', 'none');\n\n  });\n\n  svg.select('#tabs #indicators-tab').style('cursor', 'pointer').on('click', function(d){\n    if(options.tab_toggle === 'indicators') return false;\n    options.tab_toggle = 'indicators';\n    d3.select('#additional-indicators-tab').attr('opacity', 1).select('#additional-indicators-tab-content').attr('display', 'inline');\n    d3.select('#vac-tab').attr('opacity', 0).select('#vac-tab-content').attr('display', 'none');\n    d3.select('#bubblechart-tab').attr('opacity', 0).selectAll('#bubblechart, #bubblechart-tab-content').attr('display', 'none');\n    svg.selectAll('#tabs rect').attr('fill', unselectedToggle);\n    svg.selectAll('#tabs text').attr('fill', unselectedToggleText);\n    svg.select('#indicators-tab rect').attr('fill', selectedToggle);\n    svg.select('#indicators-tab text').attr('fill', selectedToggleText);\n    d3.select('#bubbleSelectContainer').style('display', 'none');\n\n  });\n\n  svg.select('#tabs #bubble-chart-tab').style('cursor', 'pointer').on('click', function(d){\n    if(options.tab_toggle === 'bubble-chartt') return false;\n    options.tab_toggle = 'bubble-chart';\n    d3.select('#additional-indicators-tab').attr('opacity', 0).select('#additional-indicators-tab-content').attr('display', 'none');\n    d3.select('#vac-tab').attr('opacity', 0).select('#vac-tab-content').attr('display', 'none');\n    d3.select('#bubblechart-tab').attr('opacity', 1).selectAll('#bubblechart, #bubblechart-tab-content').attr('display', 'inline');\n    svg.selectAll('#tabs rect').attr('fill', unselectedToggle);\n    svg.selectAll('#tabs text').attr('fill', unselectedToggleText);\n    svg.select('#bubble-chart-tab rect').attr('fill', selectedToggle);\n    svg.select('#bubble-chart-tab text').attr('fill', selectedToggleText);\n    d3.select('#bubbleSelectContainer').style('display', 'inline-block');\n\n  });\n\n  // time chart mask\n    d3.select('#svg defs').append('clipPath').attr('id', 'mask')\n    .append('rect')\n    .attr('y', 340)\n    .attr('height', 590)\n    .attr('width', 660)\n    .attr('x', 22);\n\n  \n  // append timechart svg\n  const timechartContainer = svg.select('#timechart_container').attr('opacity', 0);\n  const tcSize = {\n    x: timechartContainer.attr('x'), y: timechartContainer.attr('y'), width: timechartContainer.attr('width'), height: timechartContainer.attr('height')\n  }\n\n  const timechartSvg = svg.append('svg').attr('id', 'timechart_svg').attr('viewBox', '0 0 '+2000 +' '+ tcSize.height)\n  .attr('preserveAspectRatio', \"none\")\n  .attr('x', tcSize.x)\n  .attr('y', tcSize.y)\n  .attr('width', tcSize.width)\n  .attr('height', tcSize.height)\n\n  const layer1 = timechartSvg\n  .append('g')\n  .attr('id', 'layer1')\n\n  const timechartBg = timechartSvg.append('g').attr('id', 'layer0');\n\n  layer1.append('rect')\n  .attr('x', 0)\n  .attr('y', 0)\n  .attr('width', '100%')\n  .attr('height', '100%')\n  .attr('opacity', 0)\n  .style('fill', 'transparent');\n  \n  // table bars\n\n  var tableRowHeight = 18;\n  var tableBarYOffset = 68;\n\n  for(let i = 0; i < 10; i++){\n\n    // col 1 bg\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col1bg colbg')\n    .attr('id','col1bg'+i)\n    .attr('x', 120)\n    .attr('y', function(){\n      return tableBarYOffset+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 68)\n    .attr('fill', colors.lightgrey)\n\n    // col 1 bar\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col1bar')\n    .attr('id','col1bar'+i)\n    .attr('x', 120)\n    .attr('y', function(){\n      return tableBarYOffset+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 0)\n    .attr('fill', colors.blue);\n\n    // col 2 bg\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col2bg colbg')\n    .attr('id','col2bg'+i)\n    .attr('x', 230)\n    .attr('y', function(){\n      return tableBarYOffset+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 68)\n    .attr('fill', colors.lightgrey)\n\n    // col 2 bar\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col2bar')\n    .attr('id','col2bar'+i)\n    .attr('x', 230)\n    .attr('y', function(){\n      return tableBarYOffset+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 0)\n    .attr('fill', colors.blue);\n\n    // col 3 bg\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col3bg colbg')\n    .attr('id','col3bg'+i)\n    .attr('x', 340)\n    .attr('y', function(){\n      return tableBarYOffset+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 68)\n    .attr('fill', colors.lightgrey)\n\n    // col 3 bar\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col3bar')\n    .attr('id','col3bar'+i)\n    .attr('x', 340)\n    .attr('y', function(){\n      return tableBarYOffset+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 0)\n    .attr('fill', colors.blue);\n\n    // col 4 bg\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col4bg colbg')\n    .attr('id','col4bg'+i)\n    .attr('x', 454)\n    .attr('y', function(){\n      return 67+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 68)\n    .attr('fill', colors.lightgrey)\n\n    // col 3 bar\n    d3.select('#vac-tab').append('rect')\n    .attr('class','col4bar')\n    .attr('id','col4bar'+i)\n    .attr('x', 454)\n    .attr('y', function(){\n      return 67+(i*24.8);\n    })\n    .attr('height', tableRowHeight)\n    .attr('width', 0)\n    .attr('fill', colors.blue);\n\n    for(var x = 0; x<6; x++){\n      d3.select('#col'+x+'_sort_desc').attr('opacity', 0);\n      d3.select('#col'+x+'_sort_asc').attr('opacity', 0);\n      d3.select('#col'+x+'_sort').style('cursor', 'pointer')\n      .on('click', function(){\n        var thisId = d3.select(this).attr('id');\n        if(options.table_sort==thisId){\n          if(options.table_sort_direction=='desc'){\n            options.table_sort_direction = 'asc';\n          } else {\n            options.table_sort_direction = 'desc';\n          }\n        } else {\n          options.table_sort = thisId;\n          options.table_sort_direction = 'desc';\n        }\n        options.page = 1;\n        updateTable(data, options);\n    })\n    // d3.select('#col1_sort_desc').attr('opacity', 1);\n    }\n  }\n\n  d3.select('#reset_locations').attr('display', 'none');\n\n  printCopySave();\n\n}\n\n// print copy save\n\nvar printing;\n\nfunction printCopySave(){\n\n  tippy('#button-png', {\n    content: 'Save as PNG',\n    duration: 0,\n    placement: 'bottom',\n    theme: 'light',\n    arrow: true,\n    delay: [500, 200],\n  });\n\n  tippy('#button-copy', {\n    content: 'Copy to clipboard',\n    duration: 0,\n    placement: 'bottom',\n    theme: 'light',\n    arrow: true,\n    delay: [500, 200],\n  });\n\n  tippy('#button-print', {\n    content: 'Print to PDF',\n    duration: 0,\n    placement: 'bottom',\n    theme: 'light',\n    arrow: true,\n    delay: [500, 200],\n  });\n\n  d3.select('#button-print').on('click', function(){\n\n    if(printing) return false;\n    printing = true;\n\n    setTimeout(function(){\n      html2canvas(document.querySelector(\"#root\"),{\n            allowTaint: true,\n            onclone: function(doc){\n\n            },\n            useCORS: false,\n            foreignObjectRendering: true,\n            ignoreElements: function(element){\n              // if(element.id=='adm-toggle') return true;\n              // if($(element).hasClass('select2')) return true;\n            return false;\n            },\n            scale: 2,\n            x: 0,\n            y: 0,\n            scrollX: 0,\n            scrollY: 0,\n            logging: false\n        }).then(canvas => {\n          var img = canvas.toDataURL(\"image/png\");\n          var pdf = new jsPDF(\"l\", \"mm\", \"a4\");\n          var imgProps= pdf.getImageProperties(img);\n          var pdfWidth = pdf.internal.pageSize.getWidth();\n          var pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n          pdf.addImage(img, 'JPEG', 10, 10, pdfWidth-20, pdfHeight-30);\n          pdf.save('deep-pdf-export.pdf');\n          printing = false;\n      },200);\n    });\n  });\n\n  d3.select('#button-png').on('click',function(){\n\n    if(printing) return false;\n    printing = true;\n\n    setTimeout(function(){\n      html2canvas(document.querySelector(\"#root\"),{\n            allowTaint: true,\n            onclone: function(doc){\n\n            },\n            useCORS: false,\n            foreignObjectRendering: true,\n            ignoreElements: function(element){\n              // if(element.id=='adm-toggle') return true;\n              // if($(element).hasClass('select2')) return true;\n            return false;\n            },\n            scale: 2,\n            x: 0,\n            y: 0,\n            scrollX: 0,\n            scrollY: 0,\n            logging: false\n        }).then(canvas => {\n\n      var img = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n      var link = document.createElement('a');\n      link.download = 'dashboard-export.png';\n      link.href = img;\n      link.click();\n      link.remove();\n\n      printing = false;\n      },200);\n    });\n  });\n\n  \n//   d3.select('#button-copy').on('click',function(){\n\n//     if(printing) return false;\n//     printing = true;\n\n//     setTimeout(function(){\n//       html2canvas(document.querySelector(\"#root\"),{\n//             allowTaint: true,\n//             onclone: function(doc){\n\n//             },\n//             useCORS: false,\n//             foreignObjectRendering: true,\n//             ignoreElements: function(element){\n//               // if(element.id=='adm-toggle') return true;\n//               // if($(element).hasClass('select2')) return true;\n//             return false;\n//             },\n//             scale: 1.8,\n//             windowWidth: 2800,\n//             windowHeight: 2000,\n//             logging: false\n//         }).then(canvas => {\n//           canvas.toBlob(blob, function(){\n//             navigator.clipboard.write([\n//               new ClipboardItem({\n//                 [blob.type]: blob\n//               })\n//             ]).then(() => {\n\n//             })\n//           })\n//         // copied to clipboard\n//         printing = false;\n//       });\n//       },200);\n//     });\n}\n\n\nexport default Layout;\n\nfunction toggle(collection, item) {\n  var idx = collection.indexOf(item);\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  } else {\n    collection.push(item);\n  }\n}\n\n/*\n\n#timechart-type-toggle #timechart-type-toggle-stacked\n#timechart-type-toggle #timechart-type-toggle-non-cumulative\n#timechart-type-toggle #timechart-type-toggle-cumulative\n\n#timechart-frequency-toggle #timechart-frequency-toggle-day\n#timechart-frequency-toggle #timechart-frequency-toggle-week\n#timechart-frequency-toggle #timechart-frequency-toggle-month\n\n#map-toggle #map-toggle-bi-weekly-change\n#map-toggle #map-toggle-deaths\n#map-toggle #map-toggle-percent-fully-vaccinated\n#map-toggle #map-toggle-percent-vaccine-acceptance\n#map-toggle #map-toggle-cases\n\n#tabs #bubble-chart-tab\n#tabs #indicators-tab\n#tabs #vaccination-tab\n\n#hdi-toggle #hdi-toggle-very-high\n#hdi-toggle #hdi-toggle-high\n#hdi-toggle #hdi-toggle-medium\n#hdi-toggle #hdi-toggle-low\n\n\n#inform-toggle #inform-toggle-no-score\n#inform-toggle #inform-toggle-low\n#inform-toggle #inform-toggle-medium\n#inform-toggle #inform-toggle-high\n#inform-toggle #inform-toggle-very-high\n\n*/","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Options.js",[],"/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Timechart.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {nFormatter} from './HelperFunctions';\nimport { selection, textwrap } from 'd3-textwrap';\nimport clone from 'just-clone';\n\nlet yScaleCases;\nlet yScaleDeaths;\nlet yScaleVaccines;\nlet yAxisCases;\nlet yAxisDeaths;\nlet yAxisVaccines;\nlet yScaleCasesAxis;\nlet yScaleDeathsAxis;\nlet yScaleVaccinesAxis;\nlet xScale;\nlet xAxis; \nlet xScaleAxis;\nlet xScaleEvents;\nlet maxDate; \nlet minDate;\nlet md; \nlet vgroupedData;\n\nconst regions = ['AF', 'AP', 'ME', 'EU', 'AM', 'OTH'];\n\nexport function drawTimechart(data, options) {\n\n    minDate = new Date(data.min_date);\n    maxDate = new Date(data.max_date);\n\n    const groupedData = [];\n\n    data.who_data.forEach(function(d,i){\n        if(!groupedData[d[options.timeline_frequency+'Total']])groupedData[d[options.timeline_frequency+'Total']] = {};\n        if(options.timeline_frequency==='day') groupedData[d[options.timeline_frequency+'Total']].date = d.date;\n        if(options.timeline_frequency==='week') groupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n        if(options.timeline_frequency==='month') groupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n        if(!groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_cases += d.new_cases;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_deaths += d.new_deaths;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_cases = 0;\n    });\n\n    // totals by date\n    groupedData.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if(!d.hasOwnProperty(dd)){\n               d[dd] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n            }\n            // if(dd!=='OTH') d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n            if(i>0){\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases + groupedData[i-1][dd].cumulative_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths + groupedData[i-1][dd].cumulative_deaths;\n            } else {\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths;\n            }\n        })\n\n        d.total_new_cases = d.AF.new_cases + d.AP.new_cases + d.AM.new_cases + d.EU.new_cases + d.ME.new_cases + d.OTH.new_cases; \n        d.total_cumulative_cases = d.AF.cumulative_cases + d.AP.cumulative_cases + d.AM.cumulative_cases + d.EU.cumulative_cases + d.ME.cumulative_cases + d.OTH.cumulative_cases; \n        d.total_new_deaths = d.AF.new_deaths + d.AP.new_deaths + d.AM.new_deaths + d.EU.new_deaths + d.ME.new_deaths + d.OTH.new_deaths; \n        d.total_cumulative_deaths = d.AF.cumulative_deaths + d.AP.cumulative_deaths + d.AM.cumulative_deaths + d.EU.cumulative_deaths + d.ME.cumulative_deaths + d.OTH.cumulative_deaths; \n        d.region = [];\n\n        regions.forEach(function(dd,ii){\n            d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n        })\n\n    });\n\n    vgroupedData = [];\n\n    if(options.timeline_type!='cumulative'){ // cumulative and stacked\n        // data.vaccines_data = data.vaccines_data_daily;\n        // data.vaccines_data_daily = clone(data.vaccines_data);\n        data.vaccines_data.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_vaccines += d.daily_vaccinations;\n        });\n\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {new_vaccines: 0, cumulative_vaccines: 0}\n                }\n            });\n            d.total_new_vaccines = d.AF.new_vaccines + d.AP.new_vaccines + d.AM.new_vaccines + d.EU.new_vaccines + d.ME.new_vaccines + d.OTH.new_vaccines; \n            d.region = [];\n\n            regions.forEach(function(dd,ii){\n                var newVaccines = 0;\n                if(d[dd].new_vaccines>0){\n                    newVaccines += d[dd].new_vaccines\n                }\n                d.region.push({'region': dd, 'new_vaccines': newVaccines });\n            })\n        });\n\n    } else{ // cumulative only\n        var vData = [];\n        if(options.timeline_frequency==='day') {\n            vData = clone(data.vaccines_data);\n        }\n        if(options.timeline_frequency==='week') {\n            data.vaccines_data.forEach(function(d,i){\n                var endOfWeekDate = moment(d.date).endOf('isoWeek').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfWeekDate)||(date==moment(data.max_date).startOf('day').unix())){\n                    vData.push(d);\n                }\n            })\n        }\n        if(options.timeline_frequency==='month') {\n            var maxDateUnix = moment(data.max_date).startOf('day').unix();\n            data.vaccines_data.forEach(function(d,i){\n                var endOfMonthDate = moment(d.date).endOf('month').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfMonthDate)||((moment(data.max_date).startOf('day').unix()!=endOfMonthDate)&&(date==maxDateUnix))){\n                    vData.push(d);\n                }\n            })\n        }\n\n        vData.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {cumulative_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_vaccines += d.total_vaccinations;\n        });\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {cumulative_vaccines: 0}\n                }\n            });\n            d.total_cumulative_vaccines = d.AF.cumulative_vaccines + d.AP.cumulative_vaccines + d.AM.cumulative_vaccines + d.EU.cumulative_vaccines + d.ME.cumulative_vaccines + d.OTH.cumulative_vaccines; \n            d.region = [];\n            regions.forEach(function(dd,ii){\n                d.region.push({'region': dd, 'cumulative_vaccines': d[dd].cumulative_vaccines});\n            })\n        });\n    }\n\n    vgroupedData = vgroupedData.filter(function(el) { return el; });\n\n    const numIntervals = d3.max(data.who_data, function(d,i){\n        return d[options.timeline_frequency+'Total'];\n    });\n\n    const maxCases = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_cases;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_cases;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxDeaths = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_deaths;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_deaths;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxVaccines = d3.max(vgroupedData, function(d,i){\n        if(d){\n            if(options.timeline_type==='non-cumulative') return d.total_new_vaccines;\n            if(options.timeline_type==='cumulative') return d.total_cumulative_vaccines;\n            if(options.timeline_type==='stacked') return 100;\n        }\n    })\n\n    // define date range\n    // const minDate = groupedData[0].date;\n    // const maxDate = groupedData[numIntervals].date;\n    // const minDate = groupedData[0].date;\n\n    // if(options.timeline_frequency==='month') md = md.add(1, 'months');\n    // if(options.timeline_frequency==='week') md = md.add(1, 'weeks');\n    if(options.timeline_frequency==='month') minDate = moment(minDate).startOf('month').startOf('day').toDate();\n    if(options.timeline_frequency==='month') maxDate = moment(maxDate).endOf('month').startOf('day').toDate();\n    if(options.timeline_frequency==='week') maxDate = moment(maxDate).endOf('isoWeek').startOf('day').toDate();\n\n    md = moment(maxDate);\n    if(options.timeline_frequency==='day') md = new Date(moment(maxDate).add(1, 'days').toDate());\n\n    const svg = d3.select('#timechart_svg');\n    svg.selectAll('g').remove();\n    d3.selectAll('#layout .yAxis').remove();\n    d3.selectAll('#yAxis').remove();\n    d3.selectAll('#layout .xAxis').remove();\n\n    //bg\n    svg.append('g').append('rect')\n    .attr('width', 2000)\n    .attr('height', '100%')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('fill', '#FFF')\n    .attr('opacity', 0);\n\n    const width = 2000;\n    const barWidth = width/numIntervals;\n\n    let barSpacing = 0.04; \n    if(options.timeline_frequency==='month') barSpacing = 0.03;\n    if(options.timeline_frequency==='day') barSpacing = 0.02;\n\n    // define scales\n\n    xScale = d3.scaleTime()\n    .range([0,width])\n    .domain([minDate,md]);\n\n    xScaleAxis = d3.scaleTime()\n    .range([0,596])\n    .domain([minDate,md]);\n\n    yScaleCases = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxCases]);\n\n    yScaleCasesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxCases]);\n\n    yScaleDeaths = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxDeaths]);\n\n    yScaleDeathsAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxDeaths]);\n\n    yScaleVaccines = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxVaccines]);\n\n    yScaleVaccinesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxVaccines]);\n\n    // define axi\n    \n    xAxis = d3.axisBottom()\n    .scale(xScaleAxis)\n    .tickSize(2)\n    .tickPadding(3);\n\n    // if(options.timeline_frequency=='month')\n    // xAxis.ticks(d3.timeMonth.every(3)).tickFormat(d3.timeFormat(\"%b %Y\"));\n\n    // if(options.timeline_frequency=='week')\n    // xAxis.ticks(d3.timeWeek.every(10)).tickFormat(d3.timeFormat(\"%d %b %Y\"));\n\n    yAxisCases = d3.axisRight()\n    .scale(yScaleCasesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisDeaths = d3.axisRight()\n    .scale(yScaleDeathsAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisVaccines = d3.axisRight()\n    .scale(yScaleVaccinesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    // y-axis cases\n    var yAxisGroup = d3.select('#layout').append(\"g\").attr('id', 'yAxis').attr('clip-path', 'url(#mask)');\n\n    var yAxisCasesText = yAxisGroup.append(\"g\")\n    .attr(\"class\", \"yAxis axis\")\n    .attr(\"id\", \"casesAxis\")\n    .attr('transform', 'translate(620,363)')\n    .call(yAxisCases);\n\n    // y-axis deaths\n    var yAxisDeathsText = yAxisGroup.append(\"g\")\n    .attr(\"class\", \"yAxis axis\")\n    .attr(\"id\", \"deathsAxis\")\n    .attr('transform', 'translate(620,534)')\n    .call(yAxisDeaths);\n\n    // y-axis vaccines\n    var yAxisVaccinesText = yAxisGroup.append(\"g\")\n    .attr(\"class\", \"yAxis axis\")\n    .attr(\"id\", \"VaccinesAxis\")\n    .attr('transform', 'translate(620,707.5)')\n    .call(yAxisVaccines);\n\n    // x-axis cases\n    var xAxisCases = yAxisGroup.append('g')\n    .attr(\"id\", \"casesXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,504)')\n    .call(xAxis);\n\n    var xAxisDeaths = yAxisGroup.append('g')\n    .attr(\"id\", \"deathsXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,674)')\n    .call(xAxis);\n\n    var xAxisVaccines = yAxisGroup.append('g')\n    .attr(\"id\", \"vaccinesXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,848)')\n    .call(xAxis);\n\n    var xAxisTimeline = yAxisGroup.append('g')\n    .attr(\"id\", \"timelineXAxis\")\n    .attr('class', 'xAxis')\n    .attr('transform', 'translate(24,908)')\n    .call(xAxis);\n\n    // CASES\n    // loop through groupedData and draw bars\n    const barGroups = svg.selectAll('.bar_group')\n    .data(groupedData)\n    .enter()\n    .append('g')\n    .attr('class', 'bar_group')\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+')'\n    })\n\n    // CASES\n    barGroups.selectAll('.cases_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .enter()\n    .append('rect')\n    .attr('class', function(d,i) { return 'timeBar cases_bar time_'+d.region })\n    .attr('x', (barWidth*barSpacing))\n    .attr('y', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_cases;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleCases(d.cumulative_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleCases(d.new_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_cases/totalNewCases))-((140*(dp/totalNewCases))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('width', barWidth-(barWidth*barSpacing*2))\n    .attr('height', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleCases(d.cumulative_cases);\n        if(options.timeline_type==='non-cumulative') y = yScaleCases(d.new_cases);\n        if(options.timeline_type==='stacked') y = (140*(d.new_cases/totalNewCases));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n    })\n\n    // DEATHS\n    barGroups.selectAll('.deaths_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .enter()\n    .append('rect')\n    .attr('class', function(d,i) { return 'timeBar deaths_bar time_'+d.region })\n    .attr('x', (barWidth*barSpacing))\n    .attr('y', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_deaths;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleDeaths(d.cumulative_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleDeaths(d.new_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_deaths/totalNewDeaths))-((140*(dp/totalNewDeaths)))+170)\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('width', barWidth-(barWidth*barSpacing*2))\n    .attr('height', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleDeaths(d.cumulative_deaths);\n        if(options.timeline_type==='non-cumulative') y = yScaleDeaths(d.new_deaths);\n        if(options.timeline_type==='stacked') y = (140*(d.new_deaths/totalNewDeaths));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n    });\n\n    // bar size tweak for spacing\n    if(options.timeline_frequency==='month'){\n        barGroups.selectAll(\".timeBar\")\n        .attr(\"width\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(1-barSpacing);\n            })\n        .attr(\"x\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(barSpacing/2);\n            })\n        }\n\n    // VACCINES\n\n    const vbarGroups = svg.selectAll('.vbar_group')\n    .data(vgroupedData)\n    .enter()\n    .append('g')\n    .attr('class', 'vbar_group')\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+', 344)'\n    })\n  \n    vbarGroups.selectAll('.vaccines_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .enter()\n    .append('rect')\n    .attr('class', 'timeBar vaccines_bar')\n    .attr('class', function(d,i) { return 'timeBar vaccines_bar time_'+d.region })\n    .attr('x', (barWidth*barSpacing))\n    .attr('y', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_vaccines;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleVaccines(d.cumulative_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleVaccines(d.new_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_vaccines/totalNewVaccines))-((140*(dp/totalNewVaccines))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('width', barWidth-(barWidth*barSpacing*2))\n    .attr('height', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleVaccines(d.cumulative_vaccines);\n        if(options.timeline_type==='non-cumulative') y = yScaleVaccines(d.new_vaccines);\n        if(options.timeline_type==='stacked') y = (140*(d.new_vaccines/totalNewVaccines));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n        // return colors.regions_blue[d.region];\n    });\n\n    if(options.timeline_frequency==='month'){\n    vbarGroups.selectAll(\".timeBar\")\n    .attr(\"width\", function(d) {\n        var date = d3.select(this.parentNode).datum().date;\n        var next = d3.timeMonth.offset(date, 1);\n        return (xScale(next)- xScale(date))*(1-barSpacing);\n        })\n    .attr(\"x\", function(d) {\n        var date = d3.select(this.parentNode).datum().date;\n        var next = d3.timeMonth.offset(date, 1);\n        return (xScale(next)- xScale(date))*(barSpacing/2);\n        })\n    }\n\n    // bar size tweak for spacing\n    if(options.timeline_frequency==='month'){\n        barGroups.selectAll(\".timeBar\")\n        .attr(\"width\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(1-barSpacing);\n          })\n        .attr(\"x\", function(d) {\n            var date = d3.select(this.parentNode).datum().date;\n            var next = d3.timeMonth.offset(date, 1);\n            return (xScale(next)- xScale(date))*(barSpacing/2);\n          })\n        }\n\n        // tooltips\n\n        // events calendar timeline\n        var tData = data.timeline_data;\n\n        xScaleEvents = d3.scaleTime()\n        .range([25,619])\n        .domain([minDate,md]);\n        \n        // bring to front\n       document.getElementById(\"svg\").appendChild(d3.select('#timeline_tooltip').node());\n       document.getElementById(\"svg\").appendChild(d3.select('#event_tooltip').node());\n       var timelineTooltip = d3.select('#timeline_tooltip').attr('opacity', 0);\n       var eventTooltip = d3.select('#event_tooltip').attr('opacity', 0);\n\n        // hover bar\n        var hoverBar = svg.append('rect')\n        .attr('id','timechart_hover')\n        .attr('width', barWidth)\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('opacity', 0)\n        .attr('height', '100%')\n        .attr('fill', 'rgb(221 221 221 / 40%)')\n\n        d3.select('#timechart_svg').on('mouseover',  (event) => {\n\n            var coords = d3.pointer( event );\n            hoverBar.attr('opacity', 1)\n\n            var xDate = xScale.invert(coords[0]);\n\n            if(options.timeline_frequency=='week') {\n                xDate = moment(xDate).startOf('isoWeek');\n            }\n            if(options.timeline_frequency=='day') {\n                xDate = moment(xDate).startOf('day');\n            }\n            if(options.timeline_frequency=='month') {\n                xDate = moment(xDate).startOf('month');\n            }\n\n            if(coords[1]<470){\n                timelineTooltip.attr('opacity', 1).attr('display', 'inline');\n                hoverBar.attr('height', '100%');\n            } else if(coords[1]>510){\n                eventTooltip.attr('opacity', 1);\n                hoverBar.attr('height', '90%');\n            } else {\n                eventTooltip.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n                hoverBar.attr('height', '100%');\n            }\n\n            if((xDate.toDate().getTime()<minDate.getTime())){\n                hoverBar.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n            }\n\n            d3.select('#svg_container').style('z-index', 10);\n\n        }).on('mouseout',  (event) => {\n            hoverBar.attr('opacity', 0)\n            timelineTooltip.attr('opacity', 0).attr('display', 'none');\n            // timelineTooltip.attr('opacity', 0).attr('transform', 'translate(0,0)');\n            d3.select('#svg_container').style('z-index', 1);\n            eventTooltip.attr('opacity', 0).attr('transform', 'translate(0,0)');\n            d3.selectAll('.event_marker circle').style('stroke', colors.black);\n        })\n        .on('mousemove', (event) => {\n            var coords = d3.pointer( event );\n\n            var xDate = xScale.invert(coords[0]);\n\n            var tooltipStr = '';\n            if(options.timeline_frequency=='week') {\n                xDate = moment(xDate).startOf('isoWeek');\n                tooltipStr = xDate.format('ll');\n                d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n            }\n            if(options.timeline_frequency=='day') {\n                xDate = moment(xDate).startOf('day');\n                tooltipStr = xDate.format('ll');\n                d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n            }\n            if(options.timeline_frequency=='month') {\n                xDate = moment(xDate).startOf('month');\n                tooltipStr = xDate.format('MMMM YYYY');\n                d3.select('#timeline_tooltip_date tspan').text(tooltipStr);\n            }\n            hoverBar.attr('x', xScale(xDate.toDate()));\n\n            var groupedDataFiltered = groupedData.filter(function(d,i){\n                return moment(d.date).startOf('day').unix() == xDate.startOf('day').unix();\n            });\n            var vgroupedDataFiltered = vgroupedData.filter(function(d,i){\n                return moment(d.date).startOf('day').unix() == xDate.startOf('day').unix();\n            });\n\n            var deaths = '-';\n            var cases = '-';\n            var vaccines = '-';\n            if(options.timeline_type=='cumulative'){ \n                // cumulative\n                if(groupedDataFiltered[0]) cases = nFormatter(groupedDataFiltered[0].total_cumulative_cases, 2);\n                if(groupedDataFiltered[0]) deaths = nFormatter(groupedDataFiltered[0].total_cumulative_deaths, 2);\n                if(vgroupedDataFiltered[0]) vaccines = nFormatter(vgroupedDataFiltered[0].total_cumulative_vaccines, 2);\n            } else {\n                // non-cumulative/stacked\n                if(groupedDataFiltered[0]) cases = nFormatter(groupedDataFiltered[0].total_new_cases, 2);\n                if(groupedDataFiltered[0]) deaths = nFormatter(groupedDataFiltered[0].total_new_deaths, 2);\n                if(vgroupedDataFiltered[0]) vaccines = nFormatter(vgroupedDataFiltered[0].total_new_vaccines, 2);\n            }\n\n            d3.select('#tooltip_cases tspan').text((cases)).attr(\"text-anchor\", \"end\").attr('dx', 32)\n            d3.select('#tooltip_deaths tspan').text((deaths)).attr(\"text-anchor\", \"end\").attr('dx', 32)\n            d3.select('#tooltip_vaccines tspan').text((vaccines)).attr(\"text-anchor\", \"end\").attr('dx', 32)\n\n            // if((xDate.toDate().getTime()>options.maxDate.getTime())){\n            //     hoverBar.attr('opacity', 0);\n            // // } else \n            if(((xDate.toDate().getTime()<minDate.getTime()))&&(options.timeline_frequency=='day')){\n                hoverBar.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n            }\n\n            if(options.timeline_frequency=='month'){\n                hoverBar.attr('width', function(){\n                   return xScale(moment(xDate).endOf('month')) - xScale(moment(xDate).startOf('month'));\n                })\n            }\n            timelineTooltip.attr('transform', function(){\n                var bw = barWidth;\n                var ratio = (options.brushR - options.brushL)/600;\n                var offset = 0;\n                if(ratio<0.5) offset = 3;\n                if(ratio<0.3) offset = 12;\n                if(ratio<0.2) offset = 20;\n                if(ratio<0.15) offset = 21;\n                if(options.timeline_frequency=='month') { \n                    if(ratio<0.6) offset = 20;\n                    if(ratio<0.5) offset = 30;\n                    if(ratio<0.3) offset = 50;\n                    if(ratio<0.2) offset = 60;\n                    if(ratio<0.1) offset = 70;\n                    return 'translate('+(((xScaleEvents(xDate.toDate()))+(barWidth/3))+offset)+','+(coords[1]+353)+')';\n                }\n                return 'translate('+((xScaleEvents(xDate.toDate())+(18))+offset)+','+(coords[1]+353)+')';\n            })\n\n            if(coords[1]<470){\n                timelineTooltip.attr('opacity', 1);\n                hoverBar.attr('opacity', 1);\n                hoverBar.attr('height', '100%');\n            } else if(coords[1]>510){\n                eventTooltip.attr('opacity', 1);\n                hoverBar.attr('height', '90%');\n                var x = moment(xScale.invert(coords[0])).startOf('day');\n                var xx = (xScale.invert(coords[0]))\n                eventTooltip.attr('transform', function(){\n                    return 'translate('+(xScaleEvents(x.toDate())+(-3))+','+(817)+')';\n                });\n\n                var events = tData.filter(function(d,i){\n                    return moment(d.date).startOf('day').unix() == x.unix()\n                });\n\n                // select nearest neighbor for ux purposes \n                if(events.length==0){\n                    events = tData.filter(function(d,i){\n                        return ((moment(d.date).startOf('day').unix() <= moment(x).add(1, 'days').unix())&&(moment(d.date).startOf('day').unix() >= moment(x).subtract(1, 'days').unix()))\n                    });\n                }\n                \n                if(events.length>0){\n\n                    d3.select('#event-'+moment(events[0].date).startOf('day').unix()).select('path').style('stroke', '#000').attr('opacity', 1);\n                    tooltipStr = moment(events[0].date).startOf('day').format('ll');\n                    d3.select('#event_tooltip_date tspan').text(tooltipStr);\n\n                    var wrap = textwrap().bounds({height: 200, width: 230}).method('tspans');\n                    var event = d3.select('#event_tooltip_text').text(events[0].description)\n                    .attr('y', 18)\n                    .attr('x', 6)\n                    d3.select('#event_tooltip_text').call(wrap);\n\n                    d3.selectAll('#event_tooltip_text tspan').attr('dy', '1.3em');\n                    var bbox = d3.select('#event_tooltip_text').node().getBBox();\n                    d3.select('#event_tooltip_rect').attr('width', bbox.width+17)\n                    .attr('height', bbox.height +26 );\n\n                    var h = d3.select('#event_tooltip_rect').attr('height');\n                    var ys = 0;\n\n                    if(bbox.height<20){\n                        ys = 19;\n                    } else if(bbox.height<30){\n                        ys = 9;\n                    } else if(bbox.height<40){\n                        ys = 0;\n                    } else if(bbox.height<50){\n                        ys = -20;\n                    } else if(bbox.height<60){\n                        ys = -20;\n                    }\n\n                    var y = d3.select('#event_tooltip_rect').attr('y');\n\n                    d3.select('#event_tooltip_rect').attr('y', ys);\n                    \n                    d3.selectAll('#event_tooltip_text').attr('y', function(d,i){\n                        return parseInt(d3.select(this).attr('y')) + ys;\n                    });\n\n                    d3.selectAll('#event_tooltip_date tspan').attr('dy', function(d,i){\n                        return ys;\n                    });\n\n                    eventTooltip.attr('opacity', 1);\n\n                } else {\n                    d3.selectAll('.event_marker circle').style('stroke', colors.black)\n                    eventTooltip.attr('opacity', 0);\n                }\n            } else {\n                eventTooltip.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n                hoverBar.attr('opacity', 0);\n                hoverBar.attr('height', '100%');\n            }\n\n            if((options.timeline_frequency=='day')&&((xDate.toDate().getTime()<minDate.getTime()))){\n                hoverBar.attr('opacity', 0);\n                timelineTooltip.attr('opacity', 0);\n                return false;\n            }\n        });\n\n        tData = tData.filter(d => d.date.length > 0);\n\n        // event lin\n\n        yAxisGroup.append('line')\n        .attr('id', 'event-line')\n        .attr('x1', 0)\n        .attr('x2', 620)\n        .attr('y1', 893)\n        .attr('y2', 893)\n        .attr('stroke-width', 2.5)\n        .attr('stroke', colors.black);\n\n        var circles = yAxisGroup.append('g').selectAll('.event_marker')\n        .data(tData)\n        .enter()\n        .append('g')\n        .attr('class', 'event_marker')\n        .attr('id', function(d,i){\n            return 'event-'+moment(d.date).startOf('day').unix();\n        })\n        .attr('transform', function(d){\n            var x = xScaleEvents(new Date(d.date));\n            return 'translate('+(x)+', 893)';\n        })\n        .style('cursor', 'pointer');\n        // .append('path')\n        // .attr('d', \"M0,-6L4,0 0,6 -4,0Z\")\n        \n        circles.append(\"circle\")\n        .style('stroke', colors.black)\n        .attr('opacity', 1)\n        .attr('r', 6.5)\n        .attr('cx', 0)\n        .attr('cy', 0)\n        .style('stroke-width',2.2)\n        .style('fill', 'white');\n        circles\n        .append(\"circle\")\n        .attr('r', 2)\n        .attr('cx', 0)\n        .attr('cy', 0)\n        .attr('fill', colors.black)\n        .style('stroke', colors.black);\n\n\n        // create brush zoom\n        // reset\n        // options.brushL = 0;\n        // options.brushR = 600;\n        const brush = d3.brushX()\n        .extent([[0,0],[600,20]])\n        .on(\"start brush end\", brushed);\n\n        d3.select('.brush').remove();\n;\n        var gBrush = d3.select('#zoombar').append(\"g\")\n        .attr(\"class\", \"brush\")\n        .attr('opacity', 0.1)\n        .call(brush);\n\n\t\td3.selectAll('.handle rect').attr('fill-opacity', '1').style('visibility', 'visible').attr('width', 2).attr('fill', '#000').style('stroke-opacity', 0);\n\n        var brushScale = d3.scaleLinear()\n        .domain([-3, 597])\n        .range([0,2000]);\n\n        gBrush.call(brush.move, [options.brushL,options.brushR]);\n\n        function brushed(){\n            var x = parseFloat(d3.select('.handle--w').attr('x'));\n            var x2 = parseFloat(d3.select('.handle--e').attr('x'));\n            if((x2-x)<40) return false;\n            var w = d3.select('.selection').attr('width');\n            d3.select('#zoomL').attr('transform', 'translate('+x+',0)');\n            d3.select('#zoomR').attr('transform', 'translate('+(x2)+',0)');\n            d3.select('#zoomOverlay').attr('width', (x2-x));\n            d3.select('#zoomOverlay').attr('x', (x));\n            d3.select('#zoomOverlay').attr('transform', 'translate(3,0)');\n            var viewBoxW = Math.round(brushScale(x2)-brushScale(x));\n            var viewBoxX = Math.round(brushScale(x));\n            options.brushL = x+3;\n            options.brushR = x2+3;\n\n            xScaleAxis = d3.scaleTime()\n            .range([0,596])\n            .domain([new Date(xScale.invert(brushScale(x))),new Date(xScale.invert(brushScale(x2)))]);\n\n            xScaleEvents = d3.scaleTime()\n            .range([25,619])\n            // .domain([minDate,md]);\n            .domain([new Date(xScale.invert(brushScale(x))),new Date(xScale.invert(brushScale(x2)))]);\n\n            d3.selectAll('.event_marker')\n            .attr('transform', function(d){\n                var x = xScaleEvents(new Date(d.date));\n                return 'translate('+(x)+', 893)';\n            });\n\n            xAxis = d3.axisBottom()\n            .ticks(5)\n            .scale(xScaleAxis);\n\n            xAxisCases.call(xAxis);\n            xAxisDeaths.call(xAxis);\n            xAxisVaccines.call(xAxis);\n            xAxisTimeline.call(xAxis);\n            \n            d3.select('#timechart_svg').attr('viewBox', viewBoxX + ' 0 '+ viewBoxW + ' 553')\n        }\n\n}\n\nexport function updateTimechart(data, options) {\n\n    const groupedData = [];\n\n    data.who_data.forEach(function(d,i){\n        if(!groupedData[d[options.timeline_frequency+'Total']])groupedData[d[options.timeline_frequency+'Total']] = {};\n        if(options.timeline_frequency==='day') groupedData[d[options.timeline_frequency+'Total']].date = d.date;\n        if(options.timeline_frequency==='week') groupedData[d[options.timeline_frequency+'Total']].date = d.week_start;\n        if(options.timeline_frequency==='month') groupedData[d[options.timeline_frequency+'Total']].date = d.month_start;\n        if(!groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_cases += d.new_cases;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_deaths += d.new_deaths;\n        groupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_cases = 0;\n    });\n\n    // totals by date\n    groupedData.forEach(function(d,i){\n        regions.forEach(function(dd,ii){\n            if(!d.hasOwnProperty(dd)){\n               d[dd] = {new_cases: 0, new_deaths: 0, cumulative_cases: 0, cumulative_deaths: 0};\n            }\n            // if(dd!=='OTH') d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n            if(i>0){\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases + groupedData[i-1][dd].cumulative_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths + groupedData[i-1][dd].cumulative_deaths;\n            } else {\n                d[dd].cumulative_cases = groupedData[i][dd].new_cases;\n                d[dd].cumulative_deaths = groupedData[i][dd].new_deaths;\n            }\n        })\n\n        d.total_new_cases = d.AF.new_cases + d.AP.new_cases + d.AM.new_cases + d.EU.new_cases + d.ME.new_cases + d.OTH.new_cases; \n        d.total_cumulative_cases = d.AF.cumulative_cases + d.AP.cumulative_cases + d.AM.cumulative_cases + d.EU.cumulative_cases + d.ME.cumulative_cases + d.OTH.cumulative_cases; \n        d.total_new_deaths = d.AF.new_deaths + d.AP.new_deaths + d.AM.new_deaths + d.EU.new_deaths + d.ME.new_deaths + d.OTH.new_deaths; \n        d.total_cumulative_deaths = d.AF.cumulative_deaths + d.AP.cumulative_deaths + d.AM.cumulative_deaths + d.EU.cumulative_deaths + d.ME.cumulative_deaths + d.OTH.cumulative_deaths; \n        d.region = [];\n\n        regions.forEach(function(dd,ii){\n            d.region.push({'region': dd, 'new_cases': d[dd].new_cases, 'new_deaths': d[dd].new_deaths, 'cumulative_cases': d[dd].cumulative_cases, 'cumulative_deaths': d[dd].cumulative_deaths});\n        })\n    });\n\n    vgroupedData = [];\n\n    if(options.timeline_type!='cumulative'){ // non-cumulative and stacked\n        // data.vaccines_data = data.vaccines_data_daily;\n        data.vaccines_data.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('isoWeek').toDate();\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('month').toDate();\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {new_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].new_vaccines += d.daily_vaccinations;\n        });\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {new_vaccines: 0, cumulative_vaccines: 0}\n                }\n            });\n            d.total_new_vaccines = d.AF.new_vaccines + d.AP.new_vaccines + d.AM.new_vaccines + d.EU.new_vaccines + d.ME.new_vaccines + d.OTH.new_vaccines; \n            d.region = [];\n            regions.forEach(function(dd,ii){\n                d.region.push({'region': dd, 'new_vaccines': d[dd].new_vaccines});\n            })\n        });\n\n    } else{ // cumulative only\n        var vData = [];\n        if(options.timeline_frequency==='day') {\n            vData = clone(data.vaccines_data);\n        }\n        if(options.timeline_frequency==='week') {\n            data.vaccines_data.forEach(function(d,i){\n                var endOfWeekDate = moment(d.date).endOf('isoWeek').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfWeekDate)||(date==moment(data.max_date).startOf('day').unix())){\n                    vData.push(d);\n                }\n            })\n        }\n        if(options.timeline_frequency==='month') {\n            var maxDateUnix = moment(data.max_date).startOf('day').unix();\n            data.vaccines_data.forEach(function(d,i){\n                var endOfMonthDate = moment(d.date).endOf('month').startOf('day').unix();\n                var date = moment(d.date).startOf('day').unix();\n                if((date==endOfMonthDate)||((moment(data.max_date).startOf('day').unix()!=endOfMonthDate)&&(date==maxDateUnix))){\n                    vData.push(d);\n                }\n            })\n        }\n\n        vData.forEach(function(d,i){\n            if(!vgroupedData[d[options.timeline_frequency+'Total']])vgroupedData[d[options.timeline_frequency+'Total']] = {};\n            if(options.timeline_frequency==='day') vgroupedData[d[options.timeline_frequency+'Total']].date = d.date;\n            if(options.timeline_frequency==='week') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('isoWeek').toDate();\n            if(options.timeline_frequency==='month') vgroupedData[d[options.timeline_frequency+'Total']].date = moment(d.date).startOf('month').toDate();\n            if(!vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region]) vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region] = {cumulative_vaccines: 0};\n            vgroupedData[d[options.timeline_frequency+'Total']][d.ifrc_region].cumulative_vaccines += d.total_vaccinations;\n        });\n        // totals by date\n        vgroupedData.forEach(function(d,i){\n            regions.forEach(function(dd,ii){\n                if(!d[dd]){\n                    d[dd] = {cumulative_vaccines: 0}\n                }\n            });\n            d.total_cumulative_vaccines = d.AF.cumulative_vaccines + d.AP.cumulative_vaccines + d.AM.cumulative_vaccines + d.EU.cumulative_vaccines + d.ME.cumulative_vaccines + d.OTH.cumulative_vaccines; \n            d.region = [];\n            regions.forEach(function(dd,ii){\n                d.region.push({'region': dd, 'cumulative_vaccines': d[dd].cumulative_vaccines});\n            })\n        });\n    }\n\n    vgroupedData = vgroupedData.filter(function(el) { return el; });\n\n    const numIntervals = d3.max(data.who_data, function(d,i){\n        return d[options.timeline_frequency+'Total'];\n    });\n\n    const maxCases = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_cases;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_cases;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxDeaths = d3.max(groupedData, function(d,i){\n        if(options.timeline_type==='non-cumulative') return d.total_new_deaths;\n        if(options.timeline_type==='cumulative') return d.total_cumulative_deaths;\n        if(options.timeline_type==='stacked') return 100;\n    })\n\n    const maxVaccines = d3.max(vgroupedData, function(d,i){\n        if(d){\n            if(options.timeline_type==='non-cumulative') return d.total_new_vaccines;\n            if(options.timeline_type==='cumulative') return d.total_cumulative_vaccines;\n            if(options.timeline_type==='stacked') return 100;\n        }\n    })\n\n    const svg = d3.select('#timechart_svg');\n\n    const width = 2000;\n    const barWidth = width/numIntervals;\n\n    let barSpacing = 0.04; \n    if(options.timeline_frequency==='month') barSpacing = 0.03;\n    if(options.timeline_frequency==='day') barSpacing = 0;\n\n    // define scales\n\n    // xScale = d3.scaleTime()\n    // .range([0,width])\n    // .domain([minDate,md]);\n\n    // xScaleAxis = d3.scaleTime()\n    // .range([23,596])\n    // .domain([minDate,md]);\n\n    yScaleCases = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxCases]);\n\n    yScaleCasesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxCases]);\n\n    yScaleDeaths = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxDeaths]);\n\n    yScaleDeathsAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxDeaths]);\n\n    yScaleVaccines = d3.scaleLinear()\n    .range([0,140])\n    .domain([0,maxVaccines]);\n\n    yScaleVaccinesAxis = d3.scaleLinear()\n    .range([140,0])\n    .domain([0,maxVaccines]);\n\n    // define axi\n    yAxisCases = d3.axisRight()\n    .scale(yScaleCasesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisDeaths = d3.axisRight()\n    .scale(yScaleDeathsAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    yAxisVaccines = d3.axisRight()\n    .scale(yScaleVaccinesAxis)\n    .ticks(3)\n    .tickSize(3)\n    .tickPadding(3)\n    .tickFormat(function(d){\n        if(options.timeline_type=='stacked') return nFormatter(d)+'%';\n        return nFormatter(d);\n    })\n\n    // y-axis cases\n    var yAxisCasesText = d3.select('#casesAxis')\n    .transition()\n    .duration(500)\n    .call(yAxisCases);\n\n    // y-axis deaths\n    var yAxisDeathsText = d3.select('#deathsAxis')\n    .transition()\n    .duration(500)\n    .call(yAxisDeaths);\n\n    // y-axis vaccines\n    var yAxisVaccinesText = d3.select('#VaccinesAxis')\n    .transition()\n    .duration(500)\n    .call(yAxisVaccines);\n\n    // CASES\n    // loop through groupedData and draw bars\n    const barGroups = svg.selectAll('.bar_group')\n    .data(groupedData)\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+')'\n    })\n\n    // CASES\n    barGroups.selectAll('.cases_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .transition()\n    .duration(500)\n    .attr('y', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_cases;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_cases;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleCases(d.cumulative_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleCases(d.new_cases)-(yScaleCases(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_cases/totalNewCases))-((140*(dp/totalNewCases))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('height', function(d,i){\n        const totalNewCases = d3.select(this.parentNode).datum().total_new_cases - d3.select(this.parentNode).datum().OTH.new_cases;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleCases(d.cumulative_cases);\n        if(options.timeline_type==='non-cumulative') y = yScaleCases(d.new_cases);\n        if(options.timeline_type==='stacked') y = (140*(d.new_cases/totalNewCases));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('fill', function(d,i){\n        return colors.regions[d.region];\n        return 'blue'\n    })\n\n    // // DEATHS\n    barGroups.selectAll('.deaths_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .transition()\n    .duration(500)\n    .attr('y', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_deaths;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_deaths;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleDeaths(d.cumulative_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleDeaths(d.new_deaths)-(yScaleDeaths(dp))+170)\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_deaths/totalNewDeaths))-((140*(dp/totalNewDeaths)))+170)\n        // if(options.timeline_type==='non-cumulative') if(y>310) return 0;\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('height', function(d,i){\n        const totalNewDeaths = d3.select(this.parentNode).datum().total_new_deaths - d3.select(this.parentNode).datum().OTH.new_deaths;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleDeaths(d.cumulative_deaths);\n        if(options.timeline_type==='non-cumulative') y = yScaleDeaths(d.new_deaths);\n        if(options.timeline_type==='stacked') y = (140*(d.new_deaths/totalNewDeaths));\n        if(options.timeline_type==='non-cumulative') if(y<0) return 0;\n\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n\n    if(groupedData.length==0){\n        d3.selectAll('.cases_bar')\n        .transition()\n        .duration(500)\n        .attr('y', 140)\n        .attr('height', 0)\n\n        d3.selectAll('.deaths_bar')\n        .transition()\n        .duration(500)\n        .attr('y', 140+170)\n        .attr('height', 0)\n        \n    }\n    // // VACCINES\n\n    const vbarGroups = svg.selectAll('.vbar_group')\n    .data(vgroupedData)\n    .attr('transform', function(d,i){ \n        return 'translate('+xScale(d.date)+', 344)'\n    })\n\n    vbarGroups.selectAll('.vaccines_bar')\n    .data(function(d,i){ return d.region.filter(function(dd,ii){\n        return dd.region!=='OTH';\n    })})\n    .transition()\n    .duration(500)\n    .attr('y', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let dp = 0;\n        if(i>0){\n            for(let ii=1;ii<=i;ii++){\n                if(options.timeline_type==='cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].cumulative_vaccines;\n                if(options.timeline_type==='non-cumulative') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n                if(options.timeline_type==='stacked') dp += d3.select(this.parentNode).datum().region[ii-1].new_vaccines;\n            }\n        }\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = (140-yScaleVaccines(d.cumulative_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='non-cumulative') y = (140-yScaleVaccines(d.new_vaccines)-(yScaleVaccines(dp)))\n        if(options.timeline_type==='stacked') y = (140-(140*(d.new_vaccines/totalNewVaccines))-((140*(dp/totalNewVaccines))))\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    })\n    .attr('height', function(d,i){\n        const totalNewVaccines = d3.select(this.parentNode).datum().total_new_vaccines - d3.select(this.parentNode).datum().OTH.new_vaccines;\n        let y = 0;\n        if(options.timeline_type==='cumulative') y = yScaleVaccines(d.cumulative_vaccines);\n        if(options.timeline_type==='non-cumulative') y = yScaleVaccines(d.new_vaccines);\n        if(options.timeline_type==='stacked') y = (140*(d.new_vaccines/totalNewVaccines));\n        if(y){ if(y>0) { return y} else { return 0}; } else { return 0};\n    });\n\n    if(vgroupedData.length==0){\n        d3.selectAll('.vaccines_bar')\n        .transition()\n        .duration(500)\n        .attr('y', 140)\n        .attr('height', 0)\n    }\n   \n    // // bar size tweak for spacing\n    // if(options.timeline_frequency==='month'){\n    //     barGroups.selectAll(\".timeBar\")\n    //     .attr(\"width\", function(d) {\n    //         var date = d3.select(this.parentNode).datum().date;\n    //         var next = d3.timeMonth.offset(date, 1);\n    //         return (xScale(next)- xScale(date))*(1-barSpacing);\n    //       })\n    //     .attr(\"x\", function(d) {\n    //         var date = d3.select(this.parentNode).datum().date;\n    //         var next = d3.timeMonth.offset(date, 1);\n    //         return (xScale(next)- xScale(date))*(barSpacing/2);\n    //       })\n    //     }\n\n}\n\nexport default drawTimechart;\n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/ParseData.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import {min,max,group,flatGroup} from \"d3\";\nimport moment from 'moment';\nimport clone from 'just-clone';\nimport { data } from \"jquery\";\n\nexport function ParseData(data, options) {\n\n    //*********************\n    // create regions\n    //*********************\n    data.regions = [\n        {sort: 5, 'code': 'AF', cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0, population: 0},\n        {sort: 3, 'code': 'ME', cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0, population: 0},\n        {sort: 4, 'code': 'AP', cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0, population: 0},\n        {sort: 2, 'code': 'EU', cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0, population: 0},\n        {sort: 1, 'code': 'AM', cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0, population: 0},\n        {sort: 6, 'code': 'OTH', cumulative_cases: 0, cumulative_deaths: 0, cumulative_vaccines: 0, population: 0}\n    ]\n\n    data.regions.sort(function(a,b){\n        return (a.sort) - (b.sort);\n    });\n\n    //*********************\n    // clean up country data\n    //*********************\n    data.country = data.equity_data;\n    data.country.forEach(function(d,i){\n\n        // if not an IFRC region then set to OTH\n        if((d.ifrc_region!='AF')&&(d.ifrc_region!='ME')&&(d.ifrc_region!='AP')&&(d.ifrc_region!='EU')&&(d.ifrc_region!='AM')){\n            d.ifrc_region = 'OTH';\n        }\n        \n        // parse country population\n        d.population = parseInt(d.population)||0;\n        var pop = 0;\n        if(d.population>0) pop = d.population;\n\n        // sum up ifrc region population \n        data.regions.forEach(function(dd,ii){\n            if(dd.code==d.ifrc_region){\n                dd.population += pop\n            }\n        });\n\n        // get WHO vaccine data (vaccine types used, vaccines_per_100\n        d.vaccines_used = [];\n        d.avg_tests_per_1000 = parseFloat(d.avg_tests_per_1000)||0;\n        d.number_vaccine_types_used = 0;\n        d.vaccines_per_100 = 0;\n        d.number_vaccine_types_used = parseInt(d.avg_tests_per_1000);\n        data.vaccines_who_data.forEach(function(dd,ii){\n            if(d.country_iso3==dd.ISO3){\n                // d.data_updated = moment(dd.DATE_UPDATED).startOf('day').toDate();\n                d.number_vaccine_types_used = parseInt(dd.NUMBER_VACCINES_TYPES_USED);\n                d.vaccines_per_100 = parseFloat(dd.TOTAL_VACCINATIONS_PER100);\n                if(isNaN(d.vaccines_per_100))d.vaccines_per_100 = 0;\n                d.vaccines_used = dd.VACCINES_USED.split(',').map(function(item) {\n                    return item.trim();\n                  });\n            }\n        })\n\n        // get ns involvement in activities\n        d.ns_involvement = 0;\n        data.self_assessment.forEach(function(dd,ii){\n            if(d.country_iso3==dd.ISO3){\n                if(dd['Final involvement']=='Yes') d.ns_involvement = 1;\n            }\n        })\n\n        d.vaccine_acceptance_percent = 0;\n        // get vaccine acceptance\n        data.vaccine_acceptance.forEach(function(dd,ii){\n            if(d.country_iso3==dd.iso3){\n                // if(dd['Final involvement']=='Yes') d.ns_involvement = 1;\n                d.vaccine_acceptance_percent = parseFloat(dd.indicator_value)*100;\n                d.vaccine_acceptance_population = parseInt(dd.population_size);\n            }\n        })\n\n        // get contrat tracing\n        if((d.contract_tracing.toLowerCase()=='all')||(d.contract_tracing.toLowerCase()=='some')){\n            d.contract_tracing = 1;\n        } else {\n            d.contract_tracing = 0\n        }\n\n        // parse equity data inform/hdi indexes\n        if(d.hdi_category.match(/very high/i)){\n            d.hdi_category = 'very-high'\n        }\n        else if(d.hdi_category.match(/high/i)){\n            d.hdi_category = 'high'\n        }\n        else if(d.hdi_category.match(/medium/i)){\n            d.hdi_category = 'medium'\n        }\n        else if(d.hdi_category.match(/low/i)){\n            d.hdi_category = 'low'\n        }\n        if(d.inform_severity.match(/very high/i)){\n            d.inform_severity = 'very-high'\n        }\n        else if(d.inform_severity.match(/high/i)){\n            d.inform_severity = 'high'\n        }\n        else if(d.inform_severity.match(/medium/i)){\n            d.inform_severity = 'medium'\n        }\n        else if(d.inform_severity.match(/low/i)){\n            d.inform_severity = 'low'\n        }\n        else if(d.inform_severity.match(/no/i)){\n            d.inform_severity = 'no-score'\n        }\n\n    });\n\n    //*********************\n    // get min/max dates\n    //*********************\n\n    // get min and max dates from daily who data\n    let maxDate = moment(new Date(max(data.who_data, function(d){\n        return d.Date_reported;\n    }))).startOf('day');\n\n    // override min date to week start\n    data.min_date = moment('2019-12-31').startOf('day').toDate();\n\n    let maxDateVaccines = moment(new Date(max(data.vaccines_data, function(d){\n        return d.date;\n    }))).startOf('day');\n\n    data.min_vaccine_date = moment(new Date(min(data.vaccines_data, function(d){\n        return d.date;\n    }))).startOf('day').toDate();\n\n    data.max_vaccine_date = maxDateVaccines.toDate();\n\n    if(maxDateVaccines.unix()>maxDate.unix()) {\n        maxDate = maxDateVaccines;\n    }\n\n    data.max_date = maxDate.toDate();\n\n    //*********************\n    // parse who data\n    //*********************\n\n    data.who_data.forEach(function(d,i){\n        // parse dates\n        d.date = moment(d.Date_reported).startOf('day').toDate();\n        // override country name and code\n        d.country_code = d.Country_code;\n        d.country_name = null;\n        data.country.forEach(function(dd,ii){\n            if(dd.country_iso2===d.country_code){\n                d.ifrc_region = dd.ifrc_region;\n                d.country_name = dd.country_name;\n            }\n        })\n\n        // parse cases and deaths\n        d.cumulative_deaths = parseInt(d.Cumulative_deaths);\n        d.cumulative_cases = parseInt(d.Cumulative_cases);\n        d.new_cases = parseInt(d.New_cases);\n        d.new_deaths = parseInt(d.New_deaths);\n        \n    });\n\n    // sort by date\n    data.who_data.sort(function(a,b){\n        return new Date(a.date) - new Date(b.Date_reported);\n    });\n    \n    //*************************\n    // check for missing who dates and fill in the max date\n    //*************************\n\n    // group by country\n    var whoDataGrouped = flatGroup(data.who_data, d => d.country_code);\n\n    var datesToAdd = [];\n\n    whoDataGrouped.forEach(function(d,i){\n        \n        var maxDate = moment(max(d[1], d=>d.date)).startOf('day');\n        \n        var lastRecord = clone(d[1][d[1].length-1]);\n\n        if(maxDate.unix()!=data.max_date.getTime()){\n            lastRecord.date = new Date(data.max_date);\n            lastRecord.new_cases = 0;\n            lastRecord.new_deaths = 0;\n            datesToAdd.push(lastRecord);\n        }\n\n    })\n\n    data.who_data.push(...datesToAdd);\n\n    data.who_data.sort(function(a,b){\n        return new Date(a.date) - new Date(b.date);\n    });\n\n    // set count for incremental day/week/month numbers\n    let dayTotal = -1;\n    let dayCheck = 0;\n    let weekTotal = -1;\n    let weekCheck = -1;\n    let monthTotal = 0;\n    let monthCheck = 0;\n\n    // parse and clean up WHO data\n    let whoCountryCodes = [];\n    data.who_data.forEach(function(d,i){\n        // parse dates\n        // d.date = moment(d.Date_reported).startOf('day').toDate();\n        d.dayOfYear =  moment(d.date).dayOfYear();\n        if(d.dayOfYear!==dayCheck) dayTotal++;\n        d.dayTotal = dayTotal;\n        d.week = moment(d.date).isoWeek();\n        if(d.week!==weekCheck) weekTotal++;\n        d.weekTotal = weekTotal;\n        d.month = d.date.getMonth();\n        if(d.month!==monthCheck) monthTotal++;\n        d.monthTotal = monthTotal;\n        d.year = d.date.getFullYear();\n        d.week_start = new Date(moment(d.date).startOf('isoWeek').startOf('day').toDate());\n        d.month_start = new Date(moment(d.date).startOf('month').startOf('day').toDate());\n\n        // set negative values to zero for new cases/deaths\n        if(d.new_deaths<0)d.new_deaths = 0;\n        if(d.new_cases<0)d.new_cases = 0;\n\n        if(d.ifrc_region==undefined) d.ifrc_region = 'OTH';\n\n        // add country code to array so we know it is used\n        if((!whoCountryCodes.includes(d.country_code))&&(d.country_code.length>1)) {\n            whoCountryCodes.push(d.country_code);\n        }\n\n        // delete old unused keys\n        delete d.Date_reported;\n        delete d.Country;\n        delete d.New_cases;\n        delete d.New_deaths;\n        delete d.Country_code;\n        delete d.Cumulative_deaths;\n        delete d.Cumulative_cases;\n        delete d.Country_code;\n        delete d.WHO_region;\n        delete d.Country;\n        \n        // set incremental count\n        dayCheck = d.dayOfYear;\n        weekCheck = d.week;\n        monthCheck = d.month;\n    })\n   \n    //*********************\n    // parse vaccine cumulative data\n    //*********************\n\n    // clean up values\n    data.vaccines_data.forEach(function(d,i){\n        d.date = moment(d.date).startOf('day').toDate();\n    });\n    \n    data.vaccines_data.sort(function(a,b){\n        return new Date(a.date) - new Date(b.date);\n    });\n\n    // filter out vaccine data to only include records with ISO3 country codes\n    data.vaccines_data = data.vaccines_data.filter(function(d,i){\n        return d.iso_code.length===3 && d.total_vaccinations > 0;\n    })\n\n    var vaccineDataByCountry = flatGroup(data.vaccines_data, d => d.iso_code);\n\n    // fill out missing vaccinations date records (extend cumulative from last data date)\n    var newDays = [];\n    var hasDays = [];\n    var lastRecord = {};\n    var vDataFlat = [];\n\n    vaccineDataByCountry.forEach(function(d,i){\n\n        var minDt = new Date(data.min_date);\n        var maxDt = new Date(data.max_date);\n\n        hasDays = [];\n        newDays = [];\n\n        // set the last recorded date fo this country\n        d.lastDate = moment(max(d[1], function(d,i){ return d.date })).startOf('day').toDate();\n        \n        // reset country name and code using country table\n        data.country.forEach(function(dd,ii){\n            if(dd.country_iso3===d[0]){\n                d.ifrc_region = dd.ifrc_region;\n                d.country_name = dd.country_name;\n                d.country_code = dd.country_iso2;\n                dd.data_updated = d.lastDate;\n\n            }\n        })\n\n        // loop through all date records for this country and add to hasDays array\n        d[1].forEach(function(dd,ii){\n            dd.total_vaccinations = parseInt(dd.total_vaccinations);\n            dd.daily_vaccinations = parseInt(dd.daily_vaccinations);\n            hasDays.push(new Date(dd.date).getTime());\n        })\n\n        // fill in missing dates\n        // d[1].forEach(function(dd,ii){\n            for (var day = new Date(data.min_vaccine_date);day <= data.max_date; day.setDate(day.getDate() + 1)) {\n                var newDay = new Date(day).getTime();\n                if(!hasDays.includes(newDay)){\n                    newDays.push({date: new Date(day), total_vaccinations: null, daily_vaccinations: 0})\n                }\n            }\n        // });\n\n        d[1].push(...newDays);\n        d[1].sort(function(a,b){\n            return new Date(a.date) - new Date(b.date);\n        });\n\n        // loop through dates and fill in missing cumulative values\n        var totalVac = 0;\n        var totalVac100 = 0;\n        var people_vaccinated_per_hundred = 0;\n        var people_fully_vaccinated_per_hundred = 0;\n        d[1].forEach(function(dd,ii){\n            if(dd.total_vaccinations){\n                totalVac = dd.total_vaccinations;\n            } else {\n                dd.total_vaccinations = totalVac;\n            }\n            if(dd.total_vaccinations_per_hundred){\n                totalVac100 = dd.total_vaccinations_per_hundred\n            } else {\n                dd.total_vaccinations_per_hundred = totalVac100;\n            }\n            if(dd.people_vaccinated_per_hundred){\n                people_vaccinated_per_hundred = dd.people_vaccinated_per_hundred;\n            } else {\n                dd.people_vaccinated_per_hundred = people_vaccinated_per_hundred;\n            }\n            if(dd.people_fully_vaccinated_per_hundred){\n                people_fully_vaccinated_per_hundred = dd.people_fully_vaccinated_per_hundred;\n            } else {\n                dd.people_fully_vaccinated_per_hundred = people_fully_vaccinated_per_hundred;\n            }\n\n            var countryName;\n            if(d.country_name==null) { countryName = d[0];\n            } else {\n                countryName = d.country_name\n            }\n            var dailyVac = 0;\n            if((dd.daily_vaccinations)&&(dd.daily_vaccinations>0)) dailyVac = dd.daily_vaccinations;\n\n            vDataFlat.push({\n                date: new Date(dd.date),\n                lastDate: d.lastDate,\n                total_vaccinations_per_hundred: parseFloat(totalVac100),\n                people_vaccinated_per_hundred: parseFloat(people_vaccinated_per_hundred),\n                people_fully_vaccinated_per_hundred: parseFloat(people_fully_vaccinated_per_hundred),\n                iso_code: d[0], \n                ifrc_region: d.ifrc_region,\n                country_name: countryName,\n                country_code: d.country_code, \n                total_vaccinations: totalVac,\n                daily_vaccinations: dailyVac\n            })\n        })\n    });\n\n    data.vaccines_data = vDataFlat;\n\n    data.vaccines_data.sort(function(a,b){\n        return new Date(a.date) - new Date(b.date);\n    });\n\n    // reset count for incremental day/week/month numbers\n    dayTotal = -1;\n    dayCheck = 0;\n    weekTotal = -1;\n    weekCheck = -1;\n    monthTotal = 0;\n    monthCheck = 0;\n    \n    data.vaccines_data.forEach(function(d,i){\n        if(d.ifrc_region==undefined) d.ifrc_region = 'OTH';\n        d.dayOfYear =  moment(d.date).dayOfYear();\n        if(d.dayOfYear!==dayCheck) dayTotal++;\n        d.dayTotal = dayTotal;\n        d.week = moment(d.date).isoWeek();\n        if(d.week!==weekCheck) weekTotal++;\n        d.weekTotal = weekTotal;\n        d.month = d.date.getMonth();\n        if(d.month!==monthCheck) monthTotal++;\n        d.monthTotal = monthTotal;\n        d.year = d.date.getFullYear();\n        dayCheck = d.dayOfYear;\n        weekCheck = d.week;\n        monthCheck = d.month;\n        d.week_start = new Date(moment(d.date).startOf('isoWeek').toDate());\n        d.month_start = new Date(moment(d.date).startOf('month').toDate());\n    })\n\n    //*********************\n    // add most recent owid vaccine data record to data.country\n    //*********************\n\n    // group who data by country\n    var vaccineDataByCountry = flatGroup(data.vaccines_data, d => d.country_code);\n\n    //*********************\n    // add most recent records from both datasets to data.country\n    //*********************\n\n    // first group who data by country\n    var whoDataByCountry = flatGroup(data.who_data, d => d.country_code);\n\n    data.country.forEach(function(d,i){\n        d.cumulative_cases_per_100k = 0;\n        d.cumulative_deaths_per_100k = 0;\n        d.cumulative_vaccines_per_100k = 0;\n        d.people_fully_vaccinated_per_hundred = 0;\n        d.people_vaccinated_per_hundred = 0;\n        d.total_vaccinations_per_hundred = 0;\n        var countryCode = d.country_iso2;\n\n        // calculate latest date and at weekly intervals (for bi-weekly percent change calculation)\n        whoDataByCountry.forEach(function(dd,ii){\n            if(dd[0]==countryCode){\n                d.who_daily_latest = dd[1][dd[1].length-1];\n                d.who_daily_7_days = dd[1][dd[1].length-8];\n                d.who_daily_14_days = dd[1][dd[1].length-15];\n                d.who_daily_21_days = dd[1][dd[1].length-22];\n                d.who_daily_28_days = dd[1][dd[1].length-29];\n                d.cumulative_cases_per_100k = (d.who_daily_latest.cumulative_cases/(d.population/100000));\n                d.cumulative_deaths_per_100k = (d.who_daily_latest.cumulative_deaths/(d.population/100000));\n                d.cumulative_cases = d.who_daily_latest.cumulative_cases;\n                d.cumulative_deaths = d.who_daily_latest.cumulative_deaths;\n                d.cumulative_deaths_7_days = d.who_daily_7_days.cumulative_deaths;\n                d.cumulative_deaths_14_days = d.who_daily_14_days.cumulative_deaths;\n                d.cumulative_deaths_21_days = d.who_daily_21_days.cumulative_deaths;\n                d.cumulative_deaths_28_days = d.who_daily_28_days.cumulative_deaths;\n                d.cumulative_cases_7_days = d.who_daily_7_days.cumulative_cases;\n                d.cumulative_cases_14_days = d.who_daily_14_days.cumulative_cases;\n                d.cumulative_cases_21_days = d.who_daily_21_days.cumulative_cases;\n                d.cumulative_cases_28_days = d.who_daily_28_days.cumulative_cases;\n                var percentChange = parseFloat(((d.cumulative_cases - d.cumulative_cases_14_days)-(d.cumulative_cases_14_days-d.cumulative_cases_28_days))/(d.cumulative_cases_14_days-d.cumulative_cases_28_days));\n                if(isFinite(percentChange)) { d.percent_change = percentChange; } else { d.percent_change = 0 }\n            }\n        })\n\n        vaccineDataByCountry.forEach(function(dd,ii){\n            if(dd[0]==countryCode){\n                if(typeof(dd[0]!='undefined')){\n                    d.vaccine_daily_latest = dd[1][dd[1].length-1];\n                    d.cumulative_vaccines_per_100k = (d.vaccine_daily_latest.total_vaccinations/(d.population/100000));\n                    d.people_fully_vaccinated_per_hundred = d.vaccine_daily_latest.people_fully_vaccinated_per_hundred;\n                    d.people_vaccinated_per_hundred = d.vaccine_daily_latest.people_vaccinated_per_hundred;\n                    d.total_vaccinations_per_hundred = d.vaccine_daily_latest.total_vaccinations_per_hundred;\n                    d.total_vaccinations = d.vaccine_daily_latest.total_vaccinations;\n                }\n            }\n        })\n\n        if(!isFinite(d.cumulative_cases_per_100k))d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k))d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k))d.cumulative_vaccines_per_100k = 0;\n        d.country_code = d.country_iso2;\n\n    })\n\n    data.original = clone(data);\n\n}\n\nexport default ParseData;\n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/colors.js",["203","204","205"],"// default options\nconst colors = {\n    hdi_category: {\n        'very-high': '#D8EF8B', \n        'high': '#FDE08B', \n        'medium': '#FB8D59', \n        'low': '#D63127'\n    },\n    inform_severity: {\n        'very-high': '#D63127', \n        'high': '#FB8D59', \n        'medium': '#FDE08B', \n        'low': '#D8EF8B', \n        'no-score': '#DAE0EA', \n    },\n    blue: '#1F558C',\n    lightblue: '#62D7F7',\n    lightnavy: '#799EAD',\n    // red: '#E02225',\n    red: '#EE3224',\n    green: '#D8EF8B',\n    ifrcgreen: '#87C400',\n    black: '#595454',\n    lightgrey: '#e8e8e8',\n    darkgrey: '#c1c1c1',\n    white: '#fff',\n    olive: '#87C400',\n    purple: '#771966',\n    orange: '#FF3500',\n    pink: '#FB0080'\n}\n\n// option 1\nvar c = ['#00ADED','#003A5A','#62D7F7','#799EAD','#BCCED6']\n// option 2\nvar c = ['#00ADED','#62D7F7','#003A5A','#799EAD','#FFDD00'];\n// option 3\nvar reds = ['#771912','#be281d','#ee3224','#f79992','#fcd6d3'];\nvar blues = ['#09192a','#163b62','#1f558c','#7999ba','#d2dde8'];\n\n\ncolors.regions = {\n        'AP': colors.orange, \n        'AM': colors.lightblue, \n        'EU': colors.ifrcgreen, \n        'ME': '#0A3248', \n        'AF': '#FCD204', \n    }\n\n    colors.regions = {\n        'AP': c[1], \n        'AM': c[0], \n        'EU': c[2], \n        'ME': c[3], \n        'AF': c[4], \n    }\n\n    // colors.regions = {\n    //     'AP': reds[3], \n    //     'AM': reds[0], \n    //     'EU': reds[1], \n    //     'ME': reds[2], \n    //     'AF': reds[4], \n    // }\n\n    // colors.regions_blue = {\n    //     'AP': blues[3], \n    //     'AM': blues[0], \n    //     'EU': blues[1], \n    //     'ME': blues[2], \n    //     'AF': blues[4], \n    // }\n\n\n\nexport default colors;\n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Regionchart.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxCases;\nlet maxDeaths;\nlet maxVaccinations;\nlet xScaleCases; \nlet xScaleDeaths;\nlet xScaleVaccines;\nlet labelWidth; \nconst margin = { left: 20, top: 0, right: 58 };\nlet rcSize; \nlet groupedData = [];\n\nexport function drawRegionchart(data, options, filter) {\n\n    const barSpacing = 0.1;\n\n    // reset region values to zero\n    data.regions.forEach(function(d,i){\n        d.population = 0;\n        d.cumulative_deaths = 0;\n        d.cumulative_cases = 0;\n        d.cumulative_vaccines = 0;\n    })\n\n    // loop through countries and calculate region totals\n    data.country.forEach(function(d,i){\n        data.regions.forEach(function(dd,ii){\n            if((dd.code==d.ifrc_region)){ \n                if((d.population>0)&&(d.who_daily_latest)){\n                    if(d.who_daily_latest.cumulative_cases>0)\n                    dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n                    if(d.who_daily_latest.cumulative_deaths>0)\n                    dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths||0;\n                    dd.population += d.population;\n                }\n                if((d.population>0)&&(d.vaccine_daily_latest)){\n                    dd.cumulative_vaccines += (d.vaccine_daily_latest.total_vaccinations)||0;\n                }\n            }\n        });\n    });\n\n    // calculate regions per 100k values using total population for each region\n    data.regions.forEach(function(d,i){\n        d.cumulative_cases_per_100k = d.cumulative_cases/(d.population/100000)\n        d.cumulative_deaths_per_100k = d.cumulative_deaths/(d.population/100000);\n        d.cumulative_vaccines_per_100k = d.cumulative_vaccines/(d.population/100000);\n        if(!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n    })\n\n    // get maximum values for each series\n    if(options.region_switch=='per100'){\n        // get maximum values for each series\n        maxVaccinations = d3.max(data.regions, function(d,i){\n            return d.cumulative_vaccines_per_100k;\n        })\n\n        maxCases = d3.max(data.regions, function(d,i){\n            return d.cumulative_cases_per_100k;\n        })\n\n        maxDeaths = d3.max(data.regions, function(d,i){\n            return d.cumulative_deaths_per_100k;\n        });\n    } else {\n         // get maximum values for each series\n         maxVaccinations = d3.max(data.regions, function(d,i){\n            return d.cumulative_vaccines;\n        })\n\n        maxCases = d3.max(data.regions, function(d,i){\n            return d.cumulative_cases;\n        })\n\n        maxDeaths = d3.max(data.regions, function(d,i){\n            return d.cumulative_deaths;\n        });\n    }\n\n    // append region chart container\n    const regionChartContainer = d3.select('#layout #region_chart_container').attr('opacity', 0);\n\n    // get dimensions\n    rcSize = {\n        x: regionChartContainer.attr('x'), y: regionChartContainer.attr('y'), width: regionChartContainer.attr('width'), height: regionChartContainer.attr('height')\n    }\n\n    // create svg container\n    const svg = d3.select('#layout').append('g').attr('transform', 'translate('+rcSize.x+', '+rcSize.y+')')\n    .attr('id', 'region_chart');\n\n    // calculate chart row height\n\tvar rowHeight = rcSize.height/(data.regions.length-1); // remove OTH\n\n    // create rows\n    var rows = svg.selectAll('.bar-row')\n\t.data(data.regions.filter(d=>d.code!=='OTH'))\n\t.enter()\n\t.append('g')\n\t.attr('class', 'bar-row')\n\t.attr('transform', function(d,i){\n\t\treturn 'translate(0,' + ((i*rowHeight) + margin.top) + ')';\n\t});\n\n    // create region labels\n    var label = rows.append('text')\n\t.attr('y', rowHeight/2 )\n    .attr('x', margin.left-5)\n\t.attr('class', function(d,i){ return 'bar-labels bar-label-'+d.code })\n\t.style('alignment-baseline', 'middle')\n\t.style('font-size', '11px')\n    .attr('opacity', 1)\n\t.attr('fill', '#000')\n\t.text(function(d,i){\n\t\tif(d.code==='AM') return 'Americas';\n\t\tif(d.code==='EU') return 'Europe';\n\t\tif(d.code==='AF') return 'Africa';\n\t\tif(d.code==='ME') return 'Middle East and North Africa';\n\t\tif(d.code==='AP') return 'Asia-Pacific';\n\t}).style('text-anchor', 'end');\n\n    // get label node width for use in scale\n    labelWidth = rows.node().getBBox().width + margin.left;\n\tlabel.attr('x', labelWidth+89);\n\tlabelWidth = labelWidth + 94;\n    d3.selectAll('.timeBar').attr('opacity',1);\n    \n    // create fading background click area\n    var rowBg = rows.append('rect')\n\t.attr('y', 0)\n\t.attr('x', 0)\n\t.attr('width', labelWidth)\n\t.attr('height', rowHeight-2)\n\t.style('opacity', 0)\n    .attr('fill', 'grey')\n\t.style('cursor', 'pointer')\n\t.attr('class', function(d,i){ return 'bar-bg-'+d.code })\n\t.attr('data-id', function(d,i){ return d.code })\n\t.on('mouseover', function(d){\n\t\td3.select(this).style('opacity', 0.1);\n\t})\n\t.on('mouseout', function(){\n\t\td3.select(this).style('opacity', 0);\n\t})\n\t.on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    });\n\n    // define scales\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([labelWidth, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);\n\n    var bars = rows.append('rect')\n    .attr('id', function(d,i){\n        return 'bar-'+d.code;\n    })\n\t.attr('data-id', function(d,i){ return d.code })\n    .attr('class', 'region-bar')\n    .attr('width', function(d,i){\n        var val = 0;\n        if(options.region_switch=='per100'){\n            if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k);\n            if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k);\n        } else {\n            if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases);\n            if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths);\n            if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines);                \n        }\n        if(!isNaN(val)) { return parseFloat(val) } else { return 0}\n    })\n    .attr('x', labelWidth)\n    .style('outline', 'none')\n    .style('cursor', 'pointer')\n    .attr('y', rowHeight*barSpacing - 1)\n    .attr('height', rowHeight-((rowHeight*barSpacing)*2))\n    .style('fill', function(d){\n        return colors.regions[d.code]\n    })\n    .attr('opacity',1)\n    .on('click', function(d,i){\n        var t = d3.select(this).attr('data-id');\n        filter([t],'regionchart');\n    })\n    .on('mouseover', function(d){\n        var dat = d3.select(this.parentNode).datum();\n        // d3.selectAll('.timeBar:not(.time_'+dat.region).transition().duration(500).attr('opacity', 0.3);\n        // d3.selectAll('.time_'+dat.region).attr('opacity', 1);\n\t})\n\t.on('mouseout', function(){\n        // d3.selectAll('.timeBar').transition().duration(500).attr('opacity', 1);\n\t})\n\n    // create data value labels\n    var dataLabel = rows.append('text')\n\t.text(function(d){\n        var val = 0;\n        if(options.region_switch=='per100'){\n            if(options.region_chart_toggle == 'cases') val = (Math.round(d.cumulative_cases_per_100k));\n            if(options.region_chart_toggle == 'deaths') val = (Math.round(d.cumulative_deaths_per_100k));\n            if(options.region_chart_toggle == 'vaccines') val = (Math.round(d.cumulative_vaccines_per_100k));\n        } else {\n            if(options.region_chart_toggle == 'cases') val = (Math.round(d.cumulative_cases));\n            if(options.region_chart_toggle == 'deaths') val = (Math.round(d.cumulative_deaths));\n            if(options.region_chart_toggle == 'vaccines') val = (Math.round(d.cumulative_vaccines));             \n        }\n        return addCommas(val);\n    })\n\t.attr('id', function(d,i){\n\t\treturn 'data-label'+d.code;\n\t})\n    .attr('data-id', function(d,i){ return d.code })\n\t.attr('class', 'data-label')\n\t.attr('y', rowHeight/2)\n\t.style('alignment-baseline', 'middle')\n\t.style('text-anchor', 'start')\n\t.attr('x', function(d,i){\n        var val = 0;\n        if(options.region_switch=='per100'){\n            if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;\n            if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;\n            if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;\n        } else {\n            if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases)+labelWidth+5;\n            if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths)+labelWidth+5;\n            if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;               \n        }\n        return val;\n    })\n    .attr('opacity', function(d,i){\n        var val = 0;\n        if(options.region_switch=='per100'){\n            if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases_per_100k);\n            if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths_per_100k);\n            if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines_per_100k);\n        } else {\n            if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases);\n            if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths);\n            if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines);\n        }\n        if(val>0){ return 1 } else { return 0}\n    })\n\t.style('fill', '#696969')\n\t.style('font-weight', 'normal')\n\t.style('font-size', '10px');\n\n}\n\nexport function updateRegionchart(options,data) {\n    \n    // reset region values to zero\n    data.regions.forEach(function(d,i){\n        d.population = 0;\n        d.cumulative_deaths = 0;\n        d.cumulative_cases = 0;\n        d.cumulative_vaccines = 0;\n    })\n\n    // loop through countries and calculate region totals\n    data.country.forEach(function(d,i){\n        data.regions.forEach(function(dd,ii){\n            if((dd.code==d.ifrc_region)){ \n                if((d.population>0)&&(d.who_daily_latest)){\n                    if(d.who_daily_latest.cumulative_cases>0)\n                    dd.cumulative_cases += d.who_daily_latest.cumulative_cases;\n                    if(d.who_daily_latest.cumulative_deaths>0)\n                    dd.cumulative_deaths += d.who_daily_latest.cumulative_deaths||0;\n                    dd.population += d.population;\n                }\n                if((d.population>0)&&(d.vaccine_daily_latest)){\n                    dd.cumulative_vaccines += (d.vaccine_daily_latest.total_vaccinations)||0;\n                }\n            }\n        });\n    });\n\n    // calculate regions per 100k values using total population for each region\n    data.regions.forEach(function(d,i){\n        d.cumulative_cases_per_100k = d.cumulative_cases/(d.population/100000)\n        d.cumulative_deaths_per_100k = d.cumulative_deaths/(d.population/100000);\n        d.cumulative_vaccines_per_100k = d.cumulative_vaccines/(d.population/100000);\n        if(!isFinite(d.cumulative_cases_per_100k)) d.cumulative_cases_per_100k = 0;\n        if(!isFinite(d.cumulative_deaths_per_100k)) d.cumulative_deaths_per_100k = 0;\n        if(!isFinite(d.cumulative_vaccines_per_100k)) d.cumulative_vaccines_per_100k = 0;\n    })\n\n    if(options.region_switch=='per100'){\n        // get maximum values for each series\n        maxVaccinations = d3.max(data.regions, function(d,i){\n            return d.cumulative_vaccines_per_100k;\n        })\n\n        maxCases = d3.max(data.regions, function(d,i){\n            return d.cumulative_cases_per_100k;\n        })\n\n        maxDeaths = d3.max(data.regions, function(d,i){\n            return d.cumulative_deaths_per_100k;\n        });\n    } else {\n         // get maximum values for each series\n         maxVaccinations = d3.max(data.regions, function(d,i){\n            return d.cumulative_vaccines;\n        })\n\n        maxCases = d3.max(data.regions, function(d,i){\n            return d.cumulative_cases;\n        })\n\n        maxDeaths = d3.max(data.regions, function(d,i){\n            return d.cumulative_deaths;\n        });\n    }\n\n    // redefine scales using new extent\n    xScaleCases = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxCases]);\n\n    xScaleDeaths = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxDeaths]);\n\n    xScaleVaccines = d3.scaleLinear()\n\t.range([0, rcSize.width - margin.right - labelWidth])\n\t.domain([0, maxVaccinations]);\n\n    // update bars\n    if((maxVaccinations==0)&&(maxCases==0)&&(maxDeaths==0)){\n        d3.selectAll('.region-bar')\n        .transition().duration(500)\n        .attr('width', 0);\n\n        d3.selectAll('.data-label')\n        .transition()\n          .duration(500) \n          .attr('x', labelWidth)\n          .attr('opacity', 0);\n    } else {\n        d3.selectAll('.region-bar')\n        .transition().duration(500)\n        .style('fill', function(d){\n            return colors.regions[d.code];\n            if(options.region_chart_toggle=='vaccines'){\n                return colors.regions_blue[d.code]\n            } else {\n                return colors.regions[d.code]\n            }\n        })\n        .attr('width', function(d,i){\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_switch=='per100'){\n                if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k);\n                if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k);\n                if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k);\n            } else {\n                if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases);\n                if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths);\n                if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines);                \n            }\n            if(!isNaN(val)) { return parseFloat(val) } else { return 0}\n        })   \n        d3.selectAll('.data-label')\n        .transition()\n          .duration(500)\n          .tween(\"text\", function(d,i) {\n            var val = 0;\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            if(options.region_switch=='per100'){\n                if(options.region_chart_toggle == 'cases') val = (Math.round(d.cumulative_cases_per_100k));\n                if(options.region_chart_toggle == 'deaths') val = (Math.round(d.cumulative_deaths_per_100k));\n                if(options.region_chart_toggle == 'vaccines') val = (Math.round(d.cumulative_vaccines_per_100k));\n            } else {\n                if(options.region_chart_toggle == 'cases') val = (Math.round(d.cumulative_cases));\n                if(options.region_chart_toggle == 'deaths') val = (Math.round(d.cumulative_deaths));\n                if(options.region_chart_toggle == 'vaccines') val = (Math.round(d.cumulative_vaccines));             \n            }\n            var i = d3.interpolate(Math.floor((Math.random() * 2346) + 9345), val);\n            return function(t) {\n              d3.select(this).text(addCommas(Math.round(i(t))));\n            };\n          })\n        .attr('x', function(d,i){\n            var id = d3.select(this).attr('data-id');\n            var d;\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_switch=='per100'){\n                if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases_per_100k)+labelWidth+5;\n                if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths_per_100k)+labelWidth+5;\n                if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines_per_100k)+labelWidth+5;\n            } else {\n                if(options.region_chart_toggle == 'cases') val = xScaleCases(d.cumulative_cases)+labelWidth+5;\n                if(options.region_chart_toggle == 'deaths') val = xScaleDeaths(d.cumulative_deaths)+labelWidth+5;\n                if(options.region_chart_toggle == 'vaccines') val = xScaleVaccines(d.cumulative_vaccines)+labelWidth+5;               \n            }\n            return val;\n        })\n        .attr('opacity', function(d,i){\n            var d;\n            var id = d3.select(this).attr('data-id');\n            groupedData.forEach(function(dd,ii){\n                if(dd.code == id){\n                    d = dd;\n                }\n            })\n            var val = 0;\n            if(options.region_switch=='per100'){\n                if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases_per_100k);\n                if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths_per_100k);\n                if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines_per_100k);\n            } else {\n                if(options.region_chart_toggle == 'cases') val = (d.cumulative_cases);\n                if(options.region_chart_toggle == 'deaths') val = (d.cumulative_deaths);\n                if(options.region_chart_toggle == 'vaccines') val = (d.cumulative_vaccines);\n            }\n            if(val>0){ return 1 } else { return 0}\n        })\n\n    }\n\n}\n\nexport default drawRegionchart;\n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/HelperFunctions.js",["286","287"],"export function addCommas(nStr){\n    nStr += '';\n    let x = nStr.split('.');\n    let x1 = x[0];\n    let x2 = x.length > 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n\nexport function nFormatter(num, digits = 1) {\n    const lookup = [\n      { value: 1, symbol: \"\" },\n      { value: 1e3, symbol: \"k\" },\n      { value: 1e6, symbol: \"M\" },\n      { value: 1e9, symbol: \"B\" },\n      { value: 1e12, symbol: \"T\" },\n      { value: 1e15, symbol: \"P\" },\n      { value: 1e18, symbol: \"E\" }\n    ];\n    const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    var item = lookup.slice().reverse().find(function(item) {\n      return num >= item.value;\n    });\n    return item ? (num / item.value).toFixed(digits).replace(rx, \"$1\") + item.symbol : \"0\";\n\n\n  }\n  \n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Map.js",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {filter} from './App';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport {addCommas} from './HelperFunctions';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZ28taWZyYyIsImEiOiJjams3b2ZhZWswMGFvM3hxeHp2ZHFhOTRrIn0._pqO9OQ2iNeDGrpopJNjpg';\nvar mapboxStyle = 'mapbox://styles/go-ifrc/ckqrsg27f1cwu17pex8w2de2e';\n\nlet map;\nlet dots; \nlet maxSize = 15; \nlet mapTooltip;\n\nexport function createMap(data, options, filter) {\n\n    d3.select('#map-refresh').attr('display', 'none').style('cursor', 'pointer')\n    .on('click', function(d,i){\n        map.setCenter([8, 22]);\n        map.setZoom(0);\n        d3.select('#map-refresh').attr('display', 'none');\n    })\n    \n    map = new mapboxgl.Map({\n        container: 'map_div', // container ID\n        style: mapboxStyle, // style URL\n        center: [8, 22], // starting position [lng, lat]\n        preserveDrawingBuffer: true,\n        zoom: 0 // starting zoom\n    });\n\n    map.setRenderWorldCopies(false);\n    map.addControl(new mapboxgl.NavigationControl());\n    \n    // disable map zoom when using scroll\n    map.scrollZoom.disable();\n\n    map.on('zoom', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    map.on('touchmove', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    map.on('wheel', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    map.on('drag', function() {\n        d3.select('#map_tooltip').attr('display', 'none');\n        d3.select('#map-refresh').attr('display', 'inline');\n    });\n\n    var container = map.getCanvasContainer();\n\n    var svg = d3\n    .select(container)\n    .append(\"svg\")\n    .attr('id', 'mapoverlay')\n    .attr(\"width\", \"100%\")\n    .attr(\"height\", \"24vw\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", 2);\n\n    mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'inline');\n\n    // dots = svg\n    // .selectAll(\".country-map\")\n    // .data(data.world)\n    // .enter()\n    // .append(\"circle\")\n    // .attr('class', 'country-map')\n    // .attr('id', function(d,i){ return 'country-map-'+d.iso2 })\n    // .attr(\"r\", 0)\n    \n\n    // var maxValue = d3.max(data.country, function(d,i){\n    //     return d[1].cumulative_cases;\n    // })\n\n    // var rScale = d3.scalePow().exponent(0.5)\n    //   .domain([0, maxValue])\n    //   .range([0, 15]);\n\n    // data.country.forEach(function(d,i){\n    //     d3.select('#country-'+d[0]).attr('r', rScale(d[1].cumulative_cases))\n    //     .attr('data-name', d[1].country)\n    // })\n    \n    d3.select(\"#map_div\").append('svg')\n    .attr('width', '18vw')\n    .attr('height', '1.5vw')\n    .attr('id', 'maplegend')\n    .attr('viewBox', '-3 0 227 18')\n    .style('background-color', 'rgba(255,255,255,0.8)')\n\n    document.getElementById(\"maplegend\").appendChild(d3.select('#red_legend').node());\n    document.getElementById(\"maplegend\").appendChild(d3.select('#blue_legend').node());\n    document.getElementById(\"maplegend\").appendChild(d3.select('#bi_legend').node());\n\n    d3.select('#red_legend').attr('transform', 'translate(20,0)');\n    d3.select('#blue_legend').attr('transform', 'translate(20,0)');\n    d3.select('#bi_legend').attr('transform', 'translate(0,0)');\n\n    d3.select('#bi_legend').attr('display', 'none');\n    d3.select('#blue_legend').attr('display', 'none');\n\n    document.getElementById(\"mapoverlay\").appendChild(d3.select('#map_tooltip').node());\n    mapTooltip.attr('display', 'none')  \n\n    map.on('load', function (e) {\n\n        map.setPaintProperty('countries', 'fill-opacity-transition', {duration: 0, delay: 0});\n\n        updateMap(data, options) ;\n\n    });\n\n}\n\nexport function updateMap(data, options) {\n   \n    var duration = 800;\n    var delay = 10;\n\n    map.setLayoutProperty(\n        'countries',\n        'visibility',\n        'none'\n    );\n\n    if(options.map_toggle == 'bi-weekly-change'){\n        \n        var maxIncrease = d3.max(data.country, function(d,i){\n            return d.percent_change;\n        })\n\n        var maxDecrease = d3.min(data.country, function(d,i){\n            return d.percent_change;\n        })\n\n        d3.select('#bi_legend').attr('display', 'inline');\n        d3.select('#blue_legend').attr('display', 'none');\n        d3.select('#red_legend').attr('display', 'none');\n\n        maxIncrease = (Math.ceil(maxIncrease/0.1))*0.1;\n        maxDecrease = (Math.floor(maxDecrease/0.1))*0.1;\n\n        if(maxIncrease>1) maxIncrease = 1;\n        if(maxDecrease<-1) maxDecrease = -1;\n\n        d3.select('#bi_legend_dec_val').attr('text-anchor', 'end');\n        if(maxIncrease<1){\n            d3.select('#bi_legend_inc_val tspan').text(Math.round(maxIncrease*100)+'%');\n        } else {\n            d3.select('#bi_legend_inc_val tspan').text(Math.round(maxIncrease*100)+'% +');\n        }\n        if(maxDecrease>-1){\n            d3.select('#bi_legend_dec_val tspan').text(Math.round(Math.abs(maxDecrease)*100)+'%').attr('dx', 14);\n        } else {\n            d3.select('#bi_legend_dec_val tspan').text(Math.round(Math.abs(maxDecrease)*100)+'% +').attr('dx', 14);\n        }\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([-1, 0, 1])\n        // .range([maxSize, 0, maxSize])\n        // .clamp(true);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].percent_change))\n        //     .style('stroke', function(){\n        //         // if(d[1].percent_change>1){ return '#E02225'} else { return '#1F558C'}\n        //         return '#FFF'\n        //     }).style('fill', function(){\n        //         if(d[1].percent_change>0){ return colors.red } else { return colors.blue}\n        //     })\n        // })\n\n        var colorScale = d3.scaleLinear()\n        // .domain([-1, 0, 1])\n        .domain([maxDecrease, 0, maxIncrease])\n        .range([colors.blue, colors.lightgrey, colors.red])\n        // .clamp(true);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            if(isFinite(d.percent_change)){\n                fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n                fillColorArray.push(colorScale(d.percent_change));\n            }\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        }\n        \n    }\n\n    if(options.map_toggle == 'cases'){\n\n        var maxValue = d3.max(data.country, function(d,i){\n            return d.cumulative_cases_per_100k;\n        });\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'none');\n        d3.select('#red_legend').attr('display', 'inline');\n\n        d3.select('#red_legend_title tspan').text('Cases per 100k');\n\n        if(maxValue>1000){\n            maxValue = (Math.ceil(maxValue/100))*100;\n        } else {\n            maxValue = (Math.ceil(maxValue/10))*10;\n        }\n\n        d3.select('#red_legend_val tspan').text(addCommas(maxValue));\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([0, maxValue])\n        // .range([0, maxSize]);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].cumulative_cases))\n        //     .style('fill', colors.red)\n        //     .style('stroke', '#FFF');\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, maxValue])\n        .range([colors.lightgrey, colors.red]);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n            fillColorArray.push(colorScale(d.cumulative_cases_per_100k));\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        }\n\n    }\n    \n    if(options.map_toggle == 'deaths'){\n\n        var maxValue = d3.max(data.country, function(d,i){\n            return d.cumulative_deaths_per_100k;\n        })\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'none');\n        d3.select('#red_legend').attr('display', 'inline');\n\n        d3.select('#red_legend_title tspan').text('Deaths per 100k');\n\n        if(maxValue>1000){\n            maxValue = (Math.ceil(maxValue/100))*100;\n        } else {\n            maxValue = (Math.ceil(maxValue/10))*10;\n        }\n\n        d3.select('#red_legend_val tspan').text(addCommas(maxValue));\n\n        // var rScale = d3.scalePow().exponent(0.5)\n        // .domain([0, maxValue])\n        // .range([0, maxSize]);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.country.forEach(function(d,i){\n        //     d3.select('#country-map-'+d[0])\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(d[1].cumulative_deaths))\n        //     .style('fill', colors.red)\n        //     .style('stroke', '#FFF');\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, maxValue])\n        .range([colors.lightgrey, colors.red]);\n\n        var fillColorArray = ['case']\n\n        data.country.forEach(function(d,i){\n            fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n            fillColorArray.push(colorScale(d.cumulative_deaths_per_100k));\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        }\n    }\n\n    if(options.map_toggle == 'percent-fully-vaccinated'){\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'inline');\n        d3.select('#red_legend').attr('display', 'none');\n        d3.select('#blue_legend_title tspan').text('Percent fully vaccinated');\n        d3.select('#blue_legend_val tspan').text('100%');\n\n        // var rScale = d3.scalePow().exponent(0.55)\n        // .domain([0, 1])\n        // .range([1, maxSize])\n        // .clamp(true);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.vGroup.forEach(function(d,i){\n        //     var peoplevaccinated = parseFloat(d[1][0].people_fully_vaccinated_per_hundred)/100;\n        //     if(isNaN(peoplevaccinated)) peoplevaccinated = 0;\n        //     d3.select('#country-map-'+d[1][0].country_code)\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(peoplevaccinated))\n        //     .style('stroke', '#FFF')\n        //     .style('fill', function(){\n        //         return colors.blue;\n        //     })\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, 1])\n        .range([colors.lightgrey, colors.blue])\n        .clamp(true);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            var peoplevaccinated = parseFloat(d.people_fully_vaccinated_per_hundred)/100;\n            if(isNaN(peoplevaccinated)) peoplevaccinated = 0;\n            if(peoplevaccinated>0){\n                if(d.country_code) fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n                if(d.country_code) fillColorArray.push(colorScale(peoplevaccinated));\n            }\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        } else {\n            map.setPaintProperty(\n                'countries', \n                'fill-color',\n                colors.darkgrey\n            );\n        }\n        \n    }\n\n    if(options.map_toggle == 'percent-vaccine-acceptance'){\n\n        d3.select('#bi_legend').attr('display', 'none');\n        d3.select('#blue_legend').attr('display', 'inline');\n        d3.select('#red_legend').attr('display', 'none');\n        d3.select('#blue_legend_title tspan').text('% vaccine acceptance');\n        d3.select('#blue_legend_val tspan').text('100%');\n        \n        // var rScale = d3.scalePow().exponent(1)\n        // .domain([0, 1])\n        // .range([1, maxSize*.7])\n        // // .clamp(true);\n\n        // d3.selectAll('.country-map').transition('c').duration(duration/1.7).attr('r',0);\n\n        // data.vGroup.forEach(function(d,i){\n        //     var vaccine_acceptance_percent = parseFloat(d[1][0].vaccine_acceptance_percent/100);\n            \n        //     if(isNaN(vaccine_acceptance_percent)) vaccine_acceptance_percent = 0;\n\n        //     d3.select('#country-map-'+d[1][0].country_code)\n        //     .transition('c').duration(duration).delay(delay)\n        //     .attr('r', rScale(vaccine_acceptance_percent))\n        //     .style('stroke', '#FFF')\n        //     .style('fill', function(){\n        //         return colors.blue;\n        //     })\n        // })\n\n        var colorScale = d3.scaleLinear()\n        .domain([0, 1])\n        .range([colors.lightgrey, colors.blue])\n        .clamp(true);\n\n        var fillColorArray = ['case']\n        data.country.forEach(function(d,i){\n            var vaccine_acceptance_percent = parseFloat(d.vaccine_acceptance_percent)/100;\n            if(isNaN(vaccine_acceptance_percent)) vaccine_acceptance_percent = 0;\n            if(vaccine_acceptance_percent>0){\n                if(d.country_code) fillColorArray.push(['==', ['get', \"iso\"], d.country_code]);\n                if(d.country_code) fillColorArray.push(colorScale(vaccine_acceptance_percent));\n            }\n        });\n\n        if(fillColorArray.length>1){\n            fillColorArray.push(colors.darkgrey)\n            map.setPaintProperty(\n                'countries', \n                'fill-color', fillColorArray\n            );\n        } else {\n            map.setPaintProperty(\n                'countries', \n                'fill-color',\n                colors.darkgrey\n            );\n        }\n\n    }\n\n    mapTooltip.attr('display', 'none')  \n\n    map.on('mousemove', function (e) {\n        var features = map.queryRenderedFeatures(e.point);\n         \n        var displayProperties = [\n        'type',\n        'properties',\n        'id',\n        'layer',\n        'source',\n        'sourceLayer',\n        'state'\n        ];\n         \n        if((features.length==1)&&(features[0].layer.id=='countries')){\n\n            var id = features[0].properties.iso;\n            var countryfiltered = data.equity_data.filter(d=>d.country_iso2 == id);\n            var countryName;\n            if(countryfiltered[0]) countryName = countryfiltered[0].country_name;\n    \n            mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n  \n            if(mapTooltip.select('#map_tooltip_name tspan').text().length==0){\n                mapTooltip\n                .attr('display', 'none');\n            };\n            \n            if(options.map_toggle=='cases'){\n                var country = data.country.filter(d=>d.country_code == id)[0];\n                if((!country)||(country.length==0)) return false;\n                mapTooltip.select('#map_tooltip_val tspan').text(addCommas(Math.round(country.cumulative_cases_per_100k))+' cases per 100k');\n            }\n    \n            if(options.map_toggle=='deaths'){\n                var country = data.country.filter(d=>d.country_code == id)[0];\n                if((!country)||(country.length==0)) return false;\n                mapTooltip.select('#map_tooltip_val tspan').text(addCommas(Math.round(country.cumulative_deaths_per_100k))+' deaths per 100k');\n            }\n    \n            if(options.map_toggle=='bi-weekly-change'){\n                var country = data.country.filter(d=>d.country_code == id);\n                if((!country)||(country.length==0)) return false;\n                var val = ((country[0].percent_change)*100).toFixed(1);\n                var str = '';\n                if(val>=0){\n                    str = '% increase';\n                } else {\n                    str = '% decrease';\n                }\n                mapTooltip.select('#map_tooltip_val tspan').text(Math.abs(val)+str);\n            }\n    \n            if(options.map_toggle=='percent-fully-vaccinated'){\n                var country = data.country.filter(d=>d.country_code == id);\n                if((!country)||(country.length==0)) return false;\n                var val = parseFloat(country[0].people_fully_vaccinated_per_hundred).toFixed(1)\n                if(isNaN(val)){ val = '-' } else { val = val + '% fully vaccinated'}\n                mapTooltip.select('#map_tooltip_val tspan').text(val);\n            }\n    \n            if(options.map_toggle=='percent-vaccine-acceptance'){\n                var country = data.country.filter(d=>d.country_code == id);\n                if((!country)||(country.length==0)) return false;\n                var val = parseFloat(country[0].vaccine_acceptance_percent).toFixed(1)\n                if(isNaN(val)){ val = '-' } else { val = val + '% vaccine acceptance'}\n                mapTooltip.select('#map_tooltip_val tspan').text(val);\n            }\n    \n            var str = mapTooltip.select('#map_tooltip_val tspan').text();\n            if(str.includes('NaN')) mapTooltip.attr('display', 'none')\n\n            d3.select('#map_tooltip_bg').attr('width', 20)\n\n            var scale = window.innerWidth/1329;\n            mapTooltip\n            .attr('display', 'inline')\n            .attr('transform', 'translate('+(e.point.x+20)+','+e.point.y+')scale('+scale+')');\n            var heightOffset = mapTooltip.node().getBBox();\n\n            var bbox = d3.select('#map_tooltip').node().getBBox();\n            d3.select('#map_tooltip_bg').attr('width', (parseFloat(bbox.width)+2))\n\n            if(mapTooltip.select('#map_tooltip_name tspan').text().length==0){\n                mapTooltip\n                .attr('display', 'none');\n            };\n\n            // mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\n        } else {\n            mapTooltip.attr('display', 'none')\n        }\n    }).on('mouseout', function(event){\n        if(event.toElement=='tspan') return false;\n        mapTooltip.attr('display', 'none');\n    })\n\n\n    // function render() {\n    //     dots\n    //       .attr(\"cx\", function(d) {\n    //         return project(([d.lng, d.lat])).x;\n    //       })\n    //       .attr(\"cy\", function(d) {\n    //         return project(([d.lng, d.lat])).y;\n    //       });\n    //   }\n\n    // map.on(\"viewreset\", render);\n    // map.on(\"move\", render);\n    // map.on(\"moveend\", render);\n    // render(); // Call once to render\n\n    // tooltips\n\n    // var mapTooltip = d3.select('#map_tooltip').attr('opacity', 1).attr('transform', 'translate(0,0)').attr('display', 'none');\n\n    // d3.selectAll('.country-map').on('mousemove', function(event, d){\n\n    //     var id = d3.select(this).attr('id').substr(12,2);\n    //     var countryfiltered = data.equity_data.filter(d=>d.country_iso2 == id);\n    //     var countryName;\n    //     if(countryfiltered[0]) countryName = countryfiltered[0].country_name;\n\n    //     mapTooltip.select('#map_tooltip_name tspan').text(countryName);\n\n    //     if(options.map_toggle=='cases'){\n    //         var country = data.country.filter(d=>d.country_code == id)[0];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_cases)+' cases');\n    //     }\n\n    //     if(options.map_toggle=='deaths'){\n    //         var country = data.country.filter(d=>d.country_code == id)[0];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(addCommas(country[1].cumulative_deaths)+' deaths');\n    //     }\n\n    //     if(options.map_toggle=='bi-weekly-change'){\n    //         var country = data.country.filter(d=>d.country_code == id)[0];\n    //         if((!country)||(country.length==0)) return false;\n    //         var val = ((country[1].percent_change)*100).toFixed(1);\n    //         var str = '';\n    //         if(val>=0){\n    //             str = '% increase';\n    //         } else {\n    //             str = '% decrease';\n    //         }\n    //         mapTooltip.select('#map_tooltip_val tspan').text(Math.abs(val)+str);\n    //     }\n\n    //     if(options.map_toggle=='percent-fully-vaccinated'){\n    //         var country = data.vGroup.filter(d=>d[1][0].country_code == id)[0][1];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(parseFloat(country[0].people_fully_vaccinated_per_hundred).toFixed(1)+'% fully vaccinated');\n    //     }\n\n    //     if(options.map_toggle=='percent-vaccine-acceptance'){\n    //         var country = data.vGroup.filter(d=>d[1][0].country_code == id)[0][1];\n    //         if((!country)||(country.length==0)) return false;\n    //         mapTooltip.select('#map_tooltip_val tspan').text(parseFloat(country[0].vaccine_acceptance_percent).toFixed(1)+'% vaccine acceptance');\n    //     }\n\n\n    //     d3.select('#map_tooltip_bg').attr('width', 0)\n\n    //     var bbox = mapTooltip.node().getBBox();\n    //     d3.select('#map_tooltip_bg').attr('width', (parseFloat(bbox.width)+2))\n    //     var scale = window.innerWidth/1329;\n    //     mapTooltip\n    //     .attr('display', 'inline')\n    //     .attr('transform', 'translate('+project(([d.lng, d.lat])).x+','+project(([d.lng, d.lat])).y+')scale('+scale+')');\n\n    //     var heightOffset = mapTooltip.node().getBBox();\n    //     mapTooltip.attr('transform', 'translate('+(project(([d.lng, d.lat])).x+3)+','+(project(([d.lng, d.lat])).y+2-heightOffset.height/2)+')scale('+scale+')');\n\n   \n\n    map.setLayoutProperty(\n        'countries',\n        'visibility',\n        'visible'\n    );\n\n}\n\n// function project(d) {\n//     return map.project(new mapboxgl.LngLat(d[0], d[1]));\n// }\n\nexport default createMap;\n","/Users/matthewsmawfield/www/ifrc-covid-dataviz/src/Bubblechart.js",["339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"import * as d3 from \"d3\";\nimport moment from 'moment';\nimport colors from './colors';\nimport {addCommas, nFormatter} from './HelperFunctions';\nimport {filter} from './App';\n\nlet maxX =1000;\nlet maxY = 100;\nlet maxZ = 1000000;\nlet xScale; \nlet yScale; \nlet zScale; \nlet groupedData = [];\nlet width = 600;\nlet height = 233;\nlet x = 35;\nlet y = 58;\nlet bubbles;\n\nexport function drawBubblechart(data, options, filter) {\n\n    maxX = d3.max(data.country, function(d,i){\n        return parseFloat(d.gni_2017);\n    })\n\n    maxY = d3.max(data.country, function(d,i){\n        // if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return parseFloat(d.people_vaccinated_per_hundred);\n        if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return 100;\n        // if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return parseFloat(d.people_fully_vaccinated_per_hundred);\n        if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return 100;\n        if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') return 100;\n    });\n\n    maxZ = d3.max(data.country, function(d,i){\n        return parseFloat(d.population);\n    });\n\n    xScale = d3.scaleLinear()\n\t.range([0, width])\n\t.domain([0, maxX]).nice();\n\n    yScale = d3.scaleLinear()\n\t.range([height, 0])\n\t.domain([0, maxY]);\n\n    zScale = d3.scaleSqrt()\n    .domain([0, maxZ])\n    .range([1, 20]);\n\n    const svg = d3.select('#bubblechart-tab').append('g').attr('transform', 'translate('+x+', '+y+')')\n    .attr('id', 'bubblechart');\n\n    // create y-axis\n    svg.append(\"g\")\n    .attr('id', 'bubbley')\n    .call(d3.axisLeft(yScale).ticks(3).tickSize(3));\n\n    // create x-axis\n    svg.append(\"g\")\n    .attr('id', 'bubblex')\n    .attr('class', 'xAxis')\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(xScale).ticks(4).tickSize(3));\n\n    // Add dots\n    bubbles = d3.select('#bubblechart').selectAll(\".bubble\")\n    .data(data.country)\n    .join(function(enter){\n        enter.append(\"circle\")\n        .attr(\"class\", function(d) { return \"bubble\" })\n        .attr(\"cx\", function (d) { return xScale(parseFloat(d.gni_2017)); } )\n        .attr(\"cy\", function (d) { \n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') return yScale(parseFloat(d.vaccine_acceptance_percent));\n        })\n        .attr(\"r\", function (d) { return zScale(parseFloat(d.population)); } )\n        .style(\"fill\", function (d) { \n            if(options.bubble_chart_color_by == 'region') {\n               if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            } \n            if(options.bubble_chart_color_by == 'hdi') {\n                if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n             }\n             if(options.bubble_chart_color_by == 'inform-severity') {\n                if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n             }\n            return  'transparent';\n        })\n        .style(\"stroke\", function (d) { \n            // if(options.bubble_chart_color_by == 'region') {\n            //    if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            // } \n            // if(options.bubble_chart_color_by == 'hdi') {\n            //     if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n            //  }\n            //  if(options.bubble_chart_color_by == 'inform-severity') {\n            //     if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n            //  }\n            // return  'transparent';\n            return '#FFF';\n        })\n        .style(\"stroke-width\", 1)\n        // .style(\"fill-opacity\", 0.8)\n        .attr('display', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 'none'\n            return 'inline';\n        })\n        .attr('opacity', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 0;\n            return 1;\n        })\n    }, function(update){\n        update.transition().duration(800).attr(\"cx\", function (d) { return xScale(parseFloat(d.gni_2017)); } )\n        .attr(\"cy\", function (d) { \n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') return yScale(parseFloat(d.vaccine_acceptance_percent));\n        })\n        .attr(\"r\", function (d) { return zScale(parseFloat(d.population)); } )\n        .style(\"fill\", function (d) { \n            if(options.bubble_chart_color_by == 'region') {\n               if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            } \n            if(options.bubble_chart_color_by == 'hdi') {\n                if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n             }\n             if(options.bubble_chart_color_by == 'inform-severity') {\n                if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n             }\n            return  'transparent';\n        })\n        .style(\"stroke\", function (d) { \n            // if(options.bubble_chart_color_by == 'region') {\n            //    if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            // } \n            // if(options.bubble_chart_color_by == 'hdi') {\n            //     if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n            //  }\n            //  if(options.bubble_chart_color_by == 'inform-severity') {\n            //     if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n            //  }\n            // return  'transparent';\n            return '#FFF';\n        }).attr('display', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 'none'\n            return 'inline';\n        })\n        .attr('opacity', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 0;\n            return 1;\n        })\n    },function(exit){\n        exit.remove();\n    });\n\n    d3.select('#bubblechart').selectAll(\".bubble\").on('mousemove', function(event, d){\n        d3.select('#bubbleSelectContainer').style('z-index', 1);\n        d3.select('#bubblechart_tooltip_title tspan').text(d.country_name);\n        if(options.bubble_chart_y_axis=='percent-vaccinated-at-least-1-dose'){\n            d3.select('#bubblechart_tooltip_label tspan').text('% vaccinated at least 1 dose');\n            d3.select('#bubblechart_tooltip_value tspan').text(parseFloat(d.people_vaccinated_per_hundred)+'%')\n            .attr(\"text-anchor\", \"end\").attr('dx', 37)\n        }\n        if(options.bubble_chart_y_axis=='percent-fully-vaccinated'){\n            d3.select('#bubblechart_tooltip_label tspan').text('% fully vaccinated');\n            d3.select('#bubblechart_tooltip_value tspan').text(parseFloat(d.people_fully_vaccinated_per_hundred)+'%')\n            .attr(\"text-anchor\", \"end\").attr('dx', 37)\n        }\n        if(options.bubble_chart_y_axis=='percent-vaccine-acceptance'){\n            d3.select('#bubblechart_tooltip_label tspan').text('% vaccine acceptance');\n            d3.select('#bubblechart_tooltip_value tspan').text(parseFloat((d.vaccine_acceptance_percent)).toFixed(2)+'%')\n            .attr(\"text-anchor\", \"end\").attr('dx', 37)\n        }\n        d3.select('#bubblechart_tooltip_gni tspan').text('$'+addCommas(Math.round(parseFloat(d.gni_2017)))).attr(\"text-anchor\", \"end\").attr('dx', 37)\n        d3.select('#bubblechart_tooltip_population tspan').text(nFormatter(Math.round(parseInt(d.population)))).attr(\"text-anchor\", \"end\").attr('dx', 37)\n\n        var coords = d3.pointer( event, (d3.select('#svg').node()));\n        if(coords[0]<1110){\n            d3.select('#bubblechart_tooltip').attr('transform', 'translate('+(coords[0]+20)+','+(coords[1]+y-90)+')').attr('display', 'inline');\n            d3.select('#bubblechart_tooltip_arrow_left').attr('display', 'inline');\n            d3.select('#bubblechart_tooltip_arrow_right').attr('display', 'none');\n        } else {\n            d3.select('#bubblechart_tooltip').attr('transform', 'translate('+(coords[0]-220)+','+(coords[1]+y-90)+')').attr('display', 'inline');\n            d3.select('#bubblechart_tooltip_arrow_left').attr('display', 'none');\n            d3.select('#bubblechart_tooltip_arrow_right').attr('display', 'inline');\n        }\n        d3.selectAll(\".bubble\").attr('opacity', 0.4);\n        d3.select(this).attr('opacity', 1).style('stroke-width', 2);\n    }).on('mouseout', function(event){\n        if(event.toElement=='tspan') return false;\n        d3.select('#bubbleSelectContainer').style('z-index', 2);\n\n        // mapTooltip.attr('display', 'none');\n        d3.select('#bubblechart_tooltip').attr('display', 'none');\n        d3.selectAll(\".bubble\").attr('opacity', 1).style('stroke-width', 1);\n    });\n\n    d3.select('#bubblechart_tooltip').attr('display', 'none');\n\n    d3.select('#bubble_y_axis_label').attr('text-anchor', 'middle').select('tspan').attr('dx', 50);\n    if(options.bubble_chart_y_axis=='percent-vaccinated-at-least-1-dose'){\n        d3.select('#bubble_y_axis_label tspan').text('% vaccinated at least 1 dose');\n    }\n    if(options.bubble_chart_y_axis=='percent-fully-vaccinated'){\n        d3.select('#bubble_y_axis_label tspan').text('% fully vaccinated');\n    }\n    if(options.bubble_chart_y_axis=='percent-vaccine-acceptance'){\n        d3.select('#bubble_y_axis_label tspan').text('% vaccine acceptance');\n    }\n\n\n}\n\nexport function updateBubblechart(data,options,filter) {\n    \n    maxX = d3.max(data.country, function(d,i){\n        return parseFloat(d.gni_2017);\n    })\n\n    maxY = d3.max(data.country, function(d,i){\n        if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return parseFloat(d.people_vaccinated_per_hundred);\n        if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return parseFloat(d.people_fully_vaccinated_per_hundred);\n        if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') return parseFloat(d.vaccine_acceptance_percent);\n    });\n\n    maxZ = d3.max(data.country, function(d,i){\n        return parseFloat(d.population);\n    });\n\n    xScale = d3.scaleLinear()\n\t.range([0, width])\n\t.domain([0, maxX]);\n\n    yScale = d3.scaleLinear()\n\t.range([height, 0])\n\t.domain([0, maxY]);\n\n    zScale = d3.scaleSqrt()\n    .domain([0, maxZ])\n    .range([1, 20]);\n\n    const svg = d3.select('#bubblechart');\n\n    // create y-axis\n    svg.select('#bubbley')\n    .transition().duration(800)\n    .call(d3.axisLeft(yScale).ticks(3));\n\n    // create x-axis\n    svg.select('#bubblex')\n    .transition().duration(800)\n    .call(d3.axisBottom(xScale).ticks(3));\n\n    bubbles = d3.select('#bubblechart').selectAll(\".bubble\")\n    .data(data.country)\n    .join(function(enter){\n        enter.append(\"circle\")\n        .attr(\"cx\", function (d) { return xScale(maxX)})\n        .attr(\"cy\", function (d) { return yScale(maxY)})\n        .attr(\"class\", function(d) { return \"bubble\" })\n        .transition().duration(800)\n        .attr(\"cx\", function (d) { return xScale(parseFloat(d.gni_2017)); } )\n        .attr(\"cy\", function (d) { \n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') return yScale(parseFloat(d.vaccine_acceptance_percent));\n        })\n        .attr(\"r\", function (d) { return zScale(parseFloat(d.population)); } )\n        .style(\"fill\", function (d) { \n            if(options.bubble_chart_color_by == 'region') {\n               if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            } \n            if(options.bubble_chart_color_by == 'hdi') {\n                if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n             }\n             if(options.bubble_chart_color_by == 'inform-severity') {\n                if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n             }\n            return  'transparent';\n        })\n        .style(\"stroke\", function (d) { \n            // if(options.bubble_chart_color_by == 'region') {\n            //    if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            // } \n            // if(options.bubble_chart_color_by == 'hdi') {\n            //     if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n            //  }\n            //  if(options.bubble_chart_color_by == 'inform-severity') {\n            //     if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n            //  }\n            // return  'transparent';\n            return '#FFF';\n        })\n        .style(\"stroke-width\", 1)\n        // .style(\"fill-opacity\", 0.8)\n        .attr('display', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 'none'\n            return 'inline';\n        })\n        .attr('opacity', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 0;\n            return 1;\n        })\n    }, function(update){\n        update\n        .attr('display', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 'none'\n            if(yScale.invert(val)==0) return 'none';\n            return 'inline';\n        }).attr('opacity', function(d,i){\n            var val = 0;\n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') val = yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') val = yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') val = yScale(parseFloat(d.vaccine_acceptance_percent));\n            if(isNaN(val))return 0;\n            return 1;\n        })\n        .style(\"fill\", function (d) { \n            if(options.bubble_chart_color_by == 'region') {\n               if(colors.regions[d.ifrc_region]) return colors.regions[d.ifrc_region];\n            } \n            if(options.bubble_chart_color_by == 'hdi') {\n                if(colors.hdi_category[d.hdi_category]) return colors.hdi_category[d.hdi_category];\n             }\n             if(options.bubble_chart_color_by == 'inform-severity') {\n                if(colors.inform_severity[d.inform_severity]) return colors.inform_severity[d.inform_severity];\n             }\n            return  'transparent';\n        })\n        .transition().duration(800).attr(\"cx\", function (d) { return xScale(parseFloat(d.gni_2017)); } )\n        .attr(\"cy\", function (d) { \n            if(options.bubble_chart_y_axis == 'percent-vaccinated-at-least-1-dose') return yScale(parseFloat(d.people_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-fully-vaccinated') return yScale(parseFloat(d.people_fully_vaccinated_per_hundred));\n            if(options.bubble_chart_y_axis == 'percent-vaccine-acceptance') return yScale(parseFloat(d.vaccine_acceptance_percent));\n        })\n        .attr(\"r\", function (d) { return zScale(parseFloat(d.population)); } )\n        \n        \n    },function(exit){\n        exit.remove();\n    });\n\n    d3.select('#bubblechart').selectAll(\".bubble\").on('mousemove', function(event, d){\n        d3.select('#bubbleSelectContainer').style('z-index', 1);\n        d3.select('#bubblechart_tooltip_title tspan').text(d.country_name);\n        if(options.bubble_chart_y_axis=='percent-vaccinated-at-least-1-dose'){\n            d3.select('#bubblechart_tooltip_label tspan').text('% vaccinated at least 1 dose');\n            d3.select('#bubblechart_tooltip_value tspan').text(parseFloat(d.people_vaccinated_per_hundred)+'%')\n            .attr(\"text-anchor\", \"end\").attr('dx', 37)\n        }\n        if(options.bubble_chart_y_axis=='percent-fully-vaccinated'){\n            d3.select('#bubblechart_tooltip_label tspan').text('% fully vaccinated');\n            d3.select('#bubblechart_tooltip_value tspan').text(parseFloat(d.people_fully_vaccinated_per_hundred)+'%')\n            .attr(\"text-anchor\", \"end\").attr('dx', 37)\n        }\n        if(options.bubble_chart_y_axis=='percent-vaccine-acceptance'){\n            d3.select('#bubblechart_tooltip_label tspan').text('% vaccine acceptance');\n            d3.select('#bubblechart_tooltip_value tspan').text(parseFloat((d.vaccine_acceptance_percent)).toFixed(2)+'%')\n            .attr(\"text-anchor\", \"end\").attr('dx', 37)\n        }\n        d3.select('#bubblechart_tooltip_gni tspan').text('$'+addCommas(Math.round(parseFloat(d.gni_2017)))).attr(\"text-anchor\", \"end\").attr('dx', 37)\n        d3.select('#bubblechart_tooltip_population tspan').text(nFormatter(Math.round(parseInt(d.population)))).attr(\"text-anchor\", \"end\").attr('dx', 37)\n        var coords = d3.pointer( event, (d3.select('#svg').node()));\n        if(coords[0]<1110){\n            d3.select('#bubblechart_tooltip').attr('transform', 'translate('+(coords[0]+20)+','+(coords[1]+y-90)+')').attr('display', 'inline');\n            d3.select('#bubblechart_tooltip_arrow_left').attr('display', 'inline');\n            d3.select('#bubblechart_tooltip_arrow_right').attr('display', 'none');\n        } else {\n            d3.select('#bubblechart_tooltip').attr('transform', 'translate('+(coords[0]-220)+','+(coords[1]+y-90)+')').attr('display', 'inline');\n            d3.select('#bubblechart_tooltip_arrow_left').attr('display', 'none');\n            d3.select('#bubblechart_tooltip_arrow_right').attr('display', 'inline');\n        }\n        d3.selectAll(\".bubble\").attr('opacity', 0.4);\n        d3.select(this).attr('opacity', 1).style('stroke-width', 2);\n    }).on('mouseout', function(event){\n        if(event.toElement=='tspan') return false;\n        d3.select('#bubbleSelectContainer').style('z-index', 2);\n\n        // mapTooltip.attr('display', 'none');\n        d3.select('#bubblechart_tooltip').attr('display', 'none');\n        d3.selectAll(\".bubble\").attr('opacity', 1).style('stroke-width', 1);\n    });\n\n    if(options.bubble_chart_y_axis=='percent-vaccinated-at-least-1-dose'){\n        d3.select('#bubble_y_axis_label tspan').text('% vaccinated at least 1 dose');\n    }\n    if(options.bubble_chart_y_axis=='percent-fully-vaccinated'){\n        d3.select('#bubble_y_axis_label tspan').text('% fully vaccinated');\n    }\n    if(options.bubble_chart_y_axis=='percent-vaccine-acceptance'){\n        d3.select('#bubble_y_axis_label tspan').text('% vaccine acceptance');\n    }\n    \n    \n\n\n}\n\nexport default drawBubblechart;\n",{"ruleId":"412","severity":1,"message":"413","line":11,"column":8,"nodeType":"414","messageId":"415","endLine":11,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":136,"column":10,"nodeType":"418","messageId":"419","endLine":136,"endColumn":12},{"ruleId":"416","severity":1,"message":"417","line":141,"column":10,"nodeType":"418","messageId":"419","endLine":141,"endColumn":12},{"ruleId":"416","severity":1,"message":"417","line":145,"column":10,"nodeType":"418","messageId":"419","endLine":145,"endColumn":12},{"ruleId":"416","severity":1,"message":"417","line":149,"column":10,"nodeType":"418","messageId":"419","endLine":149,"endColumn":12},{"ruleId":"416","severity":1,"message":"417","line":153,"column":18,"nodeType":"418","messageId":"419","endLine":153,"endColumn":20},{"ruleId":"416","severity":1,"message":"417","line":153,"column":37,"nodeType":"418","messageId":"419","endLine":153,"endColumn":39},{"ruleId":"416","severity":1,"message":"420","line":153,"column":46,"nodeType":"418","messageId":"419","endLine":153,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":161,"column":36,"nodeType":"418","messageId":"419","endLine":161,"endColumn":38},{"ruleId":"416","severity":1,"message":"417","line":201,"column":18,"nodeType":"418","messageId":"419","endLine":201,"endColumn":20},{"ruleId":"416","severity":1,"message":"417","line":210,"column":37,"nodeType":"418","messageId":"419","endLine":210,"endColumn":39},{"ruleId":"416","severity":1,"message":"417","line":210,"column":73,"nodeType":"418","messageId":"419","endLine":210,"endColumn":75},{"ruleId":"416","severity":1,"message":"417","line":318,"column":18,"nodeType":"418","messageId":"419","endLine":318,"endColumn":20},{"ruleId":"412","severity":1,"message":"421","line":450,"column":9,"nodeType":"414","messageId":"415","endLine":450,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":464,"column":30,"nodeType":"418","messageId":"419","endLine":464,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":464,"column":62,"nodeType":"418","messageId":"419","endLine":464,"endColumn":64},{"ruleId":"416","severity":1,"message":"417","line":464,"column":89,"nodeType":"418","messageId":"419","endLine":464,"endColumn":91},{"ruleId":"416","severity":1,"message":"417","line":464,"column":118,"nodeType":"418","messageId":"419","endLine":464,"endColumn":120},{"ruleId":"416","severity":1,"message":"417","line":466,"column":33,"nodeType":"418","messageId":"419","endLine":466,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":466,"column":68,"nodeType":"418","messageId":"419","endLine":466,"endColumn":70},{"ruleId":"416","severity":1,"message":"417","line":466,"column":98,"nodeType":"418","messageId":"419","endLine":466,"endColumn":100},{"ruleId":"416","severity":1,"message":"417","line":466,"column":130,"nodeType":"418","messageId":"419","endLine":466,"endColumn":132},{"ruleId":"416","severity":1,"message":"417","line":466,"column":159,"nodeType":"418","messageId":"419","endLine":466,"endColumn":161},{"ruleId":"416","severity":1,"message":"417","line":642,"column":20,"nodeType":"418","messageId":"419","endLine":642,"endColumn":22},{"ruleId":"416","severity":1,"message":"417","line":649,"column":20,"nodeType":"418","messageId":"419","endLine":649,"endColumn":22},{"ruleId":"416","severity":1,"message":"417","line":678,"column":26,"nodeType":"418","messageId":"419","endLine":678,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":679,"column":26,"nodeType":"418","messageId":"419","endLine":679,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":680,"column":26,"nodeType":"418","messageId":"419","endLine":680,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":681,"column":26,"nodeType":"418","messageId":"419","endLine":681,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":682,"column":26,"nodeType":"418","messageId":"419","endLine":682,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":683,"column":26,"nodeType":"418","messageId":"419","endLine":683,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":693,"column":15,"nodeType":"418","messageId":"419","endLine":693,"endColumn":17},{"ruleId":"416","severity":1,"message":"417","line":694,"column":38,"nodeType":"418","messageId":"419","endLine":694,"endColumn":40},{"ruleId":"416","severity":1,"message":"417","line":705,"column":38,"nodeType":"418","messageId":"419","endLine":705,"endColumn":40},{"ruleId":"416","severity":1,"message":"417","line":741,"column":22,"nodeType":"418","messageId":"419","endLine":741,"endColumn":24},{"ruleId":"416","severity":1,"message":"417","line":747,"column":22,"nodeType":"418","messageId":"419","endLine":747,"endColumn":24},{"ruleId":"412","severity":1,"message":"422","line":756,"column":9,"nodeType":"414","messageId":"415","endLine":756,"endColumn":14},{"ruleId":"423","severity":1,"message":"424","line":776,"column":13,"nodeType":"425","messageId":"426","endLine":784,"endColumn":8},{"ruleId":"416","severity":1,"message":"417","line":782,"column":23,"nodeType":"418","messageId":"419","endLine":782,"endColumn":25},{"ruleId":"423","severity":1,"message":"427","line":786,"column":18,"nodeType":"425","messageId":"426","endLine":788,"endColumn":8},{"ruleId":"423","severity":1,"message":"428","line":795,"column":13,"nodeType":"425","messageId":"426","endLine":798,"endColumn":8},{"ruleId":"416","severity":1,"message":"417","line":797,"column":30,"nodeType":"418","messageId":"419","endLine":797,"endColumn":32},{"ruleId":"423","severity":1,"message":"427","line":801,"column":18,"nodeType":"425","messageId":"426","endLine":803,"endColumn":8},{"ruleId":"423","severity":1,"message":"429","line":812,"column":22,"nodeType":"425","messageId":"426","endLine":818,"endColumn":8},{"ruleId":"423","severity":1,"message":"428","line":826,"column":13,"nodeType":"425","messageId":"426","endLine":829,"endColumn":8},{"ruleId":"416","severity":1,"message":"417","line":828,"column":30,"nodeType":"418","messageId":"419","endLine":828,"endColumn":32},{"ruleId":"423","severity":1,"message":"427","line":832,"column":18,"nodeType":"425","messageId":"426","endLine":834,"endColumn":8},{"ruleId":"423","severity":1,"message":"429","line":843,"column":22,"nodeType":"425","messageId":"426","endLine":849,"endColumn":8},{"ruleId":"423","severity":1,"message":"428","line":857,"column":13,"nodeType":"425","messageId":"426","endLine":860,"endColumn":8},{"ruleId":"416","severity":1,"message":"417","line":859,"column":30,"nodeType":"418","messageId":"419","endLine":859,"endColumn":32},{"ruleId":"423","severity":1,"message":"427","line":863,"column":18,"nodeType":"425","messageId":"426","endLine":865,"endColumn":8},{"ruleId":"423","severity":1,"message":"429","line":874,"column":22,"nodeType":"425","messageId":"426","endLine":880,"endColumn":8},{"ruleId":"423","severity":1,"message":"428","line":888,"column":13,"nodeType":"425","messageId":"426","endLine":891,"endColumn":8},{"ruleId":"416","severity":1,"message":"417","line":890,"column":30,"nodeType":"418","messageId":"419","endLine":890,"endColumn":32},{"ruleId":"423","severity":1,"message":"427","line":894,"column":18,"nodeType":"425","messageId":"426","endLine":896,"endColumn":8},{"ruleId":"423","severity":1,"message":"429","line":905,"column":22,"nodeType":"425","messageId":"426","endLine":911,"endColumn":8},{"ruleId":"423","severity":1,"message":"428","line":921,"column":13,"nodeType":"425","messageId":"426","endLine":924,"endColumn":8},{"ruleId":"416","severity":1,"message":"417","line":923,"column":30,"nodeType":"418","messageId":"419","endLine":923,"endColumn":32},{"ruleId":"423","severity":1,"message":"427","line":927,"column":18,"nodeType":"425","messageId":"426","endLine":929,"endColumn":8},{"ruleId":"423","severity":1,"message":"430","line":936,"column":13,"nodeType":"425","messageId":"426","endLine":939,"endColumn":8},{"ruleId":"423","severity":1,"message":"427","line":942,"column":18,"nodeType":"425","messageId":"426","endLine":944,"endColumn":8},{"ruleId":"431","severity":1,"message":"432","line":1058,"column":6,"nodeType":"433","endLine":1058,"endColumn":8,"suggestions":"434"},{"ruleId":"412","severity":1,"message":"435","line":1061,"column":9,"nodeType":"414","messageId":"415","endLine":1061,"endColumn":20},{"ruleId":"436","severity":1,"message":"437","line":1115,"column":37,"nodeType":"438","endLine":1115,"endColumn":93},{"ruleId":"436","severity":1,"message":"437","line":1115,"column":151,"nodeType":"438","endLine":1115,"endColumn":252},{"ruleId":"416","severity":1,"message":"417","line":40,"column":29,"nodeType":"418","messageId":"419","endLine":40,"endColumn":31},{"ruleId":"412","severity":1,"message":"439","line":438,"column":9,"nodeType":"414","messageId":"415","endLine":438,"endColumn":20},{"ruleId":"416","severity":1,"message":"417","line":557,"column":30,"nodeType":"418","messageId":"419","endLine":557,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":558,"column":42,"nodeType":"418","messageId":"419","endLine":558,"endColumn":44},{"ruleId":"412","severity":1,"message":"440","line":5,"column":10,"nodeType":"414","messageId":"415","endLine":5,"endColumn":19},{"ruleId":"416","severity":1,"message":"420","line":76,"column":29,"nodeType":"418","messageId":"419","endLine":76,"endColumn":31},{"ruleId":"416","severity":1,"message":"417","line":116,"column":25,"nodeType":"418","messageId":"419","endLine":116,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":116,"column":48,"nodeType":"418","messageId":"419","endLine":116,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":126,"column":25,"nodeType":"418","messageId":"419","endLine":126,"endColumn":27},{"ruleId":"416","severity":1,"message":"420","line":126,"column":89,"nodeType":"418","messageId":"419","endLine":126,"endColumn":91},{"ruleId":"416","severity":1,"message":"417","line":126,"column":113,"nodeType":"418","messageId":"419","endLine":126,"endColumn":115},{"ruleId":"416","severity":1,"message":"417","line":270,"column":33,"nodeType":"418","messageId":"419","endLine":270,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":280,"column":33,"nodeType":"418","messageId":"419","endLine":280,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":290,"column":33,"nodeType":"418","messageId":"419","endLine":290,"endColumn":35},{"ruleId":"412","severity":1,"message":"441","line":297,"column":9,"nodeType":"414","messageId":"415","endLine":297,"endColumn":23},{"ruleId":"412","severity":1,"message":"442","line":304,"column":9,"nodeType":"414","messageId":"415","endLine":304,"endColumn":24},{"ruleId":"412","severity":1,"message":"443","line":311,"column":9,"nodeType":"414","messageId":"415","endLine":311,"endColumn":26},{"ruleId":"416","severity":1,"message":"417","line":555,"column":42,"nodeType":"418","messageId":"419","endLine":555,"endColumn":44},{"ruleId":"416","severity":1,"message":"417","line":558,"column":42,"nodeType":"418","messageId":"419","endLine":558,"endColumn":44},{"ruleId":"416","severity":1,"message":"417","line":561,"column":42,"nodeType":"418","messageId":"419","endLine":561,"endColumn":44},{"ruleId":"416","severity":1,"message":"417","line":598,"column":42,"nodeType":"418","messageId":"419","endLine":598,"endColumn":44},{"ruleId":"416","severity":1,"message":"417","line":603,"column":42,"nodeType":"418","messageId":"419","endLine":603,"endColumn":44},{"ruleId":"416","severity":1,"message":"417","line":608,"column":42,"nodeType":"418","messageId":"419","endLine":608,"endColumn":44},{"ruleId":"416","severity":1,"message":"417","line":616,"column":61,"nodeType":"418","messageId":"419","endLine":616,"endColumn":63},{"ruleId":"416","severity":1,"message":"417","line":619,"column":61,"nodeType":"418","messageId":"419","endLine":619,"endColumn":63},{"ruleId":"416","severity":1,"message":"417","line":625,"column":37,"nodeType":"418","messageId":"419","endLine":625,"endColumn":39},{"ruleId":"416","severity":1,"message":"417","line":644,"column":91,"nodeType":"418","messageId":"419","endLine":644,"endColumn":93},{"ruleId":"416","severity":1,"message":"417","line":649,"column":42,"nodeType":"418","messageId":"419","endLine":649,"endColumn":44},{"ruleId":"412","severity":1,"message":"444","line":655,"column":21,"nodeType":"414","messageId":"415","endLine":655,"endColumn":23},{"ruleId":"416","severity":1,"message":"417","line":662,"column":46,"nodeType":"418","messageId":"419","endLine":662,"endColumn":48},{"ruleId":"412","severity":1,"message":"445","line":681,"column":21,"nodeType":"414","messageId":"415","endLine":681,"endColumn":23},{"ruleId":"416","severity":1,"message":"417","line":687,"column":65,"nodeType":"418","messageId":"419","endLine":687,"endColumn":67},{"ruleId":"416","severity":1,"message":"417","line":691,"column":33,"nodeType":"418","messageId":"419","endLine":691,"endColumn":35},{"ruleId":"446","severity":1,"message":"447","line":704,"column":25,"nodeType":"414","messageId":"448","endLine":704,"endColumn":30},{"ruleId":"412","severity":1,"message":"449","line":714,"column":25,"nodeType":"414","messageId":"415","endLine":714,"endColumn":26},{"ruleId":"412","severity":1,"message":"450","line":729,"column":25,"nodeType":"414","messageId":"415","endLine":729,"endColumn":26},{"ruleId":"416","severity":1,"message":"417","line":754,"column":43,"nodeType":"418","messageId":"419","endLine":754,"endColumn":45},{"ruleId":"412","severity":1,"message":"451","line":834,"column":17,"nodeType":"414","messageId":"415","endLine":834,"endColumn":18},{"ruleId":"416","severity":1,"message":"420","line":918,"column":29,"nodeType":"418","messageId":"419","endLine":918,"endColumn":31},{"ruleId":"416","severity":1,"message":"417","line":951,"column":25,"nodeType":"418","messageId":"419","endLine":951,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":951,"column":48,"nodeType":"418","messageId":"419","endLine":951,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":961,"column":25,"nodeType":"418","messageId":"419","endLine":961,"endColumn":27},{"ruleId":"416","severity":1,"message":"420","line":961,"column":89,"nodeType":"418","messageId":"419","endLine":961,"endColumn":91},{"ruleId":"416","severity":1,"message":"417","line":961,"column":113,"nodeType":"418","messageId":"419","endLine":961,"endColumn":115},{"ruleId":"412","severity":1,"message":"452","line":1019,"column":11,"nodeType":"414","messageId":"415","endLine":1019,"endColumn":19},{"ruleId":"412","severity":1,"message":"453","line":1023,"column":44,"nodeType":"414","messageId":"415","endLine":1023,"endColumn":54},{"ruleId":"416","severity":1,"message":"417","line":1066,"column":33,"nodeType":"418","messageId":"419","endLine":1066,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":1076,"column":33,"nodeType":"418","messageId":"419","endLine":1076,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":1086,"column":33,"nodeType":"418","messageId":"419","endLine":1086,"endColumn":35},{"ruleId":"412","severity":1,"message":"441","line":1091,"column":9,"nodeType":"414","messageId":"415","endLine":1091,"endColumn":23},{"ruleId":"412","severity":1,"message":"442","line":1097,"column":9,"nodeType":"414","messageId":"415","endLine":1097,"endColumn":24},{"ruleId":"412","severity":1,"message":"443","line":1103,"column":9,"nodeType":"414","messageId":"415","endLine":1103,"endColumn":26},{"ruleId":"454","severity":1,"message":"455","line":1149,"column":9,"nodeType":"456","messageId":"457","endLine":1149,"endColumn":22},{"ruleId":"416","severity":1,"message":"417","line":1187,"column":26,"nodeType":"418","messageId":"419","endLine":1187,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":1240,"column":27,"nodeType":"418","messageId":"419","endLine":1240,"endColumn":29},{"ruleId":"412","severity":1,"message":"458","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":22},{"ruleId":"412","severity":1,"message":"459","line":4,"column":10,"nodeType":"414","messageId":"415","endLine":4,"endColumn":14},{"ruleId":"416","severity":1,"message":"420","line":31,"column":26,"nodeType":"418","messageId":"419","endLine":31,"endColumn":28},{"ruleId":"416","severity":1,"message":"420","line":31,"column":49,"nodeType":"418","messageId":"419","endLine":31,"endColumn":51},{"ruleId":"416","severity":1,"message":"420","line":31,"column":72,"nodeType":"418","messageId":"419","endLine":31,"endColumn":74},{"ruleId":"416","severity":1,"message":"420","line":31,"column":95,"nodeType":"418","messageId":"419","endLine":31,"endColumn":97},{"ruleId":"416","severity":1,"message":"420","line":31,"column":118,"nodeType":"418","messageId":"419","endLine":31,"endColumn":120},{"ruleId":"416","severity":1,"message":"417","line":42,"column":23,"nodeType":"418","messageId":"419","endLine":42,"endColumn":25},{"ruleId":"416","severity":1,"message":"417","line":54,"column":30,"nodeType":"418","messageId":"419","endLine":54,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":68,"column":30,"nodeType":"418","messageId":"419","endLine":68,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":69,"column":43,"nodeType":"418","messageId":"419","endLine":69,"endColumn":45},{"ruleId":"416","severity":1,"message":"417","line":76,"column":30,"nodeType":"418","messageId":"419","endLine":76,"endColumn":32},{"ruleId":"416","severity":1,"message":"417","line":84,"column":45,"nodeType":"418","messageId":"419","endLine":84,"endColumn":47},{"ruleId":"416","severity":1,"message":"417","line":84,"column":88,"nodeType":"418","messageId":"419","endLine":84,"endColumn":90},{"ruleId":"416","severity":1,"message":"420","line":194,"column":26,"nodeType":"418","messageId":"419","endLine":194,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":239,"column":25,"nodeType":"418","messageId":"419","endLine":239,"endColumn":27},{"ruleId":"412","severity":1,"message":"460","line":287,"column":9,"nodeType":"414","messageId":"415","endLine":287,"endColumn":19},{"ruleId":"412","severity":1,"message":"461","line":292,"column":13,"nodeType":"414","messageId":"415","endLine":292,"endColumn":18},{"ruleId":"412","severity":1,"message":"462","line":293,"column":13,"nodeType":"414","messageId":"415","endLine":293,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":400,"column":25,"nodeType":"418","messageId":"419","endLine":400,"endColumn":27},{"ruleId":"446","severity":1,"message":"463","line":423,"column":9,"nodeType":"414","messageId":"448","endLine":423,"endColumn":29},{"ruleId":"416","severity":1,"message":"417","line":443,"column":21,"nodeType":"418","messageId":"419","endLine":443,"endColumn":23},{"ruleId":"416","severity":1,"message":"417","line":467,"column":21,"nodeType":"418","messageId":"419","endLine":467,"endColumn":23},{"ruleId":"416","severity":1,"message":"420","line":468,"column":32,"nodeType":"418","messageId":"419","endLine":468,"endColumn":34},{"ruleId":"446","severity":1,"message":"464","line":36,"column":5,"nodeType":"414","messageId":"448","endLine":36,"endColumn":6},{"ruleId":"412","severity":1,"message":"465","line":38,"column":5,"nodeType":"414","messageId":"415","endLine":38,"endColumn":9},{"ruleId":"412","severity":1,"message":"466","line":39,"column":5,"nodeType":"414","messageId":"415","endLine":39,"endColumn":10},{"ruleId":"412","severity":1,"message":"467","line":2,"column":8,"nodeType":"414","messageId":"415","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"468","line":5,"column":9,"nodeType":"414","messageId":"415","endLine":5,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":33,"column":24,"nodeType":"418","messageId":"419","endLine":33,"endColumn":26},{"ruleId":"416","severity":1,"message":"417","line":59,"column":29,"nodeType":"418","messageId":"419","endLine":59,"endColumn":31},{"ruleId":"412","severity":1,"message":"469","line":136,"column":9,"nodeType":"414","messageId":"415","endLine":136,"endColumn":14},{"ruleId":"412","severity":1,"message":"470","line":170,"column":9,"nodeType":"414","messageId":"415","endLine":170,"endColumn":13},{"ruleId":"416","severity":1,"message":"417","line":178,"column":33,"nodeType":"418","messageId":"419","endLine":178,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":179,"column":44,"nodeType":"418","messageId":"419","endLine":179,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":180,"column":44,"nodeType":"418","messageId":"419","endLine":180,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":181,"column":44,"nodeType":"418","messageId":"419","endLine":181,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":183,"column":44,"nodeType":"418","messageId":"419","endLine":183,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":184,"column":44,"nodeType":"418","messageId":"419","endLine":184,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":185,"column":44,"nodeType":"418","messageId":"419","endLine":185,"endColumn":46},{"ruleId":"412","severity":1,"message":"471","line":203,"column":13,"nodeType":"414","messageId":"415","endLine":203,"endColumn":16},{"ruleId":"412","severity":1,"message":"472","line":212,"column":9,"nodeType":"414","messageId":"415","endLine":212,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":215,"column":33,"nodeType":"418","messageId":"419","endLine":215,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":216,"column":44,"nodeType":"418","messageId":"419","endLine":216,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":217,"column":44,"nodeType":"418","messageId":"419","endLine":217,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":218,"column":44,"nodeType":"418","messageId":"419","endLine":218,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":220,"column":44,"nodeType":"418","messageId":"419","endLine":220,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":221,"column":44,"nodeType":"418","messageId":"419","endLine":221,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":222,"column":44,"nodeType":"418","messageId":"419","endLine":222,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":236,"column":33,"nodeType":"418","messageId":"419","endLine":236,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":237,"column":44,"nodeType":"418","messageId":"419","endLine":237,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":238,"column":44,"nodeType":"418","messageId":"419","endLine":238,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":239,"column":44,"nodeType":"418","messageId":"419","endLine":239,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":241,"column":44,"nodeType":"418","messageId":"419","endLine":241,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":242,"column":44,"nodeType":"418","messageId":"419","endLine":242,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":243,"column":44,"nodeType":"418","messageId":"419","endLine":243,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":249,"column":33,"nodeType":"418","messageId":"419","endLine":249,"endColumn":35},{"ruleId":"416","severity":1,"message":"417","line":250,"column":44,"nodeType":"418","messageId":"419","endLine":250,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":251,"column":44,"nodeType":"418","messageId":"419","endLine":251,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":252,"column":44,"nodeType":"418","messageId":"419","endLine":252,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":254,"column":44,"nodeType":"418","messageId":"419","endLine":254,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":255,"column":44,"nodeType":"418","messageId":"419","endLine":255,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":256,"column":44,"nodeType":"418","messageId":"419","endLine":256,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":279,"column":24,"nodeType":"418","messageId":"419","endLine":279,"endColumn":26},{"ruleId":"416","severity":1,"message":"417","line":304,"column":29,"nodeType":"418","messageId":"419","endLine":304,"endColumn":31},{"ruleId":"416","severity":1,"message":"417","line":346,"column":24,"nodeType":"418","messageId":"419","endLine":346,"endColumn":26},{"ruleId":"416","severity":1,"message":"417","line":346,"column":39,"nodeType":"418","messageId":"419","endLine":346,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":346,"column":55,"nodeType":"418","messageId":"419","endLine":346,"endColumn":57},{"ruleId":"454","severity":1,"message":"455","line":361,"column":13,"nodeType":"473","messageId":"457","endLine":365,"endColumn":14},{"ruleId":"416","severity":1,"message":"417","line":361,"column":43,"nodeType":"418","messageId":"419","endLine":361,"endColumn":45},{"ruleId":"446","severity":1,"message":"474","line":369,"column":17,"nodeType":"414","messageId":"448","endLine":369,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":371,"column":28,"nodeType":"418","messageId":"419","endLine":371,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":376,"column":37,"nodeType":"418","messageId":"419","endLine":376,"endColumn":39},{"ruleId":"416","severity":1,"message":"417","line":377,"column":48,"nodeType":"418","messageId":"419","endLine":377,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":378,"column":48,"nodeType":"418","messageId":"419","endLine":378,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":379,"column":48,"nodeType":"418","messageId":"419","endLine":379,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":381,"column":48,"nodeType":"418","messageId":"419","endLine":381,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":382,"column":48,"nodeType":"418","messageId":"419","endLine":382,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":383,"column":48,"nodeType":"418","messageId":"419","endLine":383,"endColumn":50},{"ruleId":"446","severity":1,"message":"474","line":393,"column":17,"nodeType":"414","messageId":"448","endLine":393,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":395,"column":28,"nodeType":"418","messageId":"419","endLine":395,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":399,"column":37,"nodeType":"418","messageId":"419","endLine":399,"endColumn":39},{"ruleId":"416","severity":1,"message":"417","line":400,"column":48,"nodeType":"418","messageId":"419","endLine":400,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":401,"column":48,"nodeType":"418","messageId":"419","endLine":401,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":402,"column":48,"nodeType":"418","messageId":"419","endLine":402,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":404,"column":48,"nodeType":"418","messageId":"419","endLine":404,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":405,"column":48,"nodeType":"418","messageId":"419","endLine":405,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":406,"column":48,"nodeType":"418","messageId":"419","endLine":406,"endColumn":50},{"ruleId":"446","severity":1,"message":"475","line":408,"column":17,"nodeType":"414","messageId":"448","endLine":408,"endColumn":18},{"ruleId":"446","severity":1,"message":"474","line":415,"column":17,"nodeType":"414","messageId":"448","endLine":415,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":417,"column":28,"nodeType":"418","messageId":"419","endLine":417,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":422,"column":37,"nodeType":"418","messageId":"419","endLine":422,"endColumn":39},{"ruleId":"416","severity":1,"message":"417","line":423,"column":48,"nodeType":"418","messageId":"419","endLine":423,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":424,"column":48,"nodeType":"418","messageId":"419","endLine":424,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":425,"column":48,"nodeType":"418","messageId":"419","endLine":425,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":427,"column":48,"nodeType":"418","messageId":"419","endLine":427,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":428,"column":48,"nodeType":"418","messageId":"419","endLine":428,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":429,"column":48,"nodeType":"418","messageId":"419","endLine":429,"endColumn":50},{"ruleId":"446","severity":1,"message":"474","line":434,"column":17,"nodeType":"414","messageId":"448","endLine":434,"endColumn":18},{"ruleId":"416","severity":1,"message":"417","line":437,"column":28,"nodeType":"418","messageId":"419","endLine":437,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":442,"column":37,"nodeType":"418","messageId":"419","endLine":442,"endColumn":39},{"ruleId":"416","severity":1,"message":"417","line":443,"column":48,"nodeType":"418","messageId":"419","endLine":443,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":444,"column":48,"nodeType":"418","messageId":"419","endLine":444,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":445,"column":48,"nodeType":"418","messageId":"419","endLine":445,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":447,"column":48,"nodeType":"418","messageId":"419","endLine":447,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":448,"column":48,"nodeType":"418","messageId":"419","endLine":448,"endColumn":50},{"ruleId":"416","severity":1,"message":"417","line":449,"column":48,"nodeType":"418","messageId":"419","endLine":449,"endColumn":50},{"ruleId":"476","severity":1,"message":"477","line":8,"column":35,"nodeType":"418","messageId":"478","endLine":8,"endColumn":36},{"ruleId":"476","severity":1,"message":"477","line":8,"column":41,"nodeType":"418","messageId":"478","endLine":8,"endColumn":42},{"ruleId":"412","severity":1,"message":"467","line":2,"column":8,"nodeType":"414","messageId":"415","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"468","line":4,"column":9,"nodeType":"414","messageId":"415","endLine":4,"endColumn":15},{"ruleId":"412","severity":1,"message":"479","line":13,"column":5,"nodeType":"414","messageId":"415","endLine":13,"endColumn":9},{"ruleId":"412","severity":1,"message":"480","line":14,"column":5,"nodeType":"414","messageId":"415","endLine":14,"endColumn":12},{"ruleId":"412","severity":1,"message":"481","line":62,"column":9,"nodeType":"414","messageId":"415","endLine":62,"endColumn":12},{"ruleId":"412","severity":1,"message":"482","line":129,"column":9,"nodeType":"414","messageId":"415","endLine":129,"endColumn":17},{"ruleId":"412","severity":1,"message":"422","line":130,"column":9,"nodeType":"414","messageId":"415","endLine":130,"endColumn":14},{"ruleId":"416","severity":1,"message":"417","line":138,"column":27,"nodeType":"418","messageId":"419","endLine":138,"endColumn":29},{"ruleId":"416","severity":1,"message":"417","line":213,"column":27,"nodeType":"418","messageId":"419","endLine":213,"endColumn":29},{"ruleId":"446","severity":1,"message":"483","line":247,"column":13,"nodeType":"414","messageId":"448","endLine":247,"endColumn":23},{"ruleId":"446","severity":1,"message":"484","line":251,"column":13,"nodeType":"414","messageId":"448","endLine":251,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":267,"column":27,"nodeType":"418","messageId":"419","endLine":267,"endColumn":29},{"ruleId":"446","severity":1,"message":"485","line":269,"column":13,"nodeType":"414","messageId":"448","endLine":269,"endColumn":21},{"ruleId":"446","severity":1,"message":"483","line":301,"column":13,"nodeType":"414","messageId":"448","endLine":301,"endColumn":23},{"ruleId":"446","severity":1,"message":"484","line":305,"column":13,"nodeType":"414","messageId":"448","endLine":305,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":321,"column":27,"nodeType":"418","messageId":"419","endLine":321,"endColumn":29},{"ruleId":"446","severity":1,"message":"483","line":348,"column":13,"nodeType":"414","messageId":"448","endLine":348,"endColumn":23},{"ruleId":"446","severity":1,"message":"484","line":353,"column":13,"nodeType":"414","messageId":"448","endLine":353,"endColumn":27},{"ruleId":"416","severity":1,"message":"417","line":379,"column":27,"nodeType":"418","messageId":"419","endLine":379,"endColumn":29},{"ruleId":"446","severity":1,"message":"483","line":408,"column":13,"nodeType":"414","messageId":"448","endLine":408,"endColumn":23},{"ruleId":"446","severity":1,"message":"484","line":413,"column":13,"nodeType":"414","messageId":"448","endLine":413,"endColumn":27},{"ruleId":"412","severity":1,"message":"486","line":444,"column":13,"nodeType":"414","messageId":"415","endLine":444,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":454,"column":28,"nodeType":"418","messageId":"419","endLine":454,"endColumn":30},{"ruleId":"416","severity":1,"message":"417","line":454,"column":55,"nodeType":"418","messageId":"419","endLine":454,"endColumn":57},{"ruleId":"416","severity":1,"message":"417","line":457,"column":77,"nodeType":"418","messageId":"419","endLine":457,"endColumn":79},{"ruleId":"416","severity":1,"message":"417","line":463,"column":74,"nodeType":"418","messageId":"419","endLine":463,"endColumn":76},{"ruleId":"416","severity":1,"message":"417","line":468,"column":34,"nodeType":"418","messageId":"419","endLine":468,"endColumn":36},{"ruleId":"416","severity":1,"message":"417","line":469,"column":69,"nodeType":"418","messageId":"419","endLine":469,"endColumn":71},{"ruleId":"416","severity":1,"message":"417","line":470,"column":47,"nodeType":"418","messageId":"419","endLine":470,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":474,"column":34,"nodeType":"418","messageId":"419","endLine":474,"endColumn":36},{"ruleId":"446","severity":1,"message":"487","line":475,"column":21,"nodeType":"414","messageId":"448","endLine":475,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":475,"column":69,"nodeType":"418","messageId":"419","endLine":475,"endColumn":71},{"ruleId":"416","severity":1,"message":"417","line":476,"column":47,"nodeType":"418","messageId":"419","endLine":476,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":480,"column":34,"nodeType":"418","messageId":"419","endLine":480,"endColumn":36},{"ruleId":"446","severity":1,"message":"487","line":481,"column":21,"nodeType":"414","messageId":"448","endLine":481,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":481,"column":69,"nodeType":"418","messageId":"419","endLine":481,"endColumn":71},{"ruleId":"416","severity":1,"message":"417","line":482,"column":47,"nodeType":"418","messageId":"419","endLine":482,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":493,"column":34,"nodeType":"418","messageId":"419","endLine":493,"endColumn":36},{"ruleId":"446","severity":1,"message":"487","line":494,"column":21,"nodeType":"414","messageId":"448","endLine":494,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":494,"column":69,"nodeType":"418","messageId":"419","endLine":494,"endColumn":71},{"ruleId":"416","severity":1,"message":"417","line":495,"column":47,"nodeType":"418","messageId":"419","endLine":495,"endColumn":49},{"ruleId":"446","severity":1,"message":"488","line":496,"column":21,"nodeType":"414","messageId":"448","endLine":496,"endColumn":24},{"ruleId":"416","severity":1,"message":"417","line":501,"column":34,"nodeType":"418","messageId":"419","endLine":501,"endColumn":36},{"ruleId":"446","severity":1,"message":"487","line":502,"column":21,"nodeType":"414","messageId":"448","endLine":502,"endColumn":28},{"ruleId":"416","severity":1,"message":"417","line":502,"column":69,"nodeType":"418","messageId":"419","endLine":502,"endColumn":71},{"ruleId":"416","severity":1,"message":"417","line":503,"column":47,"nodeType":"418","messageId":"419","endLine":503,"endColumn":49},{"ruleId":"446","severity":1,"message":"488","line":504,"column":21,"nodeType":"414","messageId":"448","endLine":504,"endColumn":24},{"ruleId":"446","severity":1,"message":"489","line":509,"column":17,"nodeType":"414","messageId":"448","endLine":509,"endColumn":20},{"ruleId":"412","severity":1,"message":"490","line":518,"column":17,"nodeType":"414","messageId":"415","endLine":518,"endColumn":29},{"ruleId":"416","severity":1,"message":"417","line":523,"column":74,"nodeType":"418","messageId":"419","endLine":523,"endColumn":76},{"ruleId":"416","severity":1,"message":"417","line":533,"column":27,"nodeType":"418","messageId":"419","endLine":533,"endColumn":29},{"ruleId":"412","severity":1,"message":"467","line":2,"column":8,"nodeType":"414","messageId":"415","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"468","line":5,"column":9,"nodeType":"414","messageId":"415","endLine":5,"endColumn":15},{"ruleId":"412","severity":1,"message":"491","line":13,"column":5,"nodeType":"414","messageId":"415","endLine":13,"endColumn":16},{"ruleId":"416","severity":1,"message":"417","line":28,"column":40,"nodeType":"418","messageId":"419","endLine":28,"endColumn":42},{"ruleId":"416","severity":1,"message":"417","line":30,"column":40,"nodeType":"418","messageId":"419","endLine":30,"endColumn":42},{"ruleId":"416","severity":1,"message":"417","line":31,"column":40,"nodeType":"418","messageId":"419","endLine":31,"endColumn":42},{"ruleId":"416","severity":1,"message":"417","line":73,"column":44,"nodeType":"418","messageId":"419","endLine":73,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":74,"column":44,"nodeType":"418","messageId":"419","endLine":74,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":75,"column":44,"nodeType":"418","messageId":"419","endLine":75,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":79,"column":46,"nodeType":"418","messageId":"419","endLine":79,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":82,"column":46,"nodeType":"418","messageId":"419","endLine":82,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":85,"column":47,"nodeType":"418","messageId":"419","endLine":85,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":107,"column":44,"nodeType":"418","messageId":"419","endLine":107,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":108,"column":44,"nodeType":"418","messageId":"419","endLine":108,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":109,"column":44,"nodeType":"418","messageId":"419","endLine":109,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":115,"column":44,"nodeType":"418","messageId":"419","endLine":115,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":116,"column":44,"nodeType":"418","messageId":"419","endLine":116,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":117,"column":44,"nodeType":"418","messageId":"419","endLine":117,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":124,"column":44,"nodeType":"418","messageId":"419","endLine":124,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":125,"column":44,"nodeType":"418","messageId":"419","endLine":125,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":126,"column":44,"nodeType":"418","messageId":"419","endLine":126,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":130,"column":46,"nodeType":"418","messageId":"419","endLine":130,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":133,"column":46,"nodeType":"418","messageId":"419","endLine":133,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":136,"column":47,"nodeType":"418","messageId":"419","endLine":136,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":155,"column":44,"nodeType":"418","messageId":"419","endLine":155,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":156,"column":44,"nodeType":"418","messageId":"419","endLine":156,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":157,"column":44,"nodeType":"418","messageId":"419","endLine":157,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":163,"column":44,"nodeType":"418","messageId":"419","endLine":163,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":164,"column":44,"nodeType":"418","messageId":"419","endLine":164,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":165,"column":44,"nodeType":"418","messageId":"419","endLine":165,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":176,"column":39,"nodeType":"418","messageId":"419","endLine":176,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":181,"column":39,"nodeType":"418","messageId":"419","endLine":181,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":186,"column":39,"nodeType":"418","messageId":"419","endLine":186,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":207,"column":27,"nodeType":"418","messageId":"419","endLine":207,"endColumn":29},{"ruleId":"416","severity":1,"message":"417","line":218,"column":35,"nodeType":"418","messageId":"419","endLine":218,"endColumn":37},{"ruleId":"416","severity":1,"message":"417","line":221,"column":35,"nodeType":"418","messageId":"419","endLine":221,"endColumn":37},{"ruleId":"416","severity":1,"message":"417","line":224,"column":35,"nodeType":"418","messageId":"419","endLine":224,"endColumn":37},{"ruleId":"416","severity":1,"message":"417","line":238,"column":40,"nodeType":"418","messageId":"419","endLine":238,"endColumn":42},{"ruleId":"416","severity":1,"message":"417","line":239,"column":40,"nodeType":"418","messageId":"419","endLine":239,"endColumn":42},{"ruleId":"416","severity":1,"message":"417","line":240,"column":40,"nodeType":"418","messageId":"419","endLine":240,"endColumn":42},{"ruleId":"412","severity":1,"message":"492","line":271,"column":5,"nodeType":"414","messageId":"415","endLine":271,"endColumn":12},{"ruleId":"416","severity":1,"message":"417","line":281,"column":44,"nodeType":"418","messageId":"419","endLine":281,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":282,"column":44,"nodeType":"418","messageId":"419","endLine":282,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":283,"column":44,"nodeType":"418","messageId":"419","endLine":283,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":287,"column":46,"nodeType":"418","messageId":"419","endLine":287,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":290,"column":46,"nodeType":"418","messageId":"419","endLine":290,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":293,"column":47,"nodeType":"418","messageId":"419","endLine":293,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":315,"column":44,"nodeType":"418","messageId":"419","endLine":315,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":316,"column":44,"nodeType":"418","messageId":"419","endLine":316,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":317,"column":44,"nodeType":"418","messageId":"419","endLine":317,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":323,"column":44,"nodeType":"418","messageId":"419","endLine":323,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":324,"column":44,"nodeType":"418","messageId":"419","endLine":324,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":325,"column":44,"nodeType":"418","messageId":"419","endLine":325,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":333,"column":44,"nodeType":"418","messageId":"419","endLine":333,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":334,"column":44,"nodeType":"418","messageId":"419","endLine":334,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":335,"column":44,"nodeType":"418","messageId":"419","endLine":335,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":337,"column":34,"nodeType":"418","messageId":"419","endLine":337,"endColumn":36},{"ruleId":"416","severity":1,"message":"417","line":341,"column":44,"nodeType":"418","messageId":"419","endLine":341,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":342,"column":44,"nodeType":"418","messageId":"419","endLine":342,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":343,"column":44,"nodeType":"418","messageId":"419","endLine":343,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":348,"column":46,"nodeType":"418","messageId":"419","endLine":348,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":351,"column":46,"nodeType":"418","messageId":"419","endLine":351,"endColumn":48},{"ruleId":"416","severity":1,"message":"417","line":354,"column":47,"nodeType":"418","messageId":"419","endLine":354,"endColumn":49},{"ruleId":"416","severity":1,"message":"417","line":361,"column":44,"nodeType":"418","messageId":"419","endLine":361,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":362,"column":44,"nodeType":"418","messageId":"419","endLine":362,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":363,"column":44,"nodeType":"418","messageId":"419","endLine":363,"endColumn":46},{"ruleId":"416","severity":1,"message":"417","line":375,"column":39,"nodeType":"418","messageId":"419","endLine":375,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":380,"column":39,"nodeType":"418","messageId":"419","endLine":380,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":385,"column":39,"nodeType":"418","messageId":"419","endLine":385,"endColumn":41},{"ruleId":"416","severity":1,"message":"417","line":405,"column":27,"nodeType":"418","messageId":"419","endLine":405,"endColumn":29},{"ruleId":"416","severity":1,"message":"417","line":413,"column":35,"nodeType":"418","messageId":"419","endLine":413,"endColumn":37},{"ruleId":"416","severity":1,"message":"417","line":416,"column":35,"nodeType":"418","messageId":"419","endLine":416,"endColumn":37},{"ruleId":"416","severity":1,"message":"417","line":419,"column":35,"nodeType":"418","messageId":"419","endLine":419,"endColumn":37},"no-unused-vars","'select2' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'totalRecordedPopulation' is assigned a value but never used.","'delay' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'd', 'd', 'd'.","FunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'i'.","Function declared in a loop contains unsafe references to variable(s) 'd'.","Function declared in a loop contains unsafe references to variable(s) 'd', 'd'.","Function declared in a loop contains unsafe references to variable(s) 'd', 'dayFormat'.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["493"],"'selectStyle' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'timechartBg' is assigned a value but never used.","'selection' is defined but never used.","'yAxisCasesText' is assigned a value but never used.","'yAxisDeathsText' is assigned a value but never used.","'yAxisVaccinesText' is assigned a value but never used.","'bw' is assigned a value but never used.","'xx' is assigned a value but never used.","no-redeclare","'event' is already defined.","redeclared","'h' is assigned a value but never used.","'y' is assigned a value but never used.","'w' is assigned a value but never used.","'barWidth' is assigned a value but never used.","'barSpacing' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'group' is defined but never used.","'data' is defined but never used.","'lastRecord' is assigned a value but never used.","'minDt' is assigned a value but never used.","'maxDt' is assigned a value but never used.","'vaccineDataByCountry' is already defined.","'c' is already defined.","'reds' is assigned a value but never used.","'blues' is assigned a value but never used.","'moment' is defined but never used.","'filter' is defined but never used.","'rowBg' is assigned a value but never used.","'bars' is assigned a value but never used.","'dat' is assigned a value but never used.","'dataLabel' is assigned a value but never used.","IfStatement","'d' is already defined.","'i' is already defined.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'dots' is defined but never used.","'maxSize' is assigned a value but never used.","'svg' is assigned a value but never used.","'duration' is assigned a value but never used.","'colorScale' is already defined.","'fillColorArray' is already defined.","'maxValue' is already defined.","'displayProperties' is assigned a value but never used.","'country' is already defined.","'val' is already defined.","'str' is already defined.","'heightOffset' is assigned a value but never used.","'groupedData' is assigned a value but never used.","'bubbles' is assigned a value but never used.",{"desc":"494","fix":"495"},"Update the dependencies array to be: [init]",{"range":"496","text":"497"},[50265,50267],"[init]"]